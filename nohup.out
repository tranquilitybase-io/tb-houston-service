Recreating tb-houston-service_mysql57_1 ... 
[1A[2KRecreating tb-houston-service_mysql57_1 ... [32mdone[0m[1BCreating tb-houston-service_houston-service_1 ... 
[1A[2KCreating tb-houston-service_houston-service_1 ... [32mdone[0m[1BCreating tb-houston-service_gcp-dac_1         ... 
[1A[2KCreating tb-houston-service_gcp-dac_1         ... [32mdone[0m[1BAttaching to tb-houston-service_mysql57_1, tb-houston-service_houston-service_1, tb-houston-service_gcp-dac_1
[36mgcp-dac_1          |[0m Using port: 3100
[33mhouston-service_1  |[0m Using port: 3000
[33mhouston-service_1  |[0m Using DB server IP: localhost
[33mhouston-service_1  |[0m SH SQLALCHEMY_DATABASE_URI: mysql+mysqlconnector://eagle-user:eagle-user-secret-pw@mysql57/eagle_db
[32mmysql57_1          |[0m 2020-05-05 09:19:37+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 5.7.30-1debian10 started.
[33mhouston-service_1  |[0m [2020-05-05 09:19:39 +0000] [6] [DEBUG] Current configuration:
[33mhouston-service_1  |[0m   config: None
[33mhouston-service_1  |[0m   bind: ['0.0.0.0:3000']
[33mhouston-service_1  |[0m   backlog: 2048
[33mhouston-service_1  |[0m   workers: 5
[33mhouston-service_1  |[0m   worker_class: sync
[33mhouston-service_1  |[0m   threads: 1
[33mhouston-service_1  |[0m   worker_connections: 1000
[33mhouston-service_1  |[0m   max_requests: 0
[33mhouston-service_1  |[0m   max_requests_jitter: 0
[33mhouston-service_1  |[0m   timeout: 30
[33mhouston-service_1  |[0m   graceful_timeout: 30
[33mhouston-service_1  |[0m   keepalive: 2
[33mhouston-service_1  |[0m   limit_request_line: 4094
[33mhouston-service_1  |[0m   limit_request_fields: 100
[33mhouston-service_1  |[0m   limit_request_field_size: 8190
[33mhouston-service_1  |[0m   reload: False
[33mhouston-service_1  |[0m   reload_engine: auto
[33mhouston-service_1  |[0m   reload_extra_files: []
[33mhouston-service_1  |[0m   spew: False
[33mhouston-service_1  |[0m   check_config: False
[33mhouston-service_1  |[0m   preload_app: False
[33mhouston-service_1  |[0m   sendfile: None
[33mhouston-service_1  |[0m   reuse_port: False
[33mhouston-service_1  |[0m   chdir: /srv
[33mhouston-service_1  |[0m   daemon: False
[33mhouston-service_1  |[0m   raw_env: []
[33mhouston-service_1  |[0m   pidfile: None
[33mhouston-service_1  |[0m   worker_tmp_dir: None
[33mhouston-service_1  |[0m   user: 0
[33mhouston-service_1  |[0m   group: 0
[33mhouston-service_1  |[0m   umask: 0
[33mhouston-service_1  |[0m   initgroups: False
[33mhouston-service_1  |[0m   tmp_upload_dir: None
[33mhouston-service_1  |[0m   secure_scheme_headers: {'X-FORWARDED-PROTOCOL': 'ssl', 'X-FORWARDED-PROTO': 'https', 'X-FORWARDED-SSL': 'on'}
[33mhouston-service_1  |[0m   forwarded_allow_ips: ['127.0.0.1']
[33mhouston-service_1  |[0m   accesslog: None
[33mhouston-service_1  |[0m   disable_redirect_access_to_syslog: False
[33mhouston-service_1  |[0m   access_log_format: %(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"
[33mhouston-service_1  |[0m   errorlog: -
[33mhouston-service_1  |[0m   loglevel: debug
[33mhouston-service_1  |[0m   capture_output: False
[33mhouston-service_1  |[0m   logger_class: gunicorn.glogging.Logger
[33mhouston-service_1  |[0m   logconfig: None
[33mhouston-service_1  |[0m   logconfig_dict: {}
[33mhouston-service_1  |[0m   syslog_addr: udp://localhost:514
[33mhouston-service_1  |[0m   syslog: False
[33mhouston-service_1  |[0m   syslog_prefix: None
[33mhouston-service_1  |[0m   syslog_facility: user
[33mhouston-service_1  |[0m   enable_stdio_inheritance: False
[33mhouston-service_1  |[0m   statsd_host: None
[33mhouston-service_1  |[0m   dogstatsd_tags: 
[33mhouston-service_1  |[0m   statsd_prefix: 
[33mhouston-service_1  |[0m   proc_name: None
[33mhouston-service_1  |[0m   default_proc_name: app:connex_app
[33mhouston-service_1  |[0m   pythonpath: None
[33mhouston-service_1  |[0m   paste: None
[33mhouston-service_1  |[0m   on_starting: <function OnStarting.on_starting at 0x7f10ca631f28>
[33mhouston-service_1  |[0m   on_reload: <function OnReload.on_reload at 0x7f10ca6490d0>
[33mhouston-service_1  |[0m   when_ready: <function WhenReady.when_ready at 0x7f10ca6491e0>
[33mhouston-service_1  |[0m   pre_fork: <function Prefork.pre_fork at 0x7f10ca6492f0>
[33mhouston-service_1  |[0m   post_fork: <function Postfork.post_fork at 0x7f10ca649400>
[33mhouston-service_1  |[0m   post_worker_init: <function PostWorkerInit.post_worker_init at 0x7f10ca649510>
[33mhouston-service_1  |[0m   worker_int: <function WorkerInt.worker_int at 0x7f10ca649620>
[33mhouston-service_1  |[0m   worker_abort: <function WorkerAbort.worker_abort at 0x7f10ca649730>
[33mhouston-service_1  |[0m   pre_exec: <function PreExec.pre_exec at 0x7f10ca649840>
[33mhouston-service_1  |[0m   pre_request: <function PreRequest.pre_request at 0x7f10ca649950>
[33mhouston-service_1  |[0m   post_request: <function PostRequest.post_request at 0x7f10ca6499d8>
[33mhouston-service_1  |[0m   child_exit: <function ChildExit.child_exit at 0x7f10ca649ae8>
[33mhouston-service_1  |[0m   worker_exit: <function WorkerExit.worker_exit at 0x7f10ca649bf8>
[33mhouston-service_1  |[0m   nworkers_changed: <function NumWorkersChanged.nworkers_changed at 0x7f10ca649d08>
[33mhouston-service_1  |[0m   on_exit: <function OnExit.on_exit at 0x7f10ca649e18>
[33mhouston-service_1  |[0m   proxy_protocol: False
[33mhouston-service_1  |[0m   proxy_allow_ips: ['127.0.0.1']
[33mhouston-service_1  |[0m   keyfile: None
[33mhouston-service_1  |[0m   certfile: None
[33mhouston-service_1  |[0m   ssl_version: 2
[33mhouston-service_1  |[0m   cert_reqs: 0
[33mhouston-service_1  |[0m   ca_certs: None
[33mhouston-service_1  |[0m   suppress_ragged_eofs: True
[33mhouston-service_1  |[0m   do_handshake_on_connect: False
[33mhouston-service_1  |[0m   ciphers: None
[33mhouston-service_1  |[0m   raw_paste_global_conf: []
[33mhouston-service_1  |[0m   strip_header_spaces: False
[32mmysql57_1          |[0m 2020-05-05 09:19:38+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'
[33mhouston-service_1  |[0m [2020-05-05 09:19:39 +0000] [6] [INFO] Starting gunicorn 20.0.4
[33mhouston-service_1  |[0m [2020-05-05 09:19:39 +0000] [6] [DEBUG] Arbiter booted
[33mhouston-service_1  |[0m [2020-05-05 09:19:39 +0000] [6] [INFO] Listening at: http://0.0.0.0:3000 (6)
[33mhouston-service_1  |[0m [2020-05-05 09:19:39 +0000] [6] [INFO] Using worker: sync
[32mmysql57_1          |[0m 2020-05-05 09:19:38+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 5.7.30-1debian10 started.
[33mhouston-service_1  |[0m [2020-05-05 09:19:39 +0000] [9] [INFO] Booting worker with pid: 9
[32mmysql57_1          |[0m 2020-05-05 09:19:38+00:00 [Note] [Entrypoint]: Initializing database files
[33mhouston-service_1  |[0m [2020-05-05 09:19:39 +0000] [10] [INFO] Booting worker with pid: 10
[32mmysql57_1          |[0m 2020-05-05T09:19:38.238232Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
[33mhouston-service_1  |[0m [2020-05-05 09:19:39 +0000] [11] [INFO] Booting worker with pid: 11
[32mmysql57_1          |[0m 2020-05-05T09:19:38.617622Z 0 [Warning] InnoDB: New log files created, LSN=45790
[32mmysql57_1          |[0m 2020-05-05T09:19:38.710804Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.
[32mmysql57_1          |[0m 2020-05-05T09:19:38.728725Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 8b65e21d-8eb1-11ea-8221-0242ac120002.
[32mmysql57_1          |[0m 2020-05-05T09:19:38.730893Z 0 [Warning] Gtid table is not ready to be used. Table 'mysql.gtid_executed' cannot be opened.
[33mhouston-service_1  |[0m [2020-05-05 09:19:39 +0000] [12] [INFO] Booting worker with pid: 12
[33mhouston-service_1  |[0m [2020-05-05 09:19:39 +0000] [13] [INFO] Booting worker with pid: 13
[33mhouston-service_1  |[0m [2020-05-05 09:19:39 +0000] [6] [DEBUG] 5 workers
[36mgcp-dac_1          |[0m [2020-05-05 09:19:39 +0000] [7] [DEBUG] Current configuration:
[36mgcp-dac_1          |[0m   config: None
[36mgcp-dac_1          |[0m   bind: ['0.0.0.0:3100']
[36mgcp-dac_1          |[0m   backlog: 2048
[36mgcp-dac_1          |[0m   workers: 1
[36mgcp-dac_1          |[0m   worker_class: sync
[36mgcp-dac_1          |[0m   threads: 1
[36mgcp-dac_1          |[0m   worker_connections: 1000
[36mgcp-dac_1          |[0m   max_requests: 0
[36mgcp-dac_1          |[0m   max_requests_jitter: 0
[36mgcp-dac_1          |[0m   timeout: 30
[36mgcp-dac_1          |[0m   graceful_timeout: 30
[36mgcp-dac_1          |[0m   keepalive: 2
[36mgcp-dac_1          |[0m   limit_request_line: 4094
[36mgcp-dac_1          |[0m   limit_request_fields: 100
[36mgcp-dac_1          |[0m   limit_request_field_size: 8190
[36mgcp-dac_1          |[0m   reload: False
[36mgcp-dac_1          |[0m   reload_engine: auto
[36mgcp-dac_1          |[0m   reload_extra_files: []
[36mgcp-dac_1          |[0m   spew: False
[36mgcp-dac_1          |[0m   check_config: False
[36mgcp-dac_1          |[0m   preload_app: False
[36mgcp-dac_1          |[0m   sendfile: None
[36mgcp-dac_1          |[0m   reuse_port: False
[36mgcp-dac_1          |[0m   chdir: /srv
[36mgcp-dac_1          |[0m   daemon: False
[36mgcp-dac_1          |[0m   raw_env: []
[36mgcp-dac_1          |[0m   pidfile: None
[36mgcp-dac_1          |[0m   worker_tmp_dir: None
[36mgcp-dac_1          |[0m   user: 0
[36mgcp-dac_1          |[0m   group: 0
[36mgcp-dac_1          |[0m   umask: 0
[36mgcp-dac_1          |[0m   initgroups: False
[36mgcp-dac_1          |[0m   tmp_upload_dir: None
[36mgcp-dac_1          |[0m   secure_scheme_headers: {'X-FORWARDED-PROTOCOL': 'ssl', 'X-FORWARDED-PROTO': 'https', 'X-FORWARDED-SSL': 'on'}
[36mgcp-dac_1          |[0m   forwarded_allow_ips: ['127.0.0.1']
[36mgcp-dac_1          |[0m   accesslog: None
[36mgcp-dac_1          |[0m   disable_redirect_access_to_syslog: False
[36mgcp-dac_1          |[0m   access_log_format: %(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"
[36mgcp-dac_1          |[0m   errorlog: -
[36mgcp-dac_1          |[0m   loglevel: debug
[36mgcp-dac_1          |[0m   capture_output: False
[36mgcp-dac_1          |[0m   logger_class: gunicorn.glogging.Logger
[36mgcp-dac_1          |[0m   logconfig: None
[36mgcp-dac_1          |[0m   logconfig_dict: {}
[36mgcp-dac_1          |[0m   syslog_addr: udp://localhost:514
[36mgcp-dac_1          |[0m   syslog: False
[36mgcp-dac_1          |[0m   syslog_prefix: None
[36mgcp-dac_1          |[0m   syslog_facility: user
[36mgcp-dac_1          |[0m   enable_stdio_inheritance: False
[36mgcp-dac_1          |[0m   statsd_host: None
[36mgcp-dac_1          |[0m   dogstatsd_tags: 
[36mgcp-dac_1          |[0m   statsd_prefix: 
[36mgcp-dac_1          |[0m   proc_name: None
[36mgcp-dac_1          |[0m   default_proc_name: app:connex_app
[36mgcp-dac_1          |[0m   pythonpath: None
[36mgcp-dac_1          |[0m   paste: None
[36mgcp-dac_1          |[0m   on_starting: <function OnStarting.on_starting at 0x7f7b6fbf1f28>
[36mgcp-dac_1          |[0m   on_reload: <function OnReload.on_reload at 0x7f7b6fc0c0d0>
[36mgcp-dac_1          |[0m   when_ready: <function WhenReady.when_ready at 0x7f7b6fc0c1e0>
[36mgcp-dac_1          |[0m   pre_fork: <function Prefork.pre_fork at 0x7f7b6fc0c2f0>
[36mgcp-dac_1          |[0m   post_fork: <function Postfork.post_fork at 0x7f7b6fc0c400>
[36mgcp-dac_1          |[0m   post_worker_init: <function PostWorkerInit.post_worker_init at 0x7f7b6fc0c510>
[36mgcp-dac_1          |[0m   worker_int: <function WorkerInt.worker_int at 0x7f7b6fc0c620>
[36mgcp-dac_1          |[0m   worker_abort: <function WorkerAbort.worker_abort at 0x7f7b6fc0c730>
[36mgcp-dac_1          |[0m   pre_exec: <function PreExec.pre_exec at 0x7f7b6fc0c840>
[36mgcp-dac_1          |[0m   pre_request: <function PreRequest.pre_request at 0x7f7b6fc0c950>
[36mgcp-dac_1          |[0m   post_request: <function PostRequest.post_request at 0x7f7b6fc0c9d8>
[36mgcp-dac_1          |[0m   child_exit: <function ChildExit.child_exit at 0x7f7b6fc0cae8>
[36mgcp-dac_1          |[0m   worker_exit: <function WorkerExit.worker_exit at 0x7f7b6fc0cbf8>
[36mgcp-dac_1          |[0m   nworkers_changed: <function NumWorkersChanged.nworkers_changed at 0x7f7b6fc0cd08>
[36mgcp-dac_1          |[0m   on_exit: <function OnExit.on_exit at 0x7f7b6fc0ce18>
[36mgcp-dac_1          |[0m   proxy_protocol: False
[36mgcp-dac_1          |[0m   proxy_allow_ips: ['127.0.0.1']
[36mgcp-dac_1          |[0m   keyfile: None
[36mgcp-dac_1          |[0m   certfile: None
[36mgcp-dac_1          |[0m   ssl_version: 2
[36mgcp-dac_1          |[0m   cert_reqs: 0
[36mgcp-dac_1          |[0m   ca_certs: None
[36mgcp-dac_1          |[0m   suppress_ragged_eofs: True
[36mgcp-dac_1          |[0m   do_handshake_on_connect: False
[36mgcp-dac_1          |[0m   ciphers: None
[36mgcp-dac_1          |[0m   raw_paste_global_conf: []
[36mgcp-dac_1          |[0m   strip_header_spaces: False
[36mgcp-dac_1          |[0m [2020-05-05 09:19:39 +0000] [7] [INFO] Starting gunicorn 20.0.4
[36mgcp-dac_1          |[0m [2020-05-05 09:19:39 +0000] [7] [DEBUG] Arbiter booted
[36mgcp-dac_1          |[0m [2020-05-05 09:19:39 +0000] [7] [INFO] Listening at: http://0.0.0.0:3100 (7)
[36mgcp-dac_1          |[0m [2020-05-05 09:19:39 +0000] [7] [INFO] Using worker: sync
[36mgcp-dac_1          |[0m [2020-05-05 09:19:39 +0000] [10] [INFO] Booting worker with pid: 10
[36mgcp-dac_1          |[0m [2020-05-05 09:19:39 +0000] [7] [DEBUG] 1 workers
[32mmysql57_1          |[0m 2020-05-05T09:19:40.916429Z 0 [Warning] CA certificate ca.pem is self signed.
[32mmysql57_1          |[0m 2020-05-05T09:19:41.334872Z 1 [Warning] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.
[32mmysql57_1          |[0m 2020-05-05 09:19:44+00:00 [Note] [Entrypoint]: Database files initialized
[32mmysql57_1          |[0m 2020-05-05 09:19:44+00:00 [Note] [Entrypoint]: Starting temporary server
[32mmysql57_1          |[0m 2020-05-05 09:19:44+00:00 [Note] [Entrypoint]: Waiting for server startup
[32mmysql57_1          |[0m 2020-05-05T09:19:44.345207Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
[32mmysql57_1          |[0m 2020-05-05T09:19:44.346782Z 0 [Note] mysqld (mysqld 5.7.30) starting as process 79 ...
[32mmysql57_1          |[0m 2020-05-05T09:19:44.350151Z 0 [Note] InnoDB: PUNCH HOLE support available
[32mmysql57_1          |[0m 2020-05-05T09:19:44.350217Z 0 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins
[32mmysql57_1          |[0m 2020-05-05T09:19:44.350232Z 0 [Note] InnoDB: Uses event mutexes
[32mmysql57_1          |[0m 2020-05-05T09:19:44.350256Z 0 [Note] InnoDB: GCC builtin __atomic_thread_fence() is used for memory barrier
[32mmysql57_1          |[0m 2020-05-05T09:19:44.350271Z 0 [Note] InnoDB: Compressed tables use zlib 1.2.11
[32mmysql57_1          |[0m 2020-05-05T09:19:44.350382Z 0 [Note] InnoDB: Using Linux native AIO
[32mmysql57_1          |[0m 2020-05-05T09:19:44.351050Z 0 [Note] InnoDB: Number of pools: 1
[32mmysql57_1          |[0m 2020-05-05T09:19:44.351380Z 0 [Note] InnoDB: Using CPU crc32 instructions
[32mmysql57_1          |[0m 2020-05-05T09:19:44.353329Z 0 [Note] InnoDB: Initializing buffer pool, total size = 128M, instances = 1, chunk size = 128M
[32mmysql57_1          |[0m 2020-05-05T09:19:44.364654Z 0 [Note] InnoDB: Completed initialization of buffer pool
[32mmysql57_1          |[0m 2020-05-05T09:19:44.367593Z 0 [Note] InnoDB: If the mysqld execution user is authorized, page cleaner thread priority can be changed. See the man page of setpriority().
[32mmysql57_1          |[0m 2020-05-05T09:19:44.381790Z 0 [Note] InnoDB: Highest supported file format is Barracuda.
[32mmysql57_1          |[0m 2020-05-05T09:19:44.394884Z 0 [Note] InnoDB: Creating shared tablespace for temporary tables
[32mmysql57_1          |[0m 2020-05-05T09:19:44.394978Z 0 [Note] InnoDB: Setting file './ibtmp1' size to 12 MB. Physically writing the file full; Please wait ...
[32mmysql57_1          |[0m 2020-05-05T09:19:44.436612Z 0 [Note] InnoDB: File './ibtmp1' size is now 12 MB.
[32mmysql57_1          |[0m 2020-05-05T09:19:44.437749Z 0 [Note] InnoDB: 96 redo rollback segment(s) found. 96 redo rollback segment(s) are active.
[32mmysql57_1          |[0m 2020-05-05T09:19:44.437796Z 0 [Note] InnoDB: 32 non-redo rollback segment(s) are active.
[32mmysql57_1          |[0m 2020-05-05T09:19:44.438821Z 0 [Note] InnoDB: 5.7.30 started; log sequence number 2629916
[32mmysql57_1          |[0m 2020-05-05T09:19:44.439295Z 0 [Note] InnoDB: Loading buffer pool(s) from /var/lib/mysql/ib_buffer_pool
[32mmysql57_1          |[0m 2020-05-05T09:19:44.439884Z 0 [Note] Plugin 'FEDERATED' is disabled.
[32mmysql57_1          |[0m 2020-05-05T09:19:44.441282Z 0 [Note] InnoDB: Buffer pool(s) load completed at 200505  9:19:44
[32mmysql57_1          |[0m 2020-05-05T09:19:44.446444Z 0 [Note] Found ca.pem, server-cert.pem and server-key.pem in data directory. Trying to enable SSL support using them.
[32mmysql57_1          |[0m 2020-05-05T09:19:44.446486Z 0 [Note] Skipping generation of SSL certificates as certificate files are present in data directory.
[32mmysql57_1          |[0m 2020-05-05T09:19:44.447347Z 0 [Warning] CA certificate ca.pem is self signed.
[32mmysql57_1          |[0m 2020-05-05T09:19:44.447405Z 0 [Note] Skipping generation of RSA key pair as key files are present in data directory.
[32mmysql57_1          |[0m 2020-05-05T09:19:44.450035Z 0 [Warning] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.
[32mmysql57_1          |[0m 2020-05-05T09:19:44.461761Z 0 [Note] Event Scheduler: Loaded 0 events
[32mmysql57_1          |[0m 2020-05-05T09:19:44.462344Z 0 [Note] mysqld: ready for connections.
[32mmysql57_1          |[0m Version: '5.7.30'  socket: '/var/run/mysqld/mysqld.sock'  port: 0  MySQL Community Server (GPL)
[32mmysql57_1          |[0m 2020-05-05 09:19:45+00:00 [Note] [Entrypoint]: Temporary server started.
[32mmysql57_1          |[0m Warning: Unable to load '/usr/share/zoneinfo/iso3166.tab' as time zone. Skipping it.
[32mmysql57_1          |[0m Warning: Unable to load '/usr/share/zoneinfo/leap-seconds.list' as time zone. Skipping it.
[32mmysql57_1          |[0m Warning: Unable to load '/usr/share/zoneinfo/zone.tab' as time zone. Skipping it.
[32mmysql57_1          |[0m Warning: Unable to load '/usr/share/zoneinfo/zone1970.tab' as time zone. Skipping it.
[32mmysql57_1          |[0m 2020-05-05 09:19:48+00:00 [Note] [Entrypoint]: Creating database eagle_db
[32mmysql57_1          |[0m 2020-05-05 09:19:48+00:00 [Note] [Entrypoint]: Creating user eagle-user
[32mmysql57_1          |[0m 2020-05-05 09:19:48+00:00 [Note] [Entrypoint]: Giving user eagle-user access to schema eagle_db
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05 09:19:48+00:00 [Note] [Entrypoint]: /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/eagle_db_dump_mock.sql
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05 09:19:49+00:00 [Note] [Entrypoint]: Stopping temporary server
[32mmysql57_1          |[0m 2020-05-05T09:19:49.251282Z 0 [Note] Giving 0 client threads a chance to die gracefully
[32mmysql57_1          |[0m 2020-05-05T09:19:49.251334Z 0 [Note] Shutting down slave threads
[32mmysql57_1          |[0m 2020-05-05T09:19:49.251348Z 0 [Note] Forcefully disconnecting 0 remaining clients
[32mmysql57_1          |[0m 2020-05-05T09:19:49.251363Z 0 [Note] Event Scheduler: Purging the queue. 0 events
[32mmysql57_1          |[0m 2020-05-05T09:19:49.251736Z 0 [Note] Binlog end
[32mmysql57_1          |[0m 2020-05-05T09:19:49.252464Z 0 [Note] Shutting down plugin 'ngram'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.252505Z 0 [Note] Shutting down plugin 'partition'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.252519Z 0 [Note] Shutting down plugin 'BLACKHOLE'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.252600Z 0 [Note] Shutting down plugin 'ARCHIVE'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.252621Z 0 [Note] Shutting down plugin 'PERFORMANCE_SCHEMA'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.252664Z 0 [Note] Shutting down plugin 'MRG_MYISAM'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.252712Z 0 [Note] Shutting down plugin 'MyISAM'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.252731Z 0 [Note] Shutting down plugin 'INNODB_SYS_VIRTUAL'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.252745Z 0 [Note] Shutting down plugin 'INNODB_SYS_DATAFILES'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.252934Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLESPACES'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.252973Z 0 [Note] Shutting down plugin 'INNODB_SYS_FOREIGN_COLS'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.252985Z 0 [Note] Shutting down plugin 'INNODB_SYS_FOREIGN'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.252992Z 0 [Note] Shutting down plugin 'INNODB_SYS_FIELDS'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253000Z 0 [Note] Shutting down plugin 'INNODB_SYS_COLUMNS'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253009Z 0 [Note] Shutting down plugin 'INNODB_SYS_INDEXES'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253029Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLESTATS'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253065Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLES'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253074Z 0 [Note] Shutting down plugin 'INNODB_FT_INDEX_TABLE'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253081Z 0 [Note] Shutting down plugin 'INNODB_FT_INDEX_CACHE'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253090Z 0 [Note] Shutting down plugin 'INNODB_FT_CONFIG'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253125Z 0 [Note] Shutting down plugin 'INNODB_FT_BEING_DELETED'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253138Z 0 [Note] Shutting down plugin 'INNODB_FT_DELETED'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253150Z 0 [Note] Shutting down plugin 'INNODB_FT_DEFAULT_STOPWORD'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253191Z 0 [Note] Shutting down plugin 'INNODB_METRICS'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253202Z 0 [Note] Shutting down plugin 'INNODB_TEMP_TABLE_INFO'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253210Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_POOL_STATS'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253219Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_PAGE_LRU'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253257Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_PAGE'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253269Z 0 [Note] Shutting down plugin 'INNODB_CMP_PER_INDEX_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253279Z 0 [Note] Shutting down plugin 'INNODB_CMP_PER_INDEX'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253288Z 0 [Note] Shutting down plugin 'INNODB_CMPMEM_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253300Z 0 [Note] Shutting down plugin 'INNODB_CMPMEM'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253312Z 0 [Note] Shutting down plugin 'INNODB_CMP_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253337Z 0 [Note] Shutting down plugin 'INNODB_CMP'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253356Z 0 [Note] Shutting down plugin 'INNODB_LOCK_WAITS'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253364Z 0 [Note] Shutting down plugin 'INNODB_LOCKS'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253371Z 0 [Note] Shutting down plugin 'INNODB_TRX'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253380Z 0 [Note] Shutting down plugin 'InnoDB'
[32mmysql57_1          |[0m 2020-05-05T09:19:49.253667Z 0 [Note] InnoDB: FTS optimize thread exiting.
[32mmysql57_1          |[0m 2020-05-05T09:19:49.254713Z 0 [Note] InnoDB: Starting shutdown...
[32mmysql57_1          |[0m 2020-05-05T09:19:49.355658Z 0 [Note] InnoDB: Dumping buffer pool(s) to /var/lib/mysql/ib_buffer_pool
[32mmysql57_1          |[0m 2020-05-05T09:19:49.357217Z 0 [Note] InnoDB: Buffer pool(s) dump completed at 200505  9:19:49
[32mmysql57_1          |[0m 2020-05-05T09:19:50.496305Z 0 [Note] InnoDB: Shutdown completed; log sequence number 12714053
[32mmysql57_1          |[0m 2020-05-05T09:19:50.499471Z 0 [Note] InnoDB: Removed temporary tablespace data file: "ibtmp1"
[32mmysql57_1          |[0m 2020-05-05T09:19:50.499530Z 0 [Note] Shutting down plugin 'MEMORY'
[32mmysql57_1          |[0m 2020-05-05T09:19:50.499546Z 0 [Note] Shutting down plugin 'CSV'
[32mmysql57_1          |[0m 2020-05-05T09:19:50.499561Z 0 [Note] Shutting down plugin 'sha256_password'
[32mmysql57_1          |[0m 2020-05-05T09:19:50.499571Z 0 [Note] Shutting down plugin 'mysql_native_password'
[32mmysql57_1          |[0m 2020-05-05T09:19:50.499753Z 0 [Note] Shutting down plugin 'binlog'
[32mmysql57_1          |[0m 2020-05-05T09:19:50.503078Z 0 [Note] mysqld: Shutdown complete
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05 09:19:51+00:00 [Note] [Entrypoint]: Temporary server stopped
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05 09:19:51+00:00 [Note] [Entrypoint]: MySQL init process done. Ready for start up.
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05T09:19:51.453243Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
[32mmysql57_1          |[0m 2020-05-05T09:19:51.454865Z 0 [Note] mysqld (mysqld 5.7.30) starting as process 1 ...
[32mmysql57_1          |[0m 2020-05-05T09:19:51.458430Z 0 [Note] InnoDB: PUNCH HOLE support available
[32mmysql57_1          |[0m 2020-05-05T09:19:51.458482Z 0 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins
[32mmysql57_1          |[0m 2020-05-05T09:19:51.458498Z 0 [Note] InnoDB: Uses event mutexes
[32mmysql57_1          |[0m 2020-05-05T09:19:51.458512Z 0 [Note] InnoDB: GCC builtin __atomic_thread_fence() is used for memory barrier
[32mmysql57_1          |[0m 2020-05-05T09:19:51.458519Z 0 [Note] InnoDB: Compressed tables use zlib 1.2.11
[32mmysql57_1          |[0m 2020-05-05T09:19:51.458526Z 0 [Note] InnoDB: Using Linux native AIO
[32mmysql57_1          |[0m 2020-05-05T09:19:51.459128Z 0 [Note] InnoDB: Number of pools: 1
[32mmysql57_1          |[0m 2020-05-05T09:19:51.459374Z 0 [Note] InnoDB: Using CPU crc32 instructions
[32mmysql57_1          |[0m 2020-05-05T09:19:51.461318Z 0 [Note] InnoDB: Initializing buffer pool, total size = 128M, instances = 1, chunk size = 128M
[32mmysql57_1          |[0m 2020-05-05T09:19:51.472919Z 0 [Note] InnoDB: Completed initialization of buffer pool
[32mmysql57_1          |[0m 2020-05-05T09:19:51.475675Z 0 [Note] InnoDB: If the mysqld execution user is authorized, page cleaner thread priority can be changed. See the man page of setpriority().
[32mmysql57_1          |[0m 2020-05-05T09:19:51.489212Z 0 [Note] InnoDB: Highest supported file format is Barracuda.
[32mmysql57_1          |[0m 2020-05-05T09:19:51.506077Z 0 [Note] InnoDB: Creating shared tablespace for temporary tables
[32mmysql57_1          |[0m 2020-05-05T09:19:51.506179Z 0 [Note] InnoDB: Setting file './ibtmp1' size to 12 MB. Physically writing the file full; Please wait ...
[32mmysql57_1          |[0m 2020-05-05T09:19:51.545999Z 0 [Note] InnoDB: File './ibtmp1' size is now 12 MB.
[32mmysql57_1          |[0m 2020-05-05T09:19:51.547389Z 0 [Note] InnoDB: 96 redo rollback segment(s) found. 96 redo rollback segment(s) are active.
[32mmysql57_1          |[0m 2020-05-05T09:19:51.547432Z 0 [Note] InnoDB: 32 non-redo rollback segment(s) are active.
[32mmysql57_1          |[0m 2020-05-05T09:19:51.548696Z 0 [Note] InnoDB: Waiting for purge to start
[32mmysql57_1          |[0m 2020-05-05T09:19:51.603722Z 0 [Note] InnoDB: 5.7.30 started; log sequence number 12714053
[32mmysql57_1          |[0m 2020-05-05T09:19:51.604399Z 0 [Note] InnoDB: Loading buffer pool(s) from /var/lib/mysql/ib_buffer_pool
[32mmysql57_1          |[0m 2020-05-05T09:19:51.604635Z 0 [Note] Plugin 'FEDERATED' is disabled.
[32mmysql57_1          |[0m 2020-05-05T09:19:51.610308Z 0 [Note] InnoDB: Buffer pool(s) load completed at 200505  9:19:51
[32mmysql57_1          |[0m 2020-05-05T09:19:51.613233Z 0 [Note] Found ca.pem, server-cert.pem and server-key.pem in data directory. Trying to enable SSL support using them.
[32mmysql57_1          |[0m 2020-05-05T09:19:51.613286Z 0 [Note] Skipping generation of SSL certificates as certificate files are present in data directory.
[32mmysql57_1          |[0m 2020-05-05T09:19:51.614133Z 0 [Warning] CA certificate ca.pem is self signed.
[32mmysql57_1          |[0m 2020-05-05T09:19:51.614200Z 0 [Note] Skipping generation of RSA key pair as key files are present in data directory.
[32mmysql57_1          |[0m 2020-05-05T09:19:51.614882Z 0 [Note] Server hostname (bind-address): '*'; port: 3306
[32mmysql57_1          |[0m 2020-05-05T09:19:51.614975Z 0 [Note] IPv6 is available.
[32mmysql57_1          |[0m 2020-05-05T09:19:51.615000Z 0 [Note]   - '::' resolves to '::';
[32mmysql57_1          |[0m 2020-05-05T09:19:51.615031Z 0 [Note] Server socket created on IP: '::'.
[32mmysql57_1          |[0m 2020-05-05T09:19:51.617372Z 0 [Warning] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.
[32mmysql57_1          |[0m 2020-05-05T09:19:51.629672Z 0 [Note] Event Scheduler: Loaded 0 events
[32mmysql57_1          |[0m 2020-05-05T09:19:51.630032Z 0 [Note] mysqld: ready for connections.
[32mmysql57_1          |[0m Version: '5.7.30'  socket: '/var/run/mysqld/mysqld.sock'  port: 3306  MySQL Community Server (GPL)
[33mhouston-service_1  |[0m [2020-05-05 09:25:46 +0000] [13] [DEBUG] GET /api/ui/
[33mhouston-service_1  |[0m [2020-05-05 09:25:46 +0000] [9] [DEBUG] GET /api/ui/swagger-ui.css
[33mhouston-service_1  |[0m [2020-05-05 09:25:46 +0000] [11] [DEBUG] GET /api/ui/swagger-ui-bundle.js
[33mhouston-service_1  |[0m [2020-05-05 09:25:46 +0000] [12] [DEBUG] GET /api/ui/swagger-ui-standalone-preset.js
[33mhouston-service_1  |[0m [2020-05-05 09:25:46 +0000] [10] [DEBUG] GET /api/openapi.json
[33mhouston-service_1  |[0m [2020-05-05 09:25:46 +0000] [13] [DEBUG] GET /api/ui/favicon-32x32.png
[33mhouston-service_1  |[0m [2020-05-05 09:25:50 +0000] [9] [DEBUG] GET /api/solutiondeployments/
[33mhouston-service_1  |[0m 2020-05-05 09:25:50,610 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
[33mhouston-service_1  |[0m 2020-05-05 09:25:50,610 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:25:50,615 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
[33mhouston-service_1  |[0m 2020-05-05 09:25:50,616 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:25:50,619 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
[33mhouston-service_1  |[0m 2020-05-05 09:25:50,619 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:25:50,622 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:25:50,622 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:25:50,624 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:25:50,624 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:25:50,625 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:25:50,628 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution
[33mhouston-service_1  |[0m 2020-05-05 09:25:50,628 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:25:50,635 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:25:58 +0000] [10] [DEBUG] GET /api/users/
[33mhouston-service_1  |[0m 2020-05-05 09:25:58,147 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
[33mhouston-service_1  |[0m 2020-05-05 09:25:58,147 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:25:58,151 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
[33mhouston-service_1  |[0m 2020-05-05 09:25:58,151 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:25:58,154 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
[33mhouston-service_1  |[0m 2020-05-05 09:25:58,154 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:25:58,157 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:25:58,157 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:25:58,158 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:25:58,158 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:25:58,162 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:25:58,164 INFO sqlalchemy.engine.base.Engine SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user ORDER BY user.id
[33mhouston-service_1  |[0m 2020-05-05 09:25:58,164 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m Exception on /api/users/ [GET]
[33mhouston-service_1  |[0m Traceback (most recent call last):
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/mysql/connector/connection_cext.py", line 489, in cmd_query
[33mhouston-service_1  |[0m     raw_as_string=raw_as_string)
[33mhouston-service_1  |[0m _mysql_connector.MySQLInterfaceError: Unknown column 'user.isActive' in 'field list'
[33mhouston-service_1  |[0m 
[33mhouston-service_1  |[0m During handling of the above exception, another exception occurred:
[33mhouston-service_1  |[0m 
[33mhouston-service_1  |[0m Traceback (most recent call last):
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py", line 1244, in _execute_context
[33mhouston-service_1  |[0m     cursor, statement, parameters, context
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/default.py", line 552, in do_execute
[33mhouston-service_1  |[0m     cursor.execute(statement, parameters)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/mysql/connector/cursor_cext.py", line 266, in execute
[33mhouston-service_1  |[0m     raw_as_string=self._raw_as_string)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/mysql/connector/connection_cext.py", line 492, in cmd_query
[33mhouston-service_1  |[0m     sqlstate=exc.sqlstate)
[33mhouston-service_1  |[0m mysql.connector.errors.ProgrammingError: 1054 (42S22): Unknown column 'user.isActive' in 'field list'
[33mhouston-service_1  |[0m 
[33mhouston-service_1  |[0m The above exception was the direct cause of the following exception:
[33mhouston-service_1  |[0m 
[33mhouston-service_1  |[0m Traceback (most recent call last):
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 2446, in wsgi_app
[33mhouston-service_1  |[0m     response = self.full_dispatch_request()
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1951, in full_dispatch_request
[33mhouston-service_1  |[0m     rv = self.handle_user_exception(e)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1820, in handle_user_exception
[33mhouston-service_1  |[0m     reraise(exc_type, exc_value, tb)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/_compat.py", line 39, in reraise
[33mhouston-service_1  |[0m     raise value
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1949, in full_dispatch_request
[33mhouston-service_1  |[0m     rv = self.dispatch_request()
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1935, in dispatch_request
[33mhouston-service_1  |[0m     return self.view_functions[rule.endpoint](**req.view_args)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/decorator.py", line 48, in wrapper
[33mhouston-service_1  |[0m     response = function(request)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/uri_parsing.py", line 144, in wrapper
[33mhouston-service_1  |[0m     response = function(request)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/parameter.py", line 121, in wrapper
[33mhouston-service_1  |[0m     return function(**kwargs)
[33mhouston-service_1  |[0m   File "/srv/user.py", line 23, in read_all
[33mhouston-service_1  |[0m     user = User.query.order_by(User.id).all()
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/orm/query.py", line 3160, in all
[33mhouston-service_1  |[0m     return list(self)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/orm/query.py", line 3316, in __iter__
[33mhouston-service_1  |[0m     return self._execute_and_instances(context)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/orm/query.py", line 3341, in _execute_and_instances
[33mhouston-service_1  |[0m     result = conn.execute(querycontext.statement, self._params)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py", line 988, in execute
[33mhouston-service_1  |[0m     return meth(self, multiparams, params)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/sql/elements.py", line 287, in _execute_on_connection
[33mhouston-service_1  |[0m     return connection._execute_clauseelement(self, multiparams, params)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py", line 1107, in _execute_clauseelement
[33mhouston-service_1  |[0m     distilled_params,
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py", line 1248, in _execute_context
[33mhouston-service_1  |[0m     e, statement, parameters, cursor, context
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py", line 1466, in _handle_dbapi_exception
[33mhouston-service_1  |[0m     util.raise_from_cause(sqlalchemy_exception, exc_info)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/util/compat.py", line 383, in raise_from_cause
[33mhouston-service_1  |[0m     reraise(type(exception), exception, tb=exc_tb, cause=cause)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/util/compat.py", line 128, in reraise
[33mhouston-service_1  |[0m     raise value.with_traceback(tb)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py", line 1244, in _execute_context
[33mhouston-service_1  |[0m     cursor, statement, parameters, context
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/default.py", line 552, in do_execute
[33mhouston-service_1  |[0m     cursor.execute(statement, parameters)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/mysql/connector/cursor_cext.py", line 266, in execute
[33mhouston-service_1  |[0m     raw_as_string=self._raw_as_string)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/mysql/connector/connection_cext.py", line 492, in cmd_query
[33mhouston-service_1  |[0m     sqlstate=exc.sqlstate)
[33mhouston-service_1  |[0m sqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1054 (42S22): Unknown column 'user.isActive' in 'field list'
[33mhouston-service_1  |[0m [SQL: SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user ORDER BY user.id]
[33mhouston-service_1  |[0m (Background on this error at: http://sqlalche.me/e/f405)
[33mhouston-service_1  |[0m 2020-05-05 09:25:58,182 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:26:28 +0000] [6] [CRITICAL] WORKER TIMEOUT (pid:12)
[33mhouston-service_1  |[0m [2020-05-05 09:26:28 +0000] [12] [INFO] Worker exiting (pid: 12)
[33mhouston-service_1  |[0m [2020-05-05 09:26:28 +0000] [19] [INFO] Booting worker with pid: 19
[32mmysql57_1          |[0m 2020-05-05T09:28:36.894475Z 4 [Note] Access denied for user 'eagle-user'@'172.18.0.1' (using password: YES)
[36mtb-houston-service_gcp-dac_1 exited with code 137
[0m[32mmysql57_1          |[0m 2020-05-05T09:30:04.668525Z 2 [Note] Aborted connection 2 to db: 'eagle_db' user: 'eagle-user' host: '172.18.0.3' (Got an error reading communication packets)
[32mmysql57_1          |[0m 2020-05-05T09:30:04.676137Z 3 [Note] Aborted connection 3 to db: 'eagle_db' user: 'eagle-user' host: '172.18.0.3' (Got an error reading communication packets)
[33mtb-houston-service_houston-service_1 exited with code 137
[0m[32mmysql57_1          |[0m 2020-05-05T09:30:04.901636Z 0 [Note] Giving 0 client threads a chance to die gracefully
[32mmysql57_1          |[0m 2020-05-05T09:30:04.901722Z 0 [Note] Shutting down slave threads
[32mmysql57_1          |[0m 2020-05-05T09:30:04.901739Z 0 [Note] Forcefully disconnecting 0 remaining clients
[32mmysql57_1          |[0m 2020-05-05T09:30:04.901757Z 0 [Note] Event Scheduler: Purging the queue. 0 events
[32mmysql57_1          |[0m 2020-05-05T09:30:04.901853Z 0 [Note] Binlog end
[32mmysql57_1          |[0m 2020-05-05T09:30:04.903721Z 0 [Note] Shutting down plugin 'ngram'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.903770Z 0 [Note] Shutting down plugin 'partition'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.903784Z 0 [Note] Shutting down plugin 'BLACKHOLE'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.903798Z 0 [Note] Shutting down plugin 'ARCHIVE'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.903809Z 0 [Note] Shutting down plugin 'PERFORMANCE_SCHEMA'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.903856Z 0 [Note] Shutting down plugin 'MRG_MYISAM'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.903865Z 0 [Note] Shutting down plugin 'MyISAM'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.903885Z 0 [Note] Shutting down plugin 'INNODB_SYS_VIRTUAL'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.903922Z 0 [Note] Shutting down plugin 'INNODB_SYS_DATAFILES'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.903936Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLESPACES'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.903948Z 0 [Note] Shutting down plugin 'INNODB_SYS_FOREIGN_COLS'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.903987Z 0 [Note] Shutting down plugin 'INNODB_SYS_FOREIGN'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904007Z 0 [Note] Shutting down plugin 'INNODB_SYS_FIELDS'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904020Z 0 [Note] Shutting down plugin 'INNODB_SYS_COLUMNS'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904029Z 0 [Note] Shutting down plugin 'INNODB_SYS_INDEXES'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904042Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLESTATS'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904053Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLES'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904060Z 0 [Note] Shutting down plugin 'INNODB_FT_INDEX_TABLE'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904070Z 0 [Note] Shutting down plugin 'INNODB_FT_INDEX_CACHE'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904082Z 0 [Note] Shutting down plugin 'INNODB_FT_CONFIG'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904090Z 0 [Note] Shutting down plugin 'INNODB_FT_BEING_DELETED'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904098Z 0 [Note] Shutting down plugin 'INNODB_FT_DELETED'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904107Z 0 [Note] Shutting down plugin 'INNODB_FT_DEFAULT_STOPWORD'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904116Z 0 [Note] Shutting down plugin 'INNODB_METRICS'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904127Z 0 [Note] Shutting down plugin 'INNODB_TEMP_TABLE_INFO'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904135Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_POOL_STATS'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904144Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_PAGE_LRU'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904152Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_PAGE'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904162Z 0 [Note] Shutting down plugin 'INNODB_CMP_PER_INDEX_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904182Z 0 [Note] Shutting down plugin 'INNODB_CMP_PER_INDEX'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904274Z 0 [Note] Shutting down plugin 'INNODB_CMPMEM_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904290Z 0 [Note] Shutting down plugin 'INNODB_CMPMEM'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904300Z 0 [Note] Shutting down plugin 'INNODB_CMP_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904316Z 0 [Note] Shutting down plugin 'INNODB_CMP'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904336Z 0 [Note] Shutting down plugin 'INNODB_LOCK_WAITS'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904346Z 0 [Note] Shutting down plugin 'INNODB_LOCKS'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904354Z 0 [Note] Shutting down plugin 'INNODB_TRX'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904366Z 0 [Note] Shutting down plugin 'InnoDB'
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904515Z 0 [Note] InnoDB: FTS optimize thread exiting.
[32mmysql57_1          |[0m 2020-05-05T09:30:04.904830Z 0 [Note] InnoDB: Starting shutdown...
[32mmysql57_1          |[0m 2020-05-05T09:30:05.005355Z 0 [Note] InnoDB: Dumping buffer pool(s) to /var/lib/mysql/ib_buffer_pool
[32mmysql57_1          |[0m 2020-05-05T09:30:05.005873Z 0 [Note] InnoDB: Buffer pool(s) dump completed at 200505  9:30:05
[32mmysql57_1          |[0m 2020-05-05T09:30:06.012474Z 0 [Note] InnoDB: Shutdown completed; log sequence number 12714081
[32mmysql57_1          |[0m 2020-05-05T09:30:06.016072Z 0 [Note] InnoDB: Removed temporary tablespace data file: "ibtmp1"
[32mmysql57_1          |[0m 2020-05-05T09:30:06.016137Z 0 [Note] Shutting down plugin 'MEMORY'
[32mmysql57_1          |[0m 2020-05-05T09:30:06.016155Z 0 [Note] Shutting down plugin 'CSV'
[32mmysql57_1          |[0m 2020-05-05T09:30:06.016171Z 0 [Note] Shutting down plugin 'sha256_password'
[32mmysql57_1          |[0m 2020-05-05T09:30:06.016180Z 0 [Note] Shutting down plugin 'mysql_native_password'
[32mmysql57_1          |[0m 2020-05-05T09:30:06.016311Z 0 [Note] Shutting down plugin 'binlog'
[32mmysql57_1          |[0m 2020-05-05T09:30:06.019772Z 0 [Note] mysqld: Shutdown complete
[32mmysql57_1          |[0m 
[32mtb-houston-service_mysql57_1 exited with code 0
[0mCreating network "tb-houston-service_default" with the default driver
Creating tb-houston-service_mysql57_1 ... 
[1A[2KCreating tb-houston-service_mysql57_1 ... [32mdone[0m[1BCreating tb-houston-service_houston-service_1 ... 
[1A[2KCreating tb-houston-service_houston-service_1 ... [32mdone[0m[1BCreating tb-houston-service_gcp-dac_1         ... 
[1A[2KCreating tb-houston-service_gcp-dac_1         ... [32mdone[0m[1BAttaching to tb-houston-service_mysql57_1, tb-houston-service_houston-service_1, tb-houston-service_gcp-dac_1
[33mhouston-service_1  |[0m Using port: 3000
[33mhouston-service_1  |[0m Using DB server IP: localhost
[33mhouston-service_1  |[0m SH SQLALCHEMY_DATABASE_URI: mysql+mysqlconnector://eagle-user:eagle-user-secret-pw@mysql57/eagle_db
[36mgcp-dac_1          |[0m Using port: 3100
[33mhouston-service_1  |[0m [2020-05-05 09:31:20 +0000] [7] [DEBUG] Current configuration:
[33mhouston-service_1  |[0m   config: None
[33mhouston-service_1  |[0m   bind: ['0.0.0.0:3000']
[33mhouston-service_1  |[0m   backlog: 2048
[33mhouston-service_1  |[0m   workers: 5
[33mhouston-service_1  |[0m   worker_class: sync
[33mhouston-service_1  |[0m   threads: 1
[33mhouston-service_1  |[0m   worker_connections: 1000
[33mhouston-service_1  |[0m   max_requests: 0
[33mhouston-service_1  |[0m   max_requests_jitter: 0
[33mhouston-service_1  |[0m   timeout: 30
[33mhouston-service_1  |[0m   graceful_timeout: 30
[33mhouston-service_1  |[0m   keepalive: 2
[33mhouston-service_1  |[0m   limit_request_line: 4094
[33mhouston-service_1  |[0m   limit_request_fields: 100
[33mhouston-service_1  |[0m   limit_request_field_size: 8190
[33mhouston-service_1  |[0m   reload: False
[33mhouston-service_1  |[0m   reload_engine: auto
[33mhouston-service_1  |[0m   reload_extra_files: []
[33mhouston-service_1  |[0m   spew: False
[33mhouston-service_1  |[0m   check_config: False
[33mhouston-service_1  |[0m   preload_app: False
[33mhouston-service_1  |[0m   sendfile: None
[33mhouston-service_1  |[0m   reuse_port: False
[33mhouston-service_1  |[0m   chdir: /srv
[33mhouston-service_1  |[0m   daemon: False
[33mhouston-service_1  |[0m   raw_env: []
[33mhouston-service_1  |[0m   pidfile: None
[33mhouston-service_1  |[0m   worker_tmp_dir: None
[33mhouston-service_1  |[0m   user: 0
[33mhouston-service_1  |[0m   group: 0
[33mhouston-service_1  |[0m   umask: 0
[33mhouston-service_1  |[0m   initgroups: False
[33mhouston-service_1  |[0m   tmp_upload_dir: None
[33mhouston-service_1  |[0m   secure_scheme_headers: {'X-FORWARDED-PROTOCOL': 'ssl', 'X-FORWARDED-PROTO': 'https', 'X-FORWARDED-SSL': 'on'}
[33mhouston-service_1  |[0m   forwarded_allow_ips: ['127.0.0.1']
[33mhouston-service_1  |[0m   accesslog: None
[33mhouston-service_1  |[0m   disable_redirect_access_to_syslog: False
[33mhouston-service_1  |[0m   access_log_format: %(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"
[33mhouston-service_1  |[0m   errorlog: -
[33mhouston-service_1  |[0m   loglevel: debug
[33mhouston-service_1  |[0m   capture_output: False
[33mhouston-service_1  |[0m   logger_class: gunicorn.glogging.Logger
[33mhouston-service_1  |[0m   logconfig: None
[33mhouston-service_1  |[0m   logconfig_dict: {}
[33mhouston-service_1  |[0m   syslog_addr: udp://localhost:514
[33mhouston-service_1  |[0m   syslog: False
[33mhouston-service_1  |[0m   syslog_prefix: None
[33mhouston-service_1  |[0m   syslog_facility: user
[33mhouston-service_1  |[0m   enable_stdio_inheritance: False
[33mhouston-service_1  |[0m   statsd_host: None
[33mhouston-service_1  |[0m   dogstatsd_tags: 
[33mhouston-service_1  |[0m   statsd_prefix: 
[33mhouston-service_1  |[0m   proc_name: None
[33mhouston-service_1  |[0m   default_proc_name: app:connex_app
[33mhouston-service_1  |[0m   pythonpath: None
[33mhouston-service_1  |[0m   paste: None
[33mhouston-service_1  |[0m   on_starting: <function OnStarting.on_starting at 0x7f435058ff28>
[33mhouston-service_1  |[0m   on_reload: <function OnReload.on_reload at 0x7f43505a70d0>
[33mhouston-service_1  |[0m   when_ready: <function WhenReady.when_ready at 0x7f43505a71e0>
[33mhouston-service_1  |[0m   pre_fork: <function Prefork.pre_fork at 0x7f43505a72f0>
[33mhouston-service_1  |[0m   post_fork: <function Postfork.post_fork at 0x7f43505a7400>
[33mhouston-service_1  |[0m   post_worker_init: <function PostWorkerInit.post_worker_init at 0x7f43505a7510>
[33mhouston-service_1  |[0m   worker_int: <function WorkerInt.worker_int at 0x7f43505a7620>
[33mhouston-service_1  |[0m   worker_abort: <function WorkerAbort.worker_abort at 0x7f43505a7730>
[33mhouston-service_1  |[0m   pre_exec: <function PreExec.pre_exec at 0x7f43505a7840>
[33mhouston-service_1  |[0m   pre_request: <function PreRequest.pre_request at 0x7f43505a7950>
[33mhouston-service_1  |[0m   post_request: <function PostRequest.post_request at 0x7f43505a79d8>
[33mhouston-service_1  |[0m   child_exit: <function ChildExit.child_exit at 0x7f43505a7ae8>
[33mhouston-service_1  |[0m   worker_exit: <function WorkerExit.worker_exit at 0x7f43505a7bf8>
[33mhouston-service_1  |[0m   nworkers_changed: <function NumWorkersChanged.nworkers_changed at 0x7f43505a7d08>
[33mhouston-service_1  |[0m   on_exit: <function OnExit.on_exit at 0x7f43505a7e18>
[33mhouston-service_1  |[0m   proxy_protocol: False
[33mhouston-service_1  |[0m   proxy_allow_ips: ['127.0.0.1']
[33mhouston-service_1  |[0m   keyfile: None
[33mhouston-service_1  |[0m   certfile: None
[33mhouston-service_1  |[0m   ssl_version: 2
[33mhouston-service_1  |[0m   cert_reqs: 0
[33mhouston-service_1  |[0m   ca_certs: None
[33mhouston-service_1  |[0m   suppress_ragged_eofs: True
[33mhouston-service_1  |[0m   do_handshake_on_connect: False
[33mhouston-service_1  |[0m   ciphers: None
[33mhouston-service_1  |[0m   raw_paste_global_conf: []
[33mhouston-service_1  |[0m   strip_header_spaces: False
[33mhouston-service_1  |[0m [2020-05-05 09:31:20 +0000] [7] [INFO] Starting gunicorn 20.0.4
[32mmysql57_1          |[0m 2020-05-05 09:31:19+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 5.7.30-1debian10 started.
[32mmysql57_1          |[0m 2020-05-05 09:31:19+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'
[33mhouston-service_1  |[0m [2020-05-05 09:31:20 +0000] [7] [DEBUG] Arbiter booted
[33mhouston-service_1  |[0m [2020-05-05 09:31:20 +0000] [7] [INFO] Listening at: http://0.0.0.0:3000 (7)
[33mhouston-service_1  |[0m [2020-05-05 09:31:20 +0000] [7] [INFO] Using worker: sync
[32mmysql57_1          |[0m 2020-05-05 09:31:19+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 5.7.30-1debian10 started.
[33mhouston-service_1  |[0m [2020-05-05 09:31:20 +0000] [10] [INFO] Booting worker with pid: 10
[32mmysql57_1          |[0m 2020-05-05 09:31:19+00:00 [Note] [Entrypoint]: Initializing database files
[33mhouston-service_1  |[0m [2020-05-05 09:31:20 +0000] [11] [INFO] Booting worker with pid: 11
[32mmysql57_1          |[0m 2020-05-05T09:31:19.321521Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
[33mhouston-service_1  |[0m [2020-05-05 09:31:20 +0000] [12] [INFO] Booting worker with pid: 12
[32mmysql57_1          |[0m 2020-05-05T09:31:19.735606Z 0 [Warning] InnoDB: New log files created, LSN=45790
[32mmysql57_1          |[0m 2020-05-05T09:31:19.825031Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.
[32mmysql57_1          |[0m 2020-05-05T09:31:19.846049Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 2d4be58a-8eb3-11ea-bb35-0242ac130002.
[32mmysql57_1          |[0m 2020-05-05T09:31:19.848265Z 0 [Warning] Gtid table is not ready to be used. Table 'mysql.gtid_executed' cannot be opened.
[33mhouston-service_1  |[0m [2020-05-05 09:31:20 +0000] [13] [INFO] Booting worker with pid: 13
[33mhouston-service_1  |[0m [2020-05-05 09:31:20 +0000] [15] [INFO] Booting worker with pid: 15
[33mhouston-service_1  |[0m [2020-05-05 09:31:20 +0000] [7] [DEBUG] 5 workers
[36mgcp-dac_1          |[0m [2020-05-05 09:31:20 +0000] [9] [DEBUG] Current configuration:
[36mgcp-dac_1          |[0m   config: None
[36mgcp-dac_1          |[0m   bind: ['0.0.0.0:3100']
[36mgcp-dac_1          |[0m   backlog: 2048
[36mgcp-dac_1          |[0m   workers: 1
[36mgcp-dac_1          |[0m   worker_class: sync
[36mgcp-dac_1          |[0m   threads: 1
[36mgcp-dac_1          |[0m   worker_connections: 1000
[36mgcp-dac_1          |[0m   max_requests: 0
[36mgcp-dac_1          |[0m   max_requests_jitter: 0
[36mgcp-dac_1          |[0m   timeout: 30
[36mgcp-dac_1          |[0m   graceful_timeout: 30
[36mgcp-dac_1          |[0m   keepalive: 2
[36mgcp-dac_1          |[0m   limit_request_line: 4094
[36mgcp-dac_1          |[0m   limit_request_fields: 100
[36mgcp-dac_1          |[0m   limit_request_field_size: 8190
[36mgcp-dac_1          |[0m   reload: False
[36mgcp-dac_1          |[0m   reload_engine: auto
[36mgcp-dac_1          |[0m   reload_extra_files: []
[36mgcp-dac_1          |[0m   spew: False
[36mgcp-dac_1          |[0m   check_config: False
[36mgcp-dac_1          |[0m   preload_app: False
[36mgcp-dac_1          |[0m   sendfile: None
[36mgcp-dac_1          |[0m   reuse_port: False
[36mgcp-dac_1          |[0m   chdir: /srv
[36mgcp-dac_1          |[0m   daemon: False
[36mgcp-dac_1          |[0m   raw_env: []
[36mgcp-dac_1          |[0m   pidfile: None
[36mgcp-dac_1          |[0m   worker_tmp_dir: None
[36mgcp-dac_1          |[0m   user: 0
[36mgcp-dac_1          |[0m   group: 0
[36mgcp-dac_1          |[0m   umask: 0
[36mgcp-dac_1          |[0m   initgroups: False
[36mgcp-dac_1          |[0m   tmp_upload_dir: None
[36mgcp-dac_1          |[0m   secure_scheme_headers: {'X-FORWARDED-PROTOCOL': 'ssl', 'X-FORWARDED-PROTO': 'https', 'X-FORWARDED-SSL': 'on'}
[36mgcp-dac_1          |[0m   forwarded_allow_ips: ['127.0.0.1']
[36mgcp-dac_1          |[0m   accesslog: None
[36mgcp-dac_1          |[0m   disable_redirect_access_to_syslog: False
[36mgcp-dac_1          |[0m   access_log_format: %(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"
[36mgcp-dac_1          |[0m   errorlog: -
[36mgcp-dac_1          |[0m   loglevel: debug
[36mgcp-dac_1          |[0m   capture_output: False
[36mgcp-dac_1          |[0m   logger_class: gunicorn.glogging.Logger
[36mgcp-dac_1          |[0m   logconfig: None
[36mgcp-dac_1          |[0m   logconfig_dict: {}
[36mgcp-dac_1          |[0m   syslog_addr: udp://localhost:514
[36mgcp-dac_1          |[0m   syslog: False
[36mgcp-dac_1          |[0m   syslog_prefix: None
[36mgcp-dac_1          |[0m   syslog_facility: user
[36mgcp-dac_1          |[0m   enable_stdio_inheritance: False
[36mgcp-dac_1          |[0m   statsd_host: None
[36mgcp-dac_1          |[0m   dogstatsd_tags: 
[36mgcp-dac_1          |[0m   statsd_prefix: 
[36mgcp-dac_1          |[0m   proc_name: None
[36mgcp-dac_1          |[0m   default_proc_name: app:connex_app
[36mgcp-dac_1          |[0m   pythonpath: None
[36mgcp-dac_1          |[0m   paste: None
[36mgcp-dac_1          |[0m   on_starting: <function OnStarting.on_starting at 0x7f4c21295f28>
[36mgcp-dac_1          |[0m   on_reload: <function OnReload.on_reload at 0x7f4c212b00d0>
[36mgcp-dac_1          |[0m   when_ready: <function WhenReady.when_ready at 0x7f4c212b01e0>
[36mgcp-dac_1          |[0m   pre_fork: <function Prefork.pre_fork at 0x7f4c212b02f0>
[36mgcp-dac_1          |[0m   post_fork: <function Postfork.post_fork at 0x7f4c212b0400>
[36mgcp-dac_1          |[0m   post_worker_init: <function PostWorkerInit.post_worker_init at 0x7f4c212b0510>
[36mgcp-dac_1          |[0m   worker_int: <function WorkerInt.worker_int at 0x7f4c212b0620>
[36mgcp-dac_1          |[0m   worker_abort: <function WorkerAbort.worker_abort at 0x7f4c212b0730>
[36mgcp-dac_1          |[0m   pre_exec: <function PreExec.pre_exec at 0x7f4c212b0840>
[36mgcp-dac_1          |[0m   pre_request: <function PreRequest.pre_request at 0x7f4c212b0950>
[36mgcp-dac_1          |[0m   post_request: <function PostRequest.post_request at 0x7f4c212b09d8>
[36mgcp-dac_1          |[0m   child_exit: <function ChildExit.child_exit at 0x7f4c212b0ae8>
[36mgcp-dac_1          |[0m   worker_exit: <function WorkerExit.worker_exit at 0x7f4c212b0bf8>
[36mgcp-dac_1          |[0m   nworkers_changed: <function NumWorkersChanged.nworkers_changed at 0x7f4c212b0d08>
[36mgcp-dac_1          |[0m   on_exit: <function OnExit.on_exit at 0x7f4c212b0e18>
[36mgcp-dac_1          |[0m   proxy_protocol: False
[36mgcp-dac_1          |[0m   proxy_allow_ips: ['127.0.0.1']
[36mgcp-dac_1          |[0m   keyfile: None
[36mgcp-dac_1          |[0m   certfile: None
[36mgcp-dac_1          |[0m   ssl_version: 2
[36mgcp-dac_1          |[0m   cert_reqs: 0
[36mgcp-dac_1          |[0m   ca_certs: None
[36mgcp-dac_1          |[0m   suppress_ragged_eofs: True
[36mgcp-dac_1          |[0m   do_handshake_on_connect: False
[36mgcp-dac_1          |[0m   ciphers: None
[36mgcp-dac_1          |[0m   raw_paste_global_conf: []
[36mgcp-dac_1          |[0m   strip_header_spaces: False
[36mgcp-dac_1          |[0m [2020-05-05 09:31:20 +0000] [9] [INFO] Starting gunicorn 20.0.4
[36mgcp-dac_1          |[0m [2020-05-05 09:31:20 +0000] [9] [DEBUG] Arbiter booted
[36mgcp-dac_1          |[0m [2020-05-05 09:31:20 +0000] [9] [INFO] Listening at: http://0.0.0.0:3100 (9)
[36mgcp-dac_1          |[0m [2020-05-05 09:31:20 +0000] [9] [INFO] Using worker: sync
[36mgcp-dac_1          |[0m [2020-05-05 09:31:20 +0000] [12] [INFO] Booting worker with pid: 12
[36mgcp-dac_1          |[0m [2020-05-05 09:31:20 +0000] [9] [DEBUG] 1 workers
[32mmysql57_1          |[0m 2020-05-05T09:31:20.738717Z 0 [Warning] CA certificate ca.pem is self signed.
[32mmysql57_1          |[0m 2020-05-05T09:31:21.144201Z 1 [Warning] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.
[32mmysql57_1          |[0m 2020-05-05 09:31:23+00:00 [Note] [Entrypoint]: Database files initialized
[32mmysql57_1          |[0m 2020-05-05 09:31:23+00:00 [Note] [Entrypoint]: Starting temporary server
[32mmysql57_1          |[0m 2020-05-05 09:31:23+00:00 [Note] [Entrypoint]: Waiting for server startup
[32mmysql57_1          |[0m 2020-05-05T09:31:23.902394Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
[32mmysql57_1          |[0m 2020-05-05T09:31:23.903883Z 0 [Note] mysqld (mysqld 5.7.30) starting as process 78 ...
[32mmysql57_1          |[0m 2020-05-05T09:31:23.907438Z 0 [Note] InnoDB: PUNCH HOLE support available
[32mmysql57_1          |[0m 2020-05-05T09:31:23.907492Z 0 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins
[32mmysql57_1          |[0m 2020-05-05T09:31:23.907507Z 0 [Note] InnoDB: Uses event mutexes
[32mmysql57_1          |[0m 2020-05-05T09:31:23.907521Z 0 [Note] InnoDB: GCC builtin __atomic_thread_fence() is used for memory barrier
[32mmysql57_1          |[0m 2020-05-05T09:31:23.907531Z 0 [Note] InnoDB: Compressed tables use zlib 1.2.11
[32mmysql57_1          |[0m 2020-05-05T09:31:23.907538Z 0 [Note] InnoDB: Using Linux native AIO
[32mmysql57_1          |[0m 2020-05-05T09:31:23.908130Z 0 [Note] InnoDB: Number of pools: 1
[32mmysql57_1          |[0m 2020-05-05T09:31:23.908275Z 0 [Note] InnoDB: Using CPU crc32 instructions
[32mmysql57_1          |[0m 2020-05-05T09:31:23.909914Z 0 [Note] InnoDB: Initializing buffer pool, total size = 128M, instances = 1, chunk size = 128M
[32mmysql57_1          |[0m 2020-05-05T09:31:23.921245Z 0 [Note] InnoDB: Completed initialization of buffer pool
[32mmysql57_1          |[0m 2020-05-05T09:31:23.923697Z 0 [Note] InnoDB: If the mysqld execution user is authorized, page cleaner thread priority can be changed. See the man page of setpriority().
[32mmysql57_1          |[0m 2020-05-05T09:31:23.939323Z 0 [Note] InnoDB: Highest supported file format is Barracuda.
[32mmysql57_1          |[0m 2020-05-05T09:31:23.967368Z 0 [Note] InnoDB: Creating shared tablespace for temporary tables
[32mmysql57_1          |[0m 2020-05-05T09:31:23.967475Z 0 [Note] InnoDB: Setting file './ibtmp1' size to 12 MB. Physically writing the file full; Please wait ...
[32mmysql57_1          |[0m 2020-05-05T09:31:24.010222Z 0 [Note] InnoDB: File './ibtmp1' size is now 12 MB.
[32mmysql57_1          |[0m 2020-05-05T09:31:24.011556Z 0 [Note] InnoDB: 96 redo rollback segment(s) found. 96 redo rollback segment(s) are active.
[32mmysql57_1          |[0m 2020-05-05T09:31:24.011599Z 0 [Note] InnoDB: 32 non-redo rollback segment(s) are active.
[32mmysql57_1          |[0m 2020-05-05T09:31:24.012632Z 0 [Note] InnoDB: Waiting for purge to start
[32mmysql57_1          |[0m 2020-05-05T09:31:24.067964Z 0 [Note] InnoDB: 5.7.30 started; log sequence number 2629907
[32mmysql57_1          |[0m 2020-05-05T09:31:24.068526Z 0 [Note] InnoDB: Loading buffer pool(s) from /var/lib/mysql/ib_buffer_pool
[32mmysql57_1          |[0m 2020-05-05T09:31:24.069560Z 0 [Note] Plugin 'FEDERATED' is disabled.
[32mmysql57_1          |[0m 2020-05-05T09:31:24.072774Z 0 [Note] InnoDB: Buffer pool(s) load completed at 200505  9:31:24
[32mmysql57_1          |[0m 2020-05-05T09:31:24.078700Z 0 [Note] Found ca.pem, server-cert.pem and server-key.pem in data directory. Trying to enable SSL support using them.
[32mmysql57_1          |[0m 2020-05-05T09:31:24.078750Z 0 [Note] Skipping generation of SSL certificates as certificate files are present in data directory.
[32mmysql57_1          |[0m 2020-05-05T09:31:24.079747Z 0 [Warning] CA certificate ca.pem is self signed.
[32mmysql57_1          |[0m 2020-05-05T09:31:24.079816Z 0 [Note] Skipping generation of RSA key pair as key files are present in data directory.
[32mmysql57_1          |[0m 2020-05-05T09:31:24.082455Z 0 [Warning] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.
[32mmysql57_1          |[0m 2020-05-05T09:31:24.094281Z 0 [Note] Event Scheduler: Loaded 0 events
[32mmysql57_1          |[0m 2020-05-05T09:31:24.095057Z 0 [Note] mysqld: ready for connections.
[32mmysql57_1          |[0m Version: '5.7.30'  socket: '/var/run/mysqld/mysqld.sock'  port: 0  MySQL Community Server (GPL)
[32mmysql57_1          |[0m 2020-05-05 09:31:24+00:00 [Note] [Entrypoint]: Temporary server started.
[32mmysql57_1          |[0m Warning: Unable to load '/usr/share/zoneinfo/iso3166.tab' as time zone. Skipping it.
[32mmysql57_1          |[0m Warning: Unable to load '/usr/share/zoneinfo/leap-seconds.list' as time zone. Skipping it.
[32mmysql57_1          |[0m Warning: Unable to load '/usr/share/zoneinfo/zone.tab' as time zone. Skipping it.
[32mmysql57_1          |[0m Warning: Unable to load '/usr/share/zoneinfo/zone1970.tab' as time zone. Skipping it.
[32mmysql57_1          |[0m 2020-05-05 09:31:28+00:00 [Note] [Entrypoint]: Creating database eagle_db
[32mmysql57_1          |[0m 2020-05-05 09:31:28+00:00 [Note] [Entrypoint]: Creating user eagle-user
[32mmysql57_1          |[0m 2020-05-05 09:31:28+00:00 [Note] [Entrypoint]: Giving user eagle-user access to schema eagle_db
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05 09:31:28+00:00 [Note] [Entrypoint]: /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/eagle_db_dump_mock.sql
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05 09:31:28+00:00 [Note] [Entrypoint]: Stopping temporary server
[32mmysql57_1          |[0m 2020-05-05T09:31:28.499560Z 0 [Note] Giving 0 client threads a chance to die gracefully
[32mmysql57_1          |[0m 2020-05-05T09:31:28.499895Z 0 [Note] Shutting down slave threads
[32mmysql57_1          |[0m 2020-05-05T09:31:28.500057Z 0 [Note] Forcefully disconnecting 0 remaining clients
[32mmysql57_1          |[0m 2020-05-05T09:31:28.500370Z 0 [Note] Event Scheduler: Purging the queue. 0 events
[32mmysql57_1          |[0m 2020-05-05T09:31:28.500717Z 0 [Note] Binlog end
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501499Z 0 [Note] Shutting down plugin 'ngram'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501541Z 0 [Note] Shutting down plugin 'partition'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501554Z 0 [Note] Shutting down plugin 'BLACKHOLE'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501561Z 0 [Note] Shutting down plugin 'ARCHIVE'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501571Z 0 [Note] Shutting down plugin 'PERFORMANCE_SCHEMA'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501603Z 0 [Note] Shutting down plugin 'MRG_MYISAM'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501616Z 0 [Note] Shutting down plugin 'MyISAM'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501667Z 0 [Note] Shutting down plugin 'INNODB_SYS_VIRTUAL'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501712Z 0 [Note] Shutting down plugin 'INNODB_SYS_DATAFILES'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501724Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLESPACES'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501732Z 0 [Note] Shutting down plugin 'INNODB_SYS_FOREIGN_COLS'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501741Z 0 [Note] Shutting down plugin 'INNODB_SYS_FOREIGN'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501748Z 0 [Note] Shutting down plugin 'INNODB_SYS_FIELDS'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501756Z 0 [Note] Shutting down plugin 'INNODB_SYS_COLUMNS'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501765Z 0 [Note] Shutting down plugin 'INNODB_SYS_INDEXES'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501840Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLESTATS'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501893Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLES'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501904Z 0 [Note] Shutting down plugin 'INNODB_FT_INDEX_TABLE'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501917Z 0 [Note] Shutting down plugin 'INNODB_FT_INDEX_CACHE'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501929Z 0 [Note] Shutting down plugin 'INNODB_FT_CONFIG'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501941Z 0 [Note] Shutting down plugin 'INNODB_FT_BEING_DELETED'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501951Z 0 [Note] Shutting down plugin 'INNODB_FT_DELETED'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.501959Z 0 [Note] Shutting down plugin 'INNODB_FT_DEFAULT_STOPWORD'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502064Z 0 [Note] Shutting down plugin 'INNODB_METRICS'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502072Z 0 [Note] Shutting down plugin 'INNODB_TEMP_TABLE_INFO'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502079Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_POOL_STATS'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502087Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_PAGE_LRU'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502097Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_PAGE'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502104Z 0 [Note] Shutting down plugin 'INNODB_CMP_PER_INDEX_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502114Z 0 [Note] Shutting down plugin 'INNODB_CMP_PER_INDEX'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502150Z 0 [Note] Shutting down plugin 'INNODB_CMPMEM_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502225Z 0 [Note] Shutting down plugin 'INNODB_CMPMEM'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502233Z 0 [Note] Shutting down plugin 'INNODB_CMP_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502244Z 0 [Note] Shutting down plugin 'INNODB_CMP'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502257Z 0 [Note] Shutting down plugin 'INNODB_LOCK_WAITS'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502265Z 0 [Note] Shutting down plugin 'INNODB_LOCKS'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502275Z 0 [Note] Shutting down plugin 'INNODB_TRX'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502373Z 0 [Note] Shutting down plugin 'InnoDB'
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502499Z 0 [Note] InnoDB: FTS optimize thread exiting.
[32mmysql57_1          |[0m 2020-05-05T09:31:28.502980Z 0 [Note] InnoDB: Starting shutdown...
[32mmysql57_1          |[0m 2020-05-05T09:31:28.604054Z 0 [Note] InnoDB: Dumping buffer pool(s) to /var/lib/mysql/ib_buffer_pool
[32mmysql57_1          |[0m 2020-05-05T09:31:28.604442Z 0 [Note] InnoDB: Buffer pool(s) dump completed at 200505  9:31:28
[32mmysql57_1          |[0m 2020-05-05T09:31:30.055450Z 0 [Note] InnoDB: Shutdown completed; log sequence number 12712709
[32mmysql57_1          |[0m 2020-05-05T09:31:30.058543Z 0 [Note] InnoDB: Removed temporary tablespace data file: "ibtmp1"
[32mmysql57_1          |[0m 2020-05-05T09:31:30.058598Z 0 [Note] Shutting down plugin 'MEMORY'
[32mmysql57_1          |[0m 2020-05-05T09:31:30.058613Z 0 [Note] Shutting down plugin 'CSV'
[32mmysql57_1          |[0m 2020-05-05T09:31:30.058627Z 0 [Note] Shutting down plugin 'sha256_password'
[32mmysql57_1          |[0m 2020-05-05T09:31:30.058635Z 0 [Note] Shutting down plugin 'mysql_native_password'
[32mmysql57_1          |[0m 2020-05-05T09:31:30.059101Z 0 [Note] Shutting down plugin 'binlog'
[32mmysql57_1          |[0m 2020-05-05T09:31:30.062336Z 0 [Note] mysqld: Shutdown complete
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05 09:31:30+00:00 [Note] [Entrypoint]: Temporary server stopped
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05 09:31:30+00:00 [Note] [Entrypoint]: MySQL init process done. Ready for start up.
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05T09:31:30.709422Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
[32mmysql57_1          |[0m 2020-05-05T09:31:30.711036Z 0 [Note] mysqld (mysqld 5.7.30) starting as process 1 ...
[32mmysql57_1          |[0m 2020-05-05T09:31:30.714673Z 0 [Note] InnoDB: PUNCH HOLE support available
[32mmysql57_1          |[0m 2020-05-05T09:31:30.714760Z 0 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins
[32mmysql57_1          |[0m 2020-05-05T09:31:30.714792Z 0 [Note] InnoDB: Uses event mutexes
[32mmysql57_1          |[0m 2020-05-05T09:31:30.714813Z 0 [Note] InnoDB: GCC builtin __atomic_thread_fence() is used for memory barrier
[32mmysql57_1          |[0m 2020-05-05T09:31:30.714848Z 0 [Note] InnoDB: Compressed tables use zlib 1.2.11
[32mmysql57_1          |[0m 2020-05-05T09:31:30.714889Z 0 [Note] InnoDB: Using Linux native AIO
[32mmysql57_1          |[0m 2020-05-05T09:31:30.715509Z 0 [Note] InnoDB: Number of pools: 1
[32mmysql57_1          |[0m 2020-05-05T09:31:30.715882Z 0 [Note] InnoDB: Using CPU crc32 instructions
[32mmysql57_1          |[0m 2020-05-05T09:31:30.717717Z 0 [Note] InnoDB: Initializing buffer pool, total size = 128M, instances = 1, chunk size = 128M
[32mmysql57_1          |[0m 2020-05-05T09:31:30.729268Z 0 [Note] InnoDB: Completed initialization of buffer pool
[32mmysql57_1          |[0m 2020-05-05T09:31:30.731876Z 0 [Note] InnoDB: If the mysqld execution user is authorized, page cleaner thread priority can be changed. See the man page of setpriority().
[32mmysql57_1          |[0m 2020-05-05T09:31:30.743863Z 0 [Note] InnoDB: Highest supported file format is Barracuda.
[32mmysql57_1          |[0m 2020-05-05T09:31:30.758941Z 0 [Note] InnoDB: Creating shared tablespace for temporary tables
[32mmysql57_1          |[0m 2020-05-05T09:31:30.759185Z 0 [Note] InnoDB: Setting file './ibtmp1' size to 12 MB. Physically writing the file full; Please wait ...
[32mmysql57_1          |[0m 2020-05-05T09:31:30.808901Z 0 [Note] InnoDB: File './ibtmp1' size is now 12 MB.
[32mmysql57_1          |[0m 2020-05-05T09:31:30.810934Z 0 [Note] InnoDB: 96 redo rollback segment(s) found. 96 redo rollback segment(s) are active.
[32mmysql57_1          |[0m 2020-05-05T09:31:30.811315Z 0 [Note] InnoDB: 32 non-redo rollback segment(s) are active.
[32mmysql57_1          |[0m 2020-05-05T09:31:30.812744Z 0 [Note] InnoDB: Waiting for purge to start
[32mmysql57_1          |[0m 2020-05-05T09:31:30.867999Z 0 [Note] InnoDB: 5.7.30 started; log sequence number 12712709
[32mmysql57_1          |[0m 2020-05-05T09:31:30.869053Z 0 [Note] InnoDB: Loading buffer pool(s) from /var/lib/mysql/ib_buffer_pool
[32mmysql57_1          |[0m 2020-05-05T09:31:30.869344Z 0 [Note] Plugin 'FEDERATED' is disabled.
[32mmysql57_1          |[0m 2020-05-05T09:31:30.873567Z 0 [Note] InnoDB: Buffer pool(s) load completed at 200505  9:31:30
[32mmysql57_1          |[0m 2020-05-05T09:31:30.876932Z 0 [Note] Found ca.pem, server-cert.pem and server-key.pem in data directory. Trying to enable SSL support using them.
[32mmysql57_1          |[0m 2020-05-05T09:31:30.877124Z 0 [Note] Skipping generation of SSL certificates as certificate files are present in data directory.
[32mmysql57_1          |[0m 2020-05-05T09:31:30.878146Z 0 [Warning] CA certificate ca.pem is self signed.
[32mmysql57_1          |[0m 2020-05-05T09:31:30.878239Z 0 [Note] Skipping generation of RSA key pair as key files are present in data directory.
[32mmysql57_1          |[0m 2020-05-05T09:31:30.879042Z 0 [Note] Server hostname (bind-address): '*'; port: 3306
[32mmysql57_1          |[0m 2020-05-05T09:31:30.879319Z 0 [Note] IPv6 is available.
[32mmysql57_1          |[0m 2020-05-05T09:31:30.879392Z 0 [Note]   - '::' resolves to '::';
[32mmysql57_1          |[0m 2020-05-05T09:31:30.879459Z 0 [Note] Server socket created on IP: '::'.
[32mmysql57_1          |[0m 2020-05-05T09:31:30.882033Z 0 [Warning] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.
[32mmysql57_1          |[0m 2020-05-05T09:31:30.894680Z 0 [Note] Event Scheduler: Loaded 0 events
[32mmysql57_1          |[0m 2020-05-05T09:31:30.895562Z 0 [Note] mysqld: ready for connections.
[32mmysql57_1          |[0m Version: '5.7.30'  socket: '/var/run/mysqld/mysqld.sock'  port: 3306  MySQL Community Server (GPL)
[33mhouston-service_1  |[0m [2020-05-05 09:31:56 +0000] [10] [DEBUG] POST /api/activator/
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,564 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,564 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,573 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,573 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,578 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,578 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,582 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,582 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,584 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,585 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,587 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,590 INFO sqlalchemy.engine.base.Engine INSERT INTO activator (name, type, available, sensitivity, category, envs, platforms, `lastUpdated`, `userCapacity`, `serverCapacity`, regions, hosting, `apiManagement`, ci, cd, `sourceControl`, `businessUnit`, `technologyOwner`, `technologyOwnerEmail`, billing, activator, status, description, `accessRequestedBy`, source, `activatorLink`) VALUES (%(name)s, %(type)s, %(available)s, %(sensitivity)s, %(category)s, %(envs)s, %(platforms)s, %(lastUpdated)s, %(userCapacity)s, %(serverCapacity)s, %(regions)s, %(hosting)s, %(apiManagement)s, %(ci)s, %(cd)s, %(sourceControl)s, %(businessUnit)s, %(technologyOwner)s, %(technologyOwnerEmail)s, %(billing)s, %(activator)s, %(status)s, %(description)s, %(accessRequestedBy)s, %(source)s, %(activatorLink)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,591 INFO sqlalchemy.engine.base.Engine {'name': 'test-post-', 'type': 'test-post-', 'available': 1, 'sensitivity': 'test-post-', 'category': 'test-post-', 'envs': '["dev", "prd", "poc"]', 'platforms': '["test-post-1", "test-post-2", "test-post-3", "test-post-4", "test-post-5", "test-post-6"]', 'lastUpdated': '2020-05-05 09:31:56', 'userCapacity': 999999999, 'serverCapacity': 999999999, 'regions': '["test-post-1", "test-post-2", "test-post-3", "test-post-4", "test-post-5"]', 'hosting': '["test-post-1", "test-post-2", "test-post-3", "test-post-4", "test-post-5"]', 'apiManagement': '["test-post-", "test-post-1", "test-post-2", "test-post-3", "test-post-4", "test-post-5"]', 'ci': '["test-post-1", "test-post-2"]', 'cd': '["test-post-1", "test-post-2", "test-post-3"]', 'sourceControl': '["test-post-", "test-post-1"]', 'businessUnit': 'test-post-', 'technologyOwner': 'test-post-', 'technologyOwnerEmail': 'test-post-', 'billing': 'test-post-', 'activator': 'test-activator', 'status': 'Available', 'description': 'test-post-test-post-test-post-test-post-test-post-test-post-test-post-test-post-', 'accessRequestedBy': 0, 'source': 'test-post-', 'activatorLink': 'test-post-'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,598 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,606 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,609 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,609 INFO sqlalchemy.engine.base.Engine {'param_1': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,613 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:56 +0000] [10] [DEBUG] GET /api/activator/112
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,629 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,631 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,631 INFO sqlalchemy.engine.base.Engine {'id_1': '112'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,634 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:56 +0000] [10] [DEBUG] POST /api/setactivatorstatus/
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,646 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,647 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,647 INFO sqlalchemy.engine.base.Engine {'id_1': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,650 INFO sqlalchemy.engine.base.Engine UPDATE activator SET `lastUpdated`=%(lastUpdated)s, status=%(status)s WHERE activator.id = %(activator_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,650 INFO sqlalchemy.engine.base.Engine {'lastUpdated': '2020-05-05 09:31:56', 'status': 'Locked', 'activator_id': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,651 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,655 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,657 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,657 INFO sqlalchemy.engine.base.Engine {'param_1': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,660 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:56 +0000] [12] [DEBUG] PUT /api/activator/112
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,724 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,724 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,728 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,729 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,732 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,732 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,735 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,735 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,736 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,736 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,738 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,741 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,741 INFO sqlalchemy.engine.base.Engine {'id_1': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,746 INFO sqlalchemy.engine.base.Engine UPDATE activator SET name=%(name)s, type=%(type)s, available=%(available)s, sensitivity=%(sensitivity)s, category=%(category)s, envs=%(envs)s, platforms=%(platforms)s, `lastUpdated`=%(lastUpdated)s, `userCapacity`=%(userCapacity)s, `serverCapacity`=%(serverCapacity)s, regions=%(regions)s, hosting=%(hosting)s, `apiManagement`=%(apiManagement)s, ci=%(ci)s, cd=%(cd)s, `sourceControl`=%(sourceControl)s, `businessUnit`=%(businessUnit)s, `technologyOwner`=%(technologyOwner)s, `technologyOwnerEmail`=%(technologyOwnerEmail)s, billing=%(billing)s, activator=%(activator)s, status=%(status)s, description=%(description)s, `accessRequestedBy`=%(accessRequestedBy)s, source=%(source)s, `activatorLink`=%(activatorLink)s WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,746 INFO sqlalchemy.engine.base.Engine {'name': 'mynewactivatortest', 'type': 'best', 'available': 0, 'sensitivity': 'confidential', 'category': 'category', 'envs': '["dev", "Prd", "Poc"]', 'platforms': '["test-put-101", "test-put-102", "test-put-103", "test-put-104", "test-put-105", "test-put-106"]', 'lastUpdated': '2020-05-05 09:31:56', 'userCapacity': 10, 'serverCapacity': 5, 'regions': '["test-put-101", "test-put-210", "test-put-310", "test-put-410", "test-put-510"]', 'hosting': '["test-put-11", "test-put-22", "test-put-33", "test-put-44", "test-put-55"]', 'apiManagement': '["test-put-6", "test-put-7", "test-put-8"]', 'ci': '["test-put-7", "test-put-8"]', 'cd': '["test-put-4", "test-put-5", "test-put-6"]', 'sourceControl': '["dotmatrix", "tape"]', 'businessUnit': 'businessUnit', 'technologyOwner': 'me', 'technologyOwnerEmail': 'me@me.com', 'billing': 'billing', 'activator': 'new-test-activator', 'status': 'NotAvailable', 'description': 'TheQuickBrownFoxJumpedOverTheLazyDogs', 'accessRequestedBy': 0, 'source': 'original', 'activatorLink': 'test-put-', 'id_1': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,747 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,751 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,753 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,753 INFO sqlalchemy.engine.base.Engine {'id_1': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,756 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:56 +0000] [12] [DEBUG] GET /api/activator/112
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,767 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,769 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,769 INFO sqlalchemy.engine.base.Engine {'id_1': '112'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,772 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:56 +0000] [15] [DEBUG] DELETE /api/activator/112
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,836 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,837 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,841 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,842 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,845 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,845 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,848 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,848 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,849 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,850 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,851 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,855 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,855 INFO sqlalchemy.engine.base.Engine {'id_1': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,858 INFO sqlalchemy.engine.base.Engine DELETE FROM activator WHERE activator.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,858 INFO sqlalchemy.engine.base.Engine {'id': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,859 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:56 +0000] [12] [DEBUG] GET /api/activator/112
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,879 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,881 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,881 INFO sqlalchemy.engine.base.Engine {'id_1': '112'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,883 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:56 +0000] [11] [DEBUG] GET /api/activators/
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,943 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,944 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,948 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,948 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,952 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,952 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,955 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,955 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,957 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,957 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,958 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,961 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE true = 1 ORDER BY activator.id
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,961 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,972 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:56 +0000] [15] [DEBUG] GET /api/activator_meta/
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,987 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,988 INFO sqlalchemy.engine.base.Engine SELECT count(*) AS count_1 
[33mhouston-service_1  |[0m FROM (SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,989 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:56,990 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:56 +0000] [10] [DEBUG] GET /api/activatorcategories/
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,001 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,002 INFO sqlalchemy.engine.base.Engine select category from activator group by category
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,002 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,004 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [13] [DEBUG] POST /api/application/
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,080 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,081 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,085 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,085 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,089 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,089 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,092 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,092 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,093 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,093 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,095 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,097 INFO sqlalchemy.engine.base.Engine INSERT INTO application (`solutionId`, `activatorId`, name, env, status, description, `lastUpdated`, resources) VALUES (%(solutionId)s, %(activatorId)s, %(name)s, %(env)s, %(status)s, %(description)s, %(lastUpdated)s, %(resources)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,097 INFO sqlalchemy.engine.base.Engine {'solutionId': 0, 'activatorId': 0, 'name': 'test', 'env': 'DEV', 'status': 'Active', 'description': 'test', 'lastUpdated': '2020-05-05 09:31:57', 'resources': '[{"ipaddress": "address1", "name": "value1"}, {"ipaddress": "address2", "name": "value2"}, {"ipaddress": "address3", "name": "value3"}]'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,098 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,102 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,104 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,104 INFO sqlalchemy.engine.base.Engine {'param_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,107 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [12] [DEBUG] GET /api/application/7
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,121 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,123 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,123 INFO sqlalchemy.engine.base.Engine {'id_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,126 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [12] [DEBUG] PUT /api/application/7
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,136 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,138 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,138 INFO sqlalchemy.engine.base.Engine {'id_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,140 INFO sqlalchemy.engine.base.Engine UPDATE application SET id=%(id)s, status=%(status)s, description=%(description)s, `lastUpdated`=%(lastUpdated)s, resources=%(resources)s WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,141 INFO sqlalchemy.engine.base.Engine {'id': 7, 'status': 'Inactive', 'description': 'test put', 'lastUpdated': '2020-05-05 09:31:57', 'resources': '"[{\\"ipaddress\\": \\"address1\\", \\"name\\": \\"value1\\"}, {\\"ipaddress\\": \\"address2\\", \\"name\\": \\"value2\\"}, {\\"ipaddress\\": \\"address3\\", \\"name\\": \\"value3\\"}]"', 'id_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,142 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,145 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,146 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,147 INFO sqlalchemy.engine.base.Engine {'param_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,150 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [12] [DEBUG] GET /api/application/7
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,160 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,161 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,162 INFO sqlalchemy.engine.base.Engine {'id_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,166 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [12] [DEBUG] DELETE /api/application/7
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,177 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,178 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,178 INFO sqlalchemy.engine.base.Engine {'id_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,180 INFO sqlalchemy.engine.base.Engine DELETE FROM application WHERE application.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,180 INFO sqlalchemy.engine.base.Engine {'id': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,181 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [11] [DEBUG] GET /api/application/7
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,196 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,198 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,198 INFO sqlalchemy.engine.base.Engine {'id_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,200 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [15] [DEBUG] GET /api/applications/
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,211 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,213 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE true = 1 ORDER BY application.id
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,213 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,219 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [10] [DEBUG] POST /api/application/
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,232 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,233 INFO sqlalchemy.engine.base.Engine INSERT INTO application (`solutionId`, `activatorId`, name, env, status, description, `lastUpdated`, resources) VALUES (%(solutionId)s, %(activatorId)s, %(name)s, %(env)s, %(status)s, %(description)s, %(lastUpdated)s, %(resources)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,234 INFO sqlalchemy.engine.base.Engine {'solutionId': 0, 'activatorId': 0, 'name': 'test', 'env': 'DEV', 'status': 'Active', 'description': 'test', 'lastUpdated': '2020-05-05 09:31:57', 'resources': '[]'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,235 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,239 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,241 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,241 INFO sqlalchemy.engine.base.Engine {'param_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,243 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [10] [DEBUG] GET /api/application/8
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,254 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,255 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,255 INFO sqlalchemy.engine.base.Engine {'id_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,258 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [10] [DEBUG] DELETE /api/application/8
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,269 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,270 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,270 INFO sqlalchemy.engine.base.Engine {'id_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,274 INFO sqlalchemy.engine.base.Engine DELETE FROM application WHERE application.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,274 INFO sqlalchemy.engine.base.Engine {'id': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,275 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [13] [DEBUG] GET /api/application/8
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,292 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,294 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,294 INFO sqlalchemy.engine.base.Engine {'id_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,295 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [13] [DEBUG] POST /api/keyValues/bgproutingmode/
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,311 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,312 INFO sqlalchemy.engine.base.Engine INSERT INTO bgproutingmode (`key`, value) VALUES (%(key)s, %(value)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,312 INFO sqlalchemy.engine.base.Engine {'key': 'Local', 'value': 'Local'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,314 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,318 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,319 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode 
[33mhouston-service_1  |[0m WHERE bgproutingmode.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,319 INFO sqlalchemy.engine.base.Engine {'param_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,322 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [13] [DEBUG] GET /api/keyValues/bgproutingmode/2
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,338 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,340 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode 
[33mhouston-service_1  |[0m WHERE bgproutingmode.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,340 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,342 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [15] [DEBUG] PUT /api/keyValues/bgproutingmode/2
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,352 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,353 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode 
[33mhouston-service_1  |[0m WHERE bgproutingmode.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,353 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,357 INFO sqlalchemy.engine.base.Engine UPDATE bgproutingmode SET id=%(id)s, `key`=%(key)s, value=%(value)s WHERE bgproutingmode.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,357 INFO sqlalchemy.engine.base.Engine {'id': 2, 'key': 'new-key', 'value': 'new-value', 'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,358 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,362 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,363 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode 
[33mhouston-service_1  |[0m WHERE bgproutingmode.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,363 INFO sqlalchemy.engine.base.Engine {'param_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,364 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [13] [DEBUG] GET /api/keyValues/bgproutingmode/2
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,374 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,375 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode 
[33mhouston-service_1  |[0m WHERE bgproutingmode.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,375 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,377 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [15] [DEBUG] DELETE /api/keyValues/bgproutingmode/2
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,386 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,388 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode 
[33mhouston-service_1  |[0m WHERE bgproutingmode.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,388 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,390 INFO sqlalchemy.engine.base.Engine DELETE FROM bgproutingmode WHERE bgproutingmode.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,390 INFO sqlalchemy.engine.base.Engine {'id': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,391 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [13] [DEBUG] GET /api/keyValues/bgproutingmode/2
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,404 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,405 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode 
[33mhouston-service_1  |[0m WHERE bgproutingmode.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,405 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,406 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [15] [DEBUG] GET /api/keyValues/bgproutingmode/
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,417 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,419 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode ORDER BY bgproutingmode.`key`
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,419 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,420 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [10] [DEBUG] POST /api/businessunit/
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,435 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,436 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.name = %(name_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,436 INFO sqlalchemy.engine.base.Engine {'name_1': 'BU-Test'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,440 INFO sqlalchemy.engine.base.Engine INSERT INTO businessunit (name, description, `isActive`) VALUES (%(name)s, %(description)s, %(isActive)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,440 INFO sqlalchemy.engine.base.Engine {'name': 'BU-Test', 'description': 'Test BU desc', 'isActive': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,442 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,445 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,446 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,447 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,449 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [13] [DEBUG] GET /api/businessunit/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,464 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,467 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,467 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,469 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [13] [DEBUG] PUT /api/businessunit/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,483 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,484 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,484 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,487 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,487 INFO sqlalchemy.engine.base.Engine {'id_1': 1, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,490 INFO sqlalchemy.engine.base.Engine UPDATE businessunit SET `isActive`=%(isActive)s WHERE businessunit.id = %(businessunit_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,490 INFO sqlalchemy.engine.base.Engine {'isActive': 0, 'businessunit_id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,492 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,495 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,496 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,497 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,498 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [12] [DEBUG] GET /api/businessunit/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,509 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,510 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,511 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,513 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [12] [DEBUG] DELETE /api/businessunit/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,524 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,525 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,525 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,529 INFO sqlalchemy.engine.base.Engine DELETE FROM businessunit WHERE businessunit.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,529 INFO sqlalchemy.engine.base.Engine {'id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,531 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [11] [DEBUG] GET /api/businessunit/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,545 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,547 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,547 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,549 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [11] [DEBUG] DELETE /api/businessunit/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,559 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,560 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,560 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,562 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [15] [DEBUG] GET /api/businessunits/
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,572 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,574 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit ORDER BY businessunit.id
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,574 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,576 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [10] [DEBUG] POST /api/keyValues/cd/
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,591 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,593 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,593 INFO sqlalchemy.engine.base.Engine {'key_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,597 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,597 INFO sqlalchemy.engine.base.Engine {'key_1': 'test', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,600 INFO sqlalchemy.engine.base.Engine INSERT INTO cd (`key`, value) VALUES (%(key)s, %(value)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,601 INFO sqlalchemy.engine.base.Engine {'key': 'test', 'value': 'test-post-value'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,602 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,607 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,608 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,609 INFO sqlalchemy.engine.base.Engine {'param_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,610 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [15] [DEBUG] GET /api/keyValues/cd/test
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,621 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,624 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,624 INFO sqlalchemy.engine.base.Engine {'key_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,626 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [15] [DEBUG] PUT /api/keyValues/cd/test
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,638 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,640 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,640 INFO sqlalchemy.engine.base.Engine {'key_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,643 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,643 INFO sqlalchemy.engine.base.Engine {'key_1': 'test', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,646 INFO sqlalchemy.engine.base.Engine UPDATE cd SET value=%(value)s WHERE cd.`key` = %(cd_key)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,646 INFO sqlalchemy.engine.base.Engine {'value': 'new-test-value', 'cd_key': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,647 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,650 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,651 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,651 INFO sqlalchemy.engine.base.Engine {'param_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,652 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [15] [DEBUG] GET /api/keyValues/cd/test
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,662 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,664 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,664 INFO sqlalchemy.engine.base.Engine {'key_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,665 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [11] [DEBUG] DELETE /api/keyValues/cd/test
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,678 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,679 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,679 INFO sqlalchemy.engine.base.Engine {'key_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,681 INFO sqlalchemy.engine.base.Engine DELETE FROM cd WHERE cd.`key` = %(key)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,682 INFO sqlalchemy.engine.base.Engine {'key': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,682 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [11] [DEBUG] GET /api/keyValues/cd/test
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,700 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,701 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,701 INFO sqlalchemy.engine.base.Engine {'key_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,702 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [11] [DEBUG] GET /api/keyValues/cd/
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,715 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,716 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd ORDER BY cd.`key`
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,716 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,718 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [11] [DEBUG] POST /api/keyValues/ci/
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,733 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,734 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,734 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,736 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,736 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,739 INFO sqlalchemy.engine.base.Engine INSERT INTO ci (`key`, value) VALUES (%(key)s, %(value)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,739 INFO sqlalchemy.engine.base.Engine {'key': 'test-ci', 'value': 'test-post-value'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,741 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,745 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,746 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,746 INFO sqlalchemy.engine.base.Engine {'param_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,748 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [12] [DEBUG] GET /api/keyValues/ci/test-ci
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,763 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,765 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,765 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,767 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [15] [DEBUG] PUT /api/keyValues/ci/test-ci
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,781 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,782 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,782 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,784 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,784 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,786 INFO sqlalchemy.engine.base.Engine UPDATE ci SET value=%(value)s WHERE ci.`key` = %(ci_key)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,786 INFO sqlalchemy.engine.base.Engine {'value': 'new-test-value', 'ci_key': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,788 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,792 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,793 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,793 INFO sqlalchemy.engine.base.Engine {'param_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,794 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [15] [DEBUG] GET /api/keyValues/ci/test-ci
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,803 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,805 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,805 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,807 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [12] [DEBUG] DELETE /api/keyValues/ci/test-ci
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,820 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,822 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,822 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,825 INFO sqlalchemy.engine.base.Engine DELETE FROM ci WHERE ci.`key` = %(key)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,825 INFO sqlalchemy.engine.base.Engine {'key': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,826 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [13] [DEBUG] DELETE /api/keyValues/ci/test-ci
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,844 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,846 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,846 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,848 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [10] [DEBUG] GET /api/keyValues/ci/test-ci
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,861 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,863 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,863 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,865 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [10] [DEBUG] GET /api/keyValues/ci/
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,878 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,879 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci ORDER BY ci.`key`
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,880 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,881 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [15] [DEBUG] POST /api/cloudaccount/
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,895 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,896 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,897 INFO sqlalchemy.engine.base.Engine {'id_1': 10}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,901 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,901 INFO sqlalchemy.engine.base.Engine {'id_1': 10, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,903 INFO sqlalchemy.engine.base.Engine INSERT INTO cloudaccount (id, name, `userId`, `isActive`) VALUES (%(id)s, %(name)s, %(userId)s, %(isActive)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,903 INFO sqlalchemy.engine.base.Engine {'id': 10, 'name': 'GCP-Test', 'userId': 1, 'isActive': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,905 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,910 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,911 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,911 INFO sqlalchemy.engine.base.Engine {'param_1': 10}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,913 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [11] [DEBUG] GET /api/cloudaccount/10
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,926 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,927 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,927 INFO sqlalchemy.engine.base.Engine {'id_1': '10'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,929 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [10] [DEBUG] PUT /api/cloudaccount/10
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,939 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,940 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,940 INFO sqlalchemy.engine.base.Engine {'id_1': '10'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,943 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,943 INFO sqlalchemy.engine.base.Engine {'id_1': 10, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,946 INFO sqlalchemy.engine.base.Engine UPDATE cloudaccount SET name=%(name)s, `isActive`=%(isActive)s WHERE cloudaccount.id = %(cloudaccount_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,946 INFO sqlalchemy.engine.base.Engine {'name': 'GCP-Test-Updated', 'isActive': 0, 'cloudaccount_id': 10}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,947 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,951 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,952 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,952 INFO sqlalchemy.engine.base.Engine {'param_1': 10}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,954 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [10] [DEBUG] GET /api/cloudaccount/10
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,964 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,965 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,965 INFO sqlalchemy.engine.base.Engine {'id_1': '10'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,968 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [10] [DEBUG] DELETE /api/cloudaccount/10
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,978 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,979 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,979 INFO sqlalchemy.engine.base.Engine {'id_1': '10'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,982 INFO sqlalchemy.engine.base.Engine DELETE FROM cloudaccount WHERE cloudaccount.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,982 INFO sqlalchemy.engine.base.Engine {'id': 10}
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,983 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:57 +0000] [15] [DEBUG] GET /api/cloudaccount/10
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,997 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,998 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:57,998 INFO sqlalchemy.engine.base.Engine {'id_1': '10'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,001 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [15] [DEBUG] DELETE /api/cloudaccount/10
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,010 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,011 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,012 INFO sqlalchemy.engine.base.Engine {'id_1': '10'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,013 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [13] [DEBUG] GET /api/cloudaccounts/
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,023 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,025 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount ORDER BY cloudaccount.id
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,025 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,027 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [12] [DEBUG] POST /api/keyValues/environment/
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,044 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,046 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,046 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,049 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,049 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,052 INFO sqlalchemy.engine.base.Engine INSERT INTO environment (`key`, value) VALUES (%(key)s, %(value)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,052 INFO sqlalchemy.engine.base.Engine {'key': 'test-env', 'value': 'test-post-value'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,053 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,058 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,060 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,060 INFO sqlalchemy.engine.base.Engine {'param_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,062 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [12] [DEBUG] GET /api/keyValues/environment/test-env
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,072 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,074 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,074 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,076 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [12] [DEBUG] PUT /api/keyValues/environment/test-env
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,089 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,091 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,091 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,094 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,094 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,097 INFO sqlalchemy.engine.base.Engine UPDATE environment SET value=%(value)s WHERE environment.`key` = %(environment_key)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,097 INFO sqlalchemy.engine.base.Engine {'value': 'new-test-value', 'environment_key': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,099 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,102 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,103 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,103 INFO sqlalchemy.engine.base.Engine {'param_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,106 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [13] [DEBUG] GET /api/keyValues/environment/test-env
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,117 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,118 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,118 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,120 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [10] [DEBUG] DELETE /api/keyValues/environment/test-env
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,132 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,134 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,134 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,137 INFO sqlalchemy.engine.base.Engine DELETE FROM environment WHERE environment.`key` = %(key)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,137 INFO sqlalchemy.engine.base.Engine {'key': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,138 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [10] [DEBUG] DELETE /api/keyValues/environment/test-env
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,155 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,159 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,159 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,161 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [10] [DEBUG] GET /api/keyValues/environment/test-env
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,177 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,178 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,178 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,180 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [12] [DEBUG] GET /api/keyValues/environment/
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,193 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,195 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment ORDER BY environment.`key`
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,196 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,198 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [12] [DEBUG] GET /api/health
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [13] [DEBUG] POST /api/landingzoneaction/
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,230 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,233 INFO sqlalchemy.engine.base.Engine INSERT INTO landingzoneaction (title, `categoryName`, `categoryClass`, `completionRate`, locked, `routerLink`) VALUES (%(title)s, %(categoryName)s, %(categoryClass)s, %(completionRate)s, %(locked)s, %(routerLink)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,233 INFO sqlalchemy.engine.base.Engine {'title': 'Test Landing Zone', 'categoryName': 'testCategory', 'categoryClass': 'test-folder-structure', 'completionRate': 100, 'locked': 0, 'routerLink': 'testLink'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,235 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,239 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,242 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,242 INFO sqlalchemy.engine.base.Engine {'param_1': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,245 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [10] [DEBUG] GET /api/landingzoneaction/13
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,259 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,263 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,264 INFO sqlalchemy.engine.base.Engine {'id_1': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,268 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [15] [DEBUG] PUT /api/landingzoneaction/13
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,287 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,295 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,296 INFO sqlalchemy.engine.base.Engine {'id_1': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,300 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,300 INFO sqlalchemy.engine.base.Engine {'id_1': 13, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,304 INFO sqlalchemy.engine.base.Engine UPDATE landingzoneaction SET locked=%(locked)s WHERE landingzoneaction.id = %(landingzoneaction_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,305 INFO sqlalchemy.engine.base.Engine {'locked': 1, 'landingzoneaction_id': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,307 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,312 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,316 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,316 INFO sqlalchemy.engine.base.Engine {'param_1': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,319 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [13] [DEBUG] GET /api/landingzoneaction/13
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,336 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,338 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,338 INFO sqlalchemy.engine.base.Engine {'id_1': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,341 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [11] [DEBUG] DELETE /api/landingzoneaction/13
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,357 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,360 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,360 INFO sqlalchemy.engine.base.Engine {'id_1': '13'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,364 INFO sqlalchemy.engine.base.Engine DELETE FROM landingzoneaction WHERE landingzoneaction.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,364 INFO sqlalchemy.engine.base.Engine {'id': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,366 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [15] [DEBUG] GET /api/landingzoneaction/13
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,384 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,386 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,386 INFO sqlalchemy.engine.base.Engine {'id_1': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,387 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [15] [DEBUG] DELETE /api/landingzoneaction/13
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,398 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,399 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,399 INFO sqlalchemy.engine.base.Engine {'id_1': '13'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,401 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [15] [DEBUG] GET /api/landingzoneactions/
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,410 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,411 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,411 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,416 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [11] [DEBUG] POST /api/landingzoneprogressitem/
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,429 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,430 INFO sqlalchemy.engine.base.Engine INSERT INTO landingzoneprogressitem (label, completed) VALUES (%(label)s, %(completed)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,431 INFO sqlalchemy.engine.base.Engine {'label': 'Testing-progress-item-post', 'completed': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,433 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,437 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,438 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,438 INFO sqlalchemy.engine.base.Engine {'param_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,440 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [11] [DEBUG] GET /api/landingzoneprogressitem/8
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,452 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,454 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,454 INFO sqlalchemy.engine.base.Engine {'id_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,456 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [15] [DEBUG] PUT /api/landingzoneprogressitem/8
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,467 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,469 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,469 INFO sqlalchemy.engine.base.Engine {'id_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,471 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,471 INFO sqlalchemy.engine.base.Engine {'id_1': 8, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,474 INFO sqlalchemy.engine.base.Engine UPDATE landingzoneprogressitem SET label=%(label)s, completed=%(completed)s WHERE landingzoneprogressitem.id = %(landingzoneprogressitem_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,474 INFO sqlalchemy.engine.base.Engine {'label': 'Testing-new-progress-item-post', 'completed': 0, 'landingzoneprogressitem_id': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,475 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,478 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,479 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,479 INFO sqlalchemy.engine.base.Engine {'param_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,480 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [11] [DEBUG] GET /api/landingzoneprogressitem/8
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,493 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,494 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,495 INFO sqlalchemy.engine.base.Engine {'id_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,497 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [10] [DEBUG] DELETE /api/landingzoneprogressitem/8
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,508 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,510 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,510 INFO sqlalchemy.engine.base.Engine {'id_1': '8'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,513 INFO sqlalchemy.engine.base.Engine DELETE FROM landingzoneprogressitem WHERE landingzoneprogressitem.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,514 INFO sqlalchemy.engine.base.Engine {'id': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,516 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [12] [DEBUG] GET /api/landingzoneprogressitem/8
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,534 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,536 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,536 INFO sqlalchemy.engine.base.Engine {'id_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,538 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [15] [DEBUG] DELETE /api/landingzoneprogressitem/8
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,558 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,559 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,559 INFO sqlalchemy.engine.base.Engine {'id_1': '8'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,562 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [13] [DEBUG] GET /api/landingzoneprogressitems/
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,589 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,594 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,594 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,598 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [13] [DEBUG] POST /api/landingzonewan/
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,616 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,619 INFO sqlalchemy.engine.base.Engine INSERT INTO landingzonewan (`googleSession__primaryGcpVpcSubnet`, `googleSession__primaryRegion`, `googleSession__primarySubnetName`, `googleSession__secondaryGcpVpcSubnet`, `googleSession__secondaryRegion`, `googleSession__secondarySubnetName`, `onPremiseSession__primaryBgpPeer`, `onPremiseSession__primaryPeerIp`, `onPremiseSession__primaryPeerIpSubnet`, `onPremiseSession__primarySharedSecret`, `onPremiseSession__primaryVpnTunnel`, `onPremiseSession__secondaryBgpPeer`, `onPremiseSession__secondaryPeerIp`, `onPremiseSession__secondaryPeerIpSubnet`, `onPremiseSession__secondarySharedSecret`, `onPremiseSession__secondaryVpnTunnel`, `onPremiseSession__vendor`, `vpn__bgpInterfaceNetLength`, `vpn__bgpRoutingMode`, `vpn__cloudRouterName`, vpn__description, `vpn__externalVpnGateway`, `vpn__googleASN`, `vpn__haVpnGateway`, `vpn__peerASN`, `vpn__projectName`, `vpn__subnetMode`, `vpn__vpcName`) VALUES (%(googleSession__primaryGcpVpcSubnet)s, %(googleSession__primaryRegion)s, %(googleSession__primarySubnetName)s, %(googleSession__secondaryGcpVpcSubnet)s, %(googleSession__secondaryRegion)s, %(googleSession__secondarySubnetName)s, %(onPremiseSession__primaryBgpPeer)s, %(onPremiseSession__primaryPeerIp)s, %(onPremiseSession__primaryPeerIpSubnet)s, %(onPremiseSession__primarySharedSecret)s, %(onPremiseSession__primaryVpnTunnel)s, %(onPremiseSession__secondaryBgpPeer)s, %(onPremiseSession__secondaryPeerIp)s, %(onPremiseSession__secondaryPeerIpSubnet)s, %(onPremiseSession__secondarySharedSecret)s, %(onPremiseSession__secondaryVpnTunnel)s, %(onPremiseSession__vendor)s, %(vpn__bgpInterfaceNetLength)s, %(vpn__bgpRoutingMode)s, %(vpn__cloudRouterName)s, %(vpn__description)s, %(vpn__externalVpnGateway)s, %(vpn__googleASN)s, %(vpn__haVpnGateway)s, %(vpn__peerASN)s, %(vpn__projectName)s, %(vpn__subnetMode)s, %(vpn__vpcName)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,619 INFO sqlalchemy.engine.base.Engine {'googleSession__primaryGcpVpcSubnet': 'test-post', 'googleSession__primaryRegion': 'test-post', 'googleSession__primarySubnetName': 'test-post', 'googleSession__secondaryGcpVpcSubnet': 'test-post', 'googleSession__secondaryRegion': 'test-post', 'googleSession__secondarySubnetName': 'test-post', 'onPremiseSession__primaryBgpPeer': 'test-post', 'onPremiseSession__primaryPeerIp': 'test-post', 'onPremiseSession__primaryPeerIpSubnet': 'test-post', 'onPremiseSession__primarySharedSecret': 'test-post', 'onPremiseSession__primaryVpnTunnel': 'test-post', 'onPremiseSession__secondaryBgpPeer': 'test-post', 'onPremiseSession__secondaryPeerIp': 'test-post', 'onPremiseSession__secondaryPeerIpSubnet': 'test-post', 'onPremiseSession__secondarySharedSecret': 'test-post', 'onPremiseSession__secondaryVpnTunnel': 'test-post', 'onPremiseSession__vendor': 'test-post', 'vpn__bgpInterfaceNetLength': 'test-post', 'vpn__bgpRoutingMode': 'test-post', 'vpn__cloudRouterName': 'test-post', 'vpn__description': 'test-post', 'vpn__externalVpnGateway': 'test-post', 'vpn__googleASN': 0, 'vpn__haVpnGateway': 'test-post', 'vpn__peerASN': 0, 'vpn__projectName': 'test-post', 'vpn__subnetMode': 'test-post', 'vpn__vpcName': 'test-post'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,621 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,627 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,630 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,630 INFO sqlalchemy.engine.base.Engine {'param_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,633 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [15] [DEBUG] GET /api/landingzonewan/3
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,649 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,654 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,654 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,662 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [12] [DEBUG] PUT /api/landingzonewan/3
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,675 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,678 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,678 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,683 INFO sqlalchemy.engine.base.Engine UPDATE landingzonewan SET `googleSession__primaryGcpVpcSubnet`=%(googleSession__primaryGcpVpcSubnet)s, `googleSession__primaryRegion`=%(googleSession__primaryRegion)s, `googleSession__primarySubnetName`=%(googleSession__primarySubnetName)s, `googleSession__secondaryGcpVpcSubnet`=%(googleSession__secondaryGcpVpcSubnet)s, `googleSession__secondaryRegion`=%(googleSession__secondaryRegion)s, `googleSession__secondarySubnetName`=%(googleSession__secondarySubnetName)s, `onPremiseSession__primaryBgpPeer`=%(onPremiseSession__primaryBgpPeer)s, `onPremiseSession__primaryPeerIp`=%(onPremiseSession__primaryPeerIp)s, `onPremiseSession__primaryPeerIpSubnet`=%(onPremiseSession__primaryPeerIpSubnet)s, `onPremiseSession__primarySharedSecret`=%(onPremiseSession__primarySharedSecret)s, `onPremiseSession__primaryVpnTunnel`=%(onPremiseSession__primaryVpnTunnel)s, `onPremiseSession__secondaryBgpPeer`=%(onPremiseSession__secondaryBgpPeer)s, `onPremiseSession__secondaryPeerIp`=%(onPremiseSession__secondaryPeerIp)s, `onPremiseSession__secondaryPeerIpSubnet`=%(onPremiseSession__secondaryPeerIpSubnet)s, `onPremiseSession__secondarySharedSecret`=%(onPremiseSession__secondarySharedSecret)s, `onPremiseSession__secondaryVpnTunnel`=%(onPremiseSession__secondaryVpnTunnel)s, `onPremiseSession__vendor`=%(onPremiseSession__vendor)s, `vpn__bgpInterfaceNetLength`=%(vpn__bgpInterfaceNetLength)s, `vpn__bgpRoutingMode`=%(vpn__bgpRoutingMode)s, `vpn__cloudRouterName`=%(vpn__cloudRouterName)s, vpn__description=%(vpn__description)s, `vpn__externalVpnGateway`=%(vpn__externalVpnGateway)s, `vpn__haVpnGateway`=%(vpn__haVpnGateway)s, `vpn__projectName`=%(vpn__projectName)s, `vpn__subnetMode`=%(vpn__subnetMode)s, `vpn__vpcName`=%(vpn__vpcName)s WHERE landingzonewan.id = %(landingzonewan_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,683 INFO sqlalchemy.engine.base.Engine {'googleSession__primaryGcpVpcSubnet': 'new-test-put', 'googleSession__primaryRegion': 'test-put', 'googleSession__primarySubnetName': 'test-put', 'googleSession__secondaryGcpVpcSubnet': 'test-put', 'googleSession__secondaryRegion': 'test-put', 'googleSession__secondarySubnetName': 'test-put', 'onPremiseSession__primaryBgpPeer': 'new-test-put', 'onPremiseSession__primaryPeerIp': 'test-put', 'onPremiseSession__primaryPeerIpSubnet': 'test-put', 'onPremiseSession__primarySharedSecret': 'test-put', 'onPremiseSession__primaryVpnTunnel': 'test-put', 'onPremiseSession__secondaryBgpPeer': 'test-put', 'onPremiseSession__secondaryPeerIp': 'test-put', 'onPremiseSession__secondaryPeerIpSubnet': 'test-put', 'onPremiseSession__secondarySharedSecret': 'test-put', 'onPremiseSession__secondaryVpnTunnel': 'test-put', 'onPremiseSession__vendor': 'test-put', 'vpn__bgpInterfaceNetLength': 'new-test-put', 'vpn__bgpRoutingMode': 'test-put', 'vpn__cloudRouterName': 'test-put', 'vpn__description': 'test-put', 'vpn__externalVpnGateway': 'test-put', 'vpn__haVpnGateway': 'test-put', 'vpn__projectName': 'test-put', 'vpn__subnetMode': 'test-put', 'vpn__vpcName': 'test-put', 'landingzonewan_id': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,685 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,688 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,690 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,690 INFO sqlalchemy.engine.base.Engine {'param_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,693 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [12] [DEBUG] GET /api/landingzonewan/3
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,703 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,705 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,705 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,711 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [12] [DEBUG] DELETE /api/landingzonewan/3
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,722 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,724 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,724 INFO sqlalchemy.engine.base.Engine {'id_1': '3'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,727 INFO sqlalchemy.engine.base.Engine DELETE FROM landingzonewan WHERE landingzonewan.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,727 INFO sqlalchemy.engine.base.Engine {'id': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,728 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [12] [DEBUG] GET /api/landingzonewan/3
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,743 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,745 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,745 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,747 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [11] [DEBUG] DELETE /api/landingzonewan/3
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,758 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,761 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,762 INFO sqlalchemy.engine.base.Engine {'id_1': '3'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,764 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,775 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [13] [DEBUG] GET /api/landingzonewans/
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,776 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,776 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,783 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [12] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m http://localhost:3000/api/login validation error: '0' is not of type 'integer' - 'id'
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [11] [DEBUG] POST /api/solution/
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,871 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,875 INFO sqlalchemy.engine.base.Engine INSERT INTO solution (name, description, `businessUnit`, `costCentre`, ci, cd, `sourceControl`, environments, active, favourite, teams, `lastUpdated`, deployed, `deploymentState`, `statusId`, `statusCode`, `statusMessage`, `taskId`) VALUES (%(name)s, %(description)s, %(businessUnit)s, %(costCentre)s, %(ci)s, %(cd)s, %(sourceControl)s, %(environments)s, %(active)s, %(favourite)s, %(teams)s, %(lastUpdated)s, %(deployed)s, %(deploymentState)s, %(statusId)s, %(statusCode)s, %(statusMessage)s, %(taskId)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,875 INFO sqlalchemy.engine.base.Engine {'name': 'test', 'description': 'test', 'businessUnit': 'test', 'costCentre': 'test', 'ci': 'test', 'cd': 'test', 'sourceControl': 'test', 'environments': '["test"]', 'active': 1, 'favourite': 1, 'teams': 0, 'lastUpdated': '2020-05-05 09:31:58', 'deployed': 0, 'deploymentState': '', 'statusId': 0, 'statusCode': '', 'statusMessage': '', 'taskId': None}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,877 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,882 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,885 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,885 INFO sqlalchemy.engine.base.Engine {'param_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,888 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE %(param_1)s = application.`solutionId`
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,888 INFO sqlalchemy.engine.base.Engine {'param_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,891 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [11] [DEBUG] GET /api/solution/18
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,905 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,906 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,906 INFO sqlalchemy.engine.base.Engine {'id_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,910 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,910 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,913 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [12] [DEBUG] PUT /api/solution/18
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,923 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,926 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,926 INFO sqlalchemy.engine.base.Engine {'id_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,930 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,930 INFO sqlalchemy.engine.base.Engine {'id_1': 18, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,933 INFO sqlalchemy.engine.base.Engine UPDATE solution SET name=%(name)s, description=%(description)s, `businessUnit`=%(businessUnit)s, `costCentre`=%(costCentre)s, ci=%(ci)s, cd=%(cd)s, `sourceControl`=%(sourceControl)s, environments=%(environments)s, teams=%(teams)s, `lastUpdated`=%(lastUpdated)s WHERE solution.id = %(solution_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,933 INFO sqlalchemy.engine.base.Engine {'name': 'test put', 'description': 'test put', 'businessUnit': 'test put', 'costCentre': 'test put', 'ci': 'test put', 'cd': 'test put', 'sourceControl': 'test put', 'environments': '["test put 1", "test put 2", "test put 3"]', 'teams': 10, 'lastUpdated': '2020-05-05 09:31:58', 'solution_id': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,935 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [12] [DEBUG] GET /api/solution/18
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,949 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,950 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,950 INFO sqlalchemy.engine.base.Engine {'id_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,953 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,954 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,956 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [10] [DEBUG] DELETE /api/solution/18
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,969 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,971 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,971 INFO sqlalchemy.engine.base.Engine {'id_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,975 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE %(param_1)s = application.`solutionId`
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,975 INFO sqlalchemy.engine.base.Engine {'param_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,977 INFO sqlalchemy.engine.base.Engine DELETE FROM solution WHERE solution.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,977 INFO sqlalchemy.engine.base.Engine {'id': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,978 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:58 +0000] [15] [DEBUG] GET /api/solution/18
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,991 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,994 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,994 INFO sqlalchemy.engine.base.Engine {'id_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:31:58,996 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/solutions/
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,006 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,007 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution ORDER BY solution.id
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,007 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,010 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,010 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,013 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,013 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,017 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,017 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,020 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,020 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,023 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,023 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,026 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,026 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,029 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,030 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,032 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,033 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,036 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,036 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,039 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,039 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 11}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,041 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,042 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 12}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,044 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,044 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,046 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,047 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 14}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,049 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,049 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 15}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,051 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,051 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 16}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,054 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,054 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 17}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,071 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [15] [DEBUG] POST /api/solutiondeployment/
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,087 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,089 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,089 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,093 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,093 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,096 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,096 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,099 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,099 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,102 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,102 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[36mgcp-dac_1          |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] POST /api/solution/
[36mgcp-dac_1          |[0m basedir: /srv
[36mgcp-dac_1          |[0m DEBUG: True
[36mgcp-dac_1          |[0m {'active': True,
[36mgcp-dac_1          |[0m  'applications': [{'activator': {'accessRequestedBy': None,
[36mgcp-dac_1          |[0m                                  'activator': 'Single Region Kubernetes',
[36mgcp-dac_1          |[0m                                  'activatorLink': '',
[36mgcp-dac_1          |[0m                                  'apiManagement': ['ApiGee'],
[36mgcp-dac_1          |[0m                                  'available': True,
[36mgcp-dac_1          |[0m                                  'billing': 'Monthly: Eagle tier 3',
[36mgcp-dac_1          |[0m                                  'businessUnit': 'FICC Business Unit',
[36mgcp-dac_1          |[0m                                  'category': 'Web application',
[36mgcp-dac_1          |[0m                                  'cd': ['Codeship', 'Option'],
[36mgcp-dac_1          |[0m                                  'ci': ['Jenkins', 'Travis'],
[36mgcp-dac_1          |[0m                                  'description': 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy. '
[36mgcp-dac_1          |[0m                                                 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy. '
[36mgcp-dac_1          |[0m                                                 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy',
[36mgcp-dac_1          |[0m                                  'envs': ['POC', 'DEV'],
[36mgcp-dac_1          |[0m                                  'hosting': ['Appengine'],
[36mgcp-dac_1          |[0m                                  'id': 1,
[36mgcp-dac_1          |[0m                                  'lastUpdated': '2020-04-16 17:59:21',
[36mgcp-dac_1          |[0m                                  'name': 'CMS Web App',
[36mgcp-dac_1          |[0m                                  'platforms': ['GCP'],
[36mgcp-dac_1          |[0m                                  'regions': ['UK', 'DB'],
[36mgcp-dac_1          |[0m                                  'sensitivity': 'Public',
[36mgcp-dac_1          |[0m                                  'serverCapacity': 1200,
[36mgcp-dac_1          |[0m                                  'source': 'open',
[36mgcp-dac_1          |[0m                                  'sourceControl': ['JIRA', 'Option'],
[36mgcp-dac_1          |[0m                                  'status': 'Available',
[36mgcp-dac_1          |[0m                                  'technologyOwner': 'Sanjeev Gupta',
[36mgcp-dac_1          |[0m                                  'technologyOwnerEmail': 's.gupta@company.name',
[36mgcp-dac_1          |[0m                                  'type': 'Tier 3',
[36mgcp-dac_1          |[0m                                  'userCapacity': 1000},
[36mgcp-dac_1          |[0m                    'description': 'Lorem ipsum dolor sit amet, consectetur '
[36mgcp-dac_1          |[0m                                   'adipiscing elit, sed do eiusmod tempor '
[36mgcp-dac_1          |[0m                                   'incididunt ut labore et do',
[36mgcp-dac_1          |[0m                    'env': 'DEV',
[36mgcp-dac_1          |[0m                    'id': 1,
[36mgcp-dac_1          |[0m                    'lastUpdated': '2020-04-16 17:58:21',
[36mgcp-dac_1          |[0m                    'name': 'Placeholder',
[36mgcp-dac_1          |[0m                    'resources': [{'name': 'GKE Cluster'},
[36mgcp-dac_1          |[0m                                  {'name': 'Cloud SQL'}],
[36mgcp-dac_1          |[0m                    'status': 'Active'},
[36mgcp-dac_1          |[0m                   {'activator': {'accessRequestedBy': None,
[36mgcp-dac_1          |[0m                                  'activator': 'Multi Region Kubernetes',
[36mgcp-dac_1          |[0m                                  'activatorLink': '',
[36mgcp-dac_1          |[0m                                  'apiManagement': ['ApiGee'],
[36mgcp-dac_1          |[0m                                  'available': True,
[36mgcp-dac_1          |[0m                                  'billing': 'Monthly: Eagle tier 1',
[36mgcp-dac_1          |[0m                                  'businessUnit': 'M&A Business Unit',
[36mgcp-dac_1          |[0m                                  'category': 'Micro-services',
[36mgcp-dac_1          |[0m                                  'cd': ['Codeship', 'Option'],
[36mgcp-dac_1          |[0m                                  'ci': ['Jenkins', 'Travis'],
[36mgcp-dac_1          |[0m                                  'description': 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy. '
[36mgcp-dac_1          |[0m                                                 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy. '
[36mgcp-dac_1          |[0m                                                 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy',
[36mgcp-dac_1          |[0m                                  'envs': ['POC', 'AWS', 'Other', 'Fancy'],
[36mgcp-dac_1          |[0m                                  'hosting': ['Appengine'],
[36mgcp-dac_1          |[0m                                  'id': 2,
[36mgcp-dac_1          |[0m                                  'lastUpdated': '2020-01-09 15:59:10',
[36mgcp-dac_1          |[0m                                  'name': 'Multi region kubernetes',
[36mgcp-dac_1          |[0m                                  'platforms': ['GCP'],
[36mgcp-dac_1          |[0m                                  'regions': ['UK', 'DB'],
[36mgcp-dac_1          |[0m                                  'sensitivity': 'Restricted',
[36mgcp-dac_1          |[0m                                  'serverCapacity': 2000,
[36mgcp-dac_1          |[0m                                  'source': 'open',
[36mgcp-dac_1          |[0m                                  'sourceControl': ['JIRA', 'Option'],
[36mgcp-dac_1          |[0m                                  'status': 'Available',
[36mgcp-dac_1          |[0m                                  'technologyOwner': 'Nathanael Stoltenberg',
[36mgcp-dac_1          |[0m                                  'technologyOwnerEmail': 'Nathanael.Stoltenberg@yahoo.com',
[36mgcp-dac_1          |[0m                                  'type': 'Tier 1',
[36mgcp-dac_1          |[0m                                  'userCapacity': 1300},
[36mgcp-dac_1          |[0m                    'description': 'Lorem ipsum dolor sit amet, consectetur '
[36mgcp-dac_1          |[0m                                   'adipiscing elit, sed do eiusmod tempor '
[36mgcp-dac_1          |[0m                                   'incididunt ut labore et do',
[36mgcp-dac_1          |[0m                    'env': 'POC',
[36mgcp-dac_1          |[0m                    'id': 2,
[36mgcp-dac_1          |[0m                    'lastUpdated': '2020-04-02 00:00:00',
[36mgcp-dac_1          |[0m                    'name': 'Other App',
[36mgcp-dac_1          |[0m                    'resources': [{'name': 'GKE Cluster'},
[36mgcp-dac_1          |[0m                                  {'name': 'Cloud SQL'}],
[36mgcp-dac_1          |[0m                    'status': 'Active'},
[36mgcp-dac_1          |[0m                   {'activator': {'accessRequestedBy': None,
[36mgcp-dac_1          |[0m                                  'activator': 'Multi Region Kubernetes',
[36mgcp-dac_1          |[0m                                  'activatorLink': '',
[36mgcp-dac_1          |[0m                                  'apiManagement': ['ApiGee'],
[36mgcp-dac_1          |[0m                                  'available': True,
[36mgcp-dac_1          |[0m                                  'billing': 'Monthly: Eagle tier 1',
[36mgcp-dac_1          |[0m                                  'businessUnit': 'M&A Business Unit',
[36mgcp-dac_1          |[0m                                  'category': 'Micro-services',
[36mgcp-dac_1          |[0m                                  'cd': ['Codeship', 'Option'],
[36mgcp-dac_1          |[0m                                  'ci': ['Jenkins', 'Travis'],
[36mgcp-dac_1          |[0m                                  'description': 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy. '
[36mgcp-dac_1          |[0m                                                 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy. '
[36mgcp-dac_1          |[0m                                                 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy',
[36mgcp-dac_1          |[0m                                  'envs': ['POC', 'AWS', 'Other', 'Fancy'],
[36mgcp-dac_1          |[0m                                  'hosting': ['Appengine'],
[36mgcp-dac_1          |[0m                                  'id': 2,
[36mgcp-dac_1          |[0m                                  'lastUpdated': '2020-01-09 15:59:10',
[36mgcp-dac_1          |[0m                                  'name': 'Multi region kubernetes',
[36mgcp-dac_1          |[0m                                  'platforms': ['GCP'],
[36mgcp-dac_1          |[0m                                  'regions': ['UK', 'DB'],
[36mgcp-dac_1          |[0m                                  'sensitivity': 'Restricted',
[36mgcp-dac_1          |[0m                                  'serverCapacity': 2000,
[36mgcp-dac_1          |[0m                                  'source': 'open',
[36mgcp-dac_1          |[0m                                  'sourceControl': ['JIRA', 'Option'],
[36mgcp-dac_1          |[0m                                  'status': 'Available',
[36mgcp-dac_1          |[0m                                  'technologyOwner': 'Nathanael Stoltenberg',
[36mgcp-dac_1          |[0m                                  'technologyOwnerEmail': 'Nathanael.Stoltenberg@yahoo.com',
[36mgcp-dac_1          |[0m                                  'type': 'Tier 1',
[36mgcp-dac_1          |[0m                                  'userCapacity': 1300},
[36mgcp-dac_1          |[0m                    'description': 'Lorem ipsum dolor sit amet, consectetur '
[36mgcp-dac_1          |[0m                                   'adipiscing elit, sed do eiusmod tempor '
[36mgcp-dac_1          |[0m                                   'incididunt ut labore et do',
[36mgcp-dac_1          |[0m                    'env': 'POC',
[36mgcp-dac_1          |[0m                    'id': 6,
[36mgcp-dac_1          |[0m                    'lastUpdated': '2020-04-03 09:23:37',
[36mgcp-dac_1          |[0m                    'name': 'My First App',
[36mgcp-dac_1          |[0m                    'resources': [{'name': 'GKE Cluster'},
[36mgcp-dac_1          |[0m                                  {'name': 'Cloud SQL'}],
[36mgcp-dac_1          |[0m                    'status': 'Active'}],
[36mgcp-dac_1          |[0m  'businessUnit': 'Modern Apps',
[36mgcp-dac_1          |[0m  'cd': 'Spinnaker',
[36mgcp-dac_1          |[0m  'ci': 'Jenkins CI',
[36mgcp-dac_1          |[0m  'costCentre': 'XXX-123-456-YYY',
[36mgcp-dac_1          |[0m  'description': 'Solution for internal users to be able to process settlement '
[36mgcp-dac_1          |[0m                 'for FX transactions',
[36mgcp-dac_1          |[0m  'environments': ['Development'],
[36mgcp-dac_1          |[0m  'favourite': True,
[36mgcp-dac_1          |[0m  'id': 1,
[36mgcp-dac_1          |[0m  'lastUpdated': '2020-04-25 09:09:56',
[36mgcp-dac_1          |[0m  'name': 'Risk Engine',
[36mgcp-dac_1          |[0m  'sourceControl': 'GitHub',
[33mhouston-service_1  |[0m Response from Dac
[33mhouston-service_1  |[0m {'deployed': False,
[33mhouston-service_1  |[0m  'deploymentState': 'In progress',
[33mhouston-service_1  |[0m  'id': 1,
[33mhouston-service_1  |[0m  'statusCode': 'SS',
[33mhouston-service_1  |[0m  'statusId': 0,
[33mhouston-service_1  |[0m  'statusMessage': 'Successful',
[33mhouston-service_1  |[0m  'taskId': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,127 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,127 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,131 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,131 INFO sqlalchemy.engine.base.Engine {'id_1': 1, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,134 INFO sqlalchemy.engine.base.Engine UPDATE solution SET `lastUpdated`=%(lastUpdated)s, deployed=%(deployed)s, `deploymentState`=%(deploymentState)s, `statusId`=%(statusId)s, `statusCode`=%(statusCode)s, `statusMessage`=%(statusMessage)s, `taskId`=%(taskId)s WHERE solution.id = %(solution_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,135 INFO sqlalchemy.engine.base.Engine {'lastUpdated': '2020-05-05 09:31:59', 'deployed': 0, 'deploymentState': 'In progress', 'statusId': 0, 'statusCode': 'SS', 'statusMessage': 'Successful', 'taskId': 1, 'solution_id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,136 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,140 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,142 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,142 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,143 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/solutiondeployment/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,154 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,156 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,156 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,158 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] PUT /api/solutiondeployment/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,169 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,171 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,171 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,175 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,175 INFO sqlalchemy.engine.base.Engine {'id_1': 1, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,177 INFO sqlalchemy.engine.base.Engine UPDATE solution SET `lastUpdated`=%(lastUpdated)s, deployed=%(deployed)s, `deploymentState`=%(deploymentState)s, `statusId`=%(statusId)s, `statusCode`=%(statusCode)s, `statusMessage`=%(statusMessage)s, `taskId`=%(taskId)s WHERE solution.id = %(solution_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,178 INFO sqlalchemy.engine.base.Engine {'lastUpdated': '2020-05-05 09:31:59', 'deployed': 1, 'deploymentState': 'Deployed', 'statusId': 1, 'statusCode': '12', 'statusMessage': 'I just deployed again', 'taskId': 2, 'solution_id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,179 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,183 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,184 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,184 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,187 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [11] [DEBUG] GET /api/solutiondeployment/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,198 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,199 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,199 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,202 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/solutiondeployments/
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,212 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,213 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,213 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,216 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] POST /api/solutionresource/
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'key 1', 'solutionId': 1, 'value': 'value 1'}
[33mhouston-service_1  |[0m solutionId: 1 key: key 1
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,230 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,232 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,232 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1, 'key_1': 'key 1'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,235 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,235 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1, 'key_1': 'key 1', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,237 INFO sqlalchemy.engine.base.Engine INSERT INTO solutionresource (`solutionId`, `key`, value) VALUES (%(solutionId)s, %(key)s, %(value)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,237 INFO sqlalchemy.engine.base.Engine {'solutionId': 1, 'key': 'key 1', 'value': 'value 1'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,238 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,248 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,249 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,249 INFO sqlalchemy.engine.base.Engine {'param_1': 1, 'param_2': 'key 1'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'key 1', 'solutionId': 1, 'value': 'value 1'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,251 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/solutionresource/1/key%201
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,268 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,269 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,269 INFO sqlalchemy.engine.base.Engine {'key_1': 'key 1', 'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,271 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/solutionresources/
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,282 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,283 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource ORDER BY solutionresource.`solutionId`
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,283 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,285 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] DELETE /api/solutionresource/1/key%201
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,294 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,295 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,296 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1, 'key_1': 'key 1'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,297 INFO sqlalchemy.engine.base.Engine DELETE FROM solutionresource WHERE solutionresource.`solutionId` = %(solutionId)s AND solutionresource.`key` = %(key)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,297 INFO sqlalchemy.engine.base.Engine {'solutionId': 1, 'key': 'key 1'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,298 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/solutionresource/1/key%201
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,312 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,313 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,313 INFO sqlalchemy.engine.base.Engine {'key_1': 'key 1', 'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,314 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] POST /api/solutionresourcejson/
[33mhouston-service_1  |[0m update_or_create 1
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,329 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,331 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,331 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1}
[33mhouston-service_1  |[0m Update: 1
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,335 INFO sqlalchemy.engine.base.Engine UPDATE solutionresourcejson SET `solutionId`=%(solutionId)s, json=%(json)s WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,335 INFO sqlalchemy.engine.base.Engine {'solutionId': 1, 'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","di ... (3358 characters truncated) ... pace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}', 'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,338 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,344 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,345 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,345 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol22-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol22-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol22-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol22-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 1}
[33mhouston-service_1  |[0m resources_dict
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol22-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol22-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol22-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol22-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 1}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 1, 'value': 'sol22-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 1 key: project_id_dev
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,348 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,348 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1, 'key_1': 'project_id_dev'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,351 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,351 INFO sqlalchemy.engine.base.Engine {'solutionId': 1, 'key': 'project_id_dev', 'value': 'sol22-dev-env-ksjs726s', 'key_1': 'project_id_dev', 'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,352 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,355 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,356 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,356 INFO sqlalchemy.engine.base.Engine {'param_1': 1, 'param_2': 'project_id_dev'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 1, 'value': 'sol22-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 1, 'value': 'sol22-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 1 key: project_id_prod
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,359 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,359 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1, 'key_1': 'project_id_prod'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,362 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,362 INFO sqlalchemy.engine.base.Engine {'solutionId': 1, 'key': 'project_id_prod', 'value': 'sol22-prod-env-ksjs726s', 'key_1': 'project_id_prod', 'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,364 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,367 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,368 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,368 INFO sqlalchemy.engine.base.Engine {'param_1': 1, 'param_2': 'project_id_prod'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 1, 'value': 'sol22-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 1,
[33mhouston-service_1  |[0m  'value': 'sol22-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 1 key: project_id_staging
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,370 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,371 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1, 'key_1': 'project_id_staging'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,373 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,373 INFO sqlalchemy.engine.base.Engine {'solutionId': 1, 'key': 'project_id_staging', 'value': 'sol22-staging-env-ksjs726s', 'key_1': 'project_id_staging', 'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,374 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,377 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,378 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,378 INFO sqlalchemy.engine.base.Engine {'param_1': 1, 'param_2': 'project_id_staging'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 1,
[33mhouston-service_1  |[0m  'value': 'sol22-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 1,
[33mhouston-service_1  |[0m  'value': 'sol22-workspace-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 1 key: project_id_workspace
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,380 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,381 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1, 'key_1': 'project_id_workspace'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,383 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,383 INFO sqlalchemy.engine.base.Engine {'solutionId': 1, 'key': 'project_id_workspace', 'value': 'sol22-workspace-ksjs726s', 'key_1': 'project_id_workspace', 'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,384 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,387 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,388 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,388 INFO sqlalchemy.engine.base.Engine {'param_1': 1, 'param_2': 'project_id_workspace'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 1,
[33mhouston-service_1  |[0m  'value': 'sol22-workspace-ksjs726s'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,390 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/solutionresourcejson/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,401 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,402 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,403 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,404 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/solutionresourcejsons/
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,415 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,416 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson ORDER BY solutionresourcejson.`solutionId`
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,416 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,418 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [13] [DEBUG] DELETE /api/solutionresourcejson/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,429 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,430 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,431 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,433 INFO sqlalchemy.engine.base.Engine DELETE FROM solutionresourcejson WHERE solutionresourcejson.`solutionId` = %(solutionId)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,433 INFO sqlalchemy.engine.base.Engine {'solutionId': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,434 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/solutionresourcejson/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,446 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,448 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,448 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,449 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] POST /api/solutionresourcejson/
[33mhouston-service_1  |[0m update_or_create 2
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,460 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,461 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,461 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 2}
[33mhouston-service_1  |[0m Update: 2
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,464 INFO sqlalchemy.engine.base.Engine UPDATE solutionresourcejson SET `solutionId`=%(solutionId)s, json=%(json)s WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,464 INFO sqlalchemy.engine.base.Engine {'solutionId': 2, 'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","di ... (3358 characters truncated) ... pace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}', 'solutionId_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,465 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,471 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,472 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,472 INFO sqlalchemy.engine.base.Engine {'param_1': 2}
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol22-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol22-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol22-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol22-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 2}
[33mhouston-service_1  |[0m resources_dict
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol22-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol22-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol22-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol22-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 2}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 2, 'value': 'sol22-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 2 key: project_id_dev
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,476 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,477 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 2, 'key_1': 'project_id_dev'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,480 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,480 INFO sqlalchemy.engine.base.Engine {'solutionId': 2, 'key': 'project_id_dev', 'value': 'sol22-dev-env-ksjs726s', 'key_1': 'project_id_dev', 'solutionId_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,481 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,485 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,486 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,486 INFO sqlalchemy.engine.base.Engine {'param_1': 2, 'param_2': 'project_id_dev'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 2, 'value': 'sol22-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 2, 'value': 'sol22-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 2 key: project_id_prod
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,488 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,488 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 2, 'key_1': 'project_id_prod'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,491 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,492 INFO sqlalchemy.engine.base.Engine {'solutionId': 2, 'key': 'project_id_prod', 'value': 'sol22-prod-env-ksjs726s', 'key_1': 'project_id_prod', 'solutionId_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,493 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,496 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,497 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,497 INFO sqlalchemy.engine.base.Engine {'param_1': 2, 'param_2': 'project_id_prod'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 2, 'value': 'sol22-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 2,
[33mhouston-service_1  |[0m  'value': 'sol22-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 2 key: project_id_staging
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,500 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,500 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 2, 'key_1': 'project_id_staging'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,503 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,503 INFO sqlalchemy.engine.base.Engine {'solutionId': 2, 'key': 'project_id_staging', 'value': 'sol22-staging-env-ksjs726s', 'key_1': 'project_id_staging', 'solutionId_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,504 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,508 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,509 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,509 INFO sqlalchemy.engine.base.Engine {'param_1': 2, 'param_2': 'project_id_staging'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 2,
[33mhouston-service_1  |[0m  'value': 'sol22-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 2,
[33mhouston-service_1  |[0m  'value': 'sol22-workspace-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 2 key: project_id_workspace
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,511 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,512 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 2, 'key_1': 'project_id_workspace'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,515 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,515 INFO sqlalchemy.engine.base.Engine {'solutionId': 2, 'key': 'project_id_workspace', 'value': 'sol22-workspace-ksjs726s', 'key_1': 'project_id_workspace', 'solutionId_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,516 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,520 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,520 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,521 INFO sqlalchemy.engine.base.Engine {'param_1': 2, 'param_2': 'project_id_workspace'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 2,
[33mhouston-service_1  |[0m  'value': 'sol22-workspace-ksjs726s'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,522 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [11] [DEBUG] GET /api/solutionresourcejson/2
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,534 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,536 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,536 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,538 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [10] [DEBUG] POST /api/solutionresourcejson/
[33mhouston-service_1  |[0m update_or_create 3
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,549 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,550 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,550 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 3}
[33mhouston-service_1  |[0m Update: 3
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,553 INFO sqlalchemy.engine.base.Engine UPDATE solutionresourcejson SET `solutionId`=%(solutionId)s, json=%(json)s WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,553 INFO sqlalchemy.engine.base.Engine {'solutionId': 3, 'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","di ... (3358 characters truncated) ... pace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}', 'solutionId_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,555 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,558 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,559 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,559 INFO sqlalchemy.engine.base.Engine {'param_1': 3}
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol22-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol22-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol22-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol22-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 3}
[33mhouston-service_1  |[0m resources_dict
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol22-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol22-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol22-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol22-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 3}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 3, 'value': 'sol22-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 3 key: project_id_dev
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,563 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,564 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 3, 'key_1': 'project_id_dev'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,567 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,567 INFO sqlalchemy.engine.base.Engine {'solutionId': 3, 'key': 'project_id_dev', 'value': 'sol22-dev-env-ksjs726s', 'key_1': 'project_id_dev', 'solutionId_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,568 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,575 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,577 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,577 INFO sqlalchemy.engine.base.Engine {'param_1': 3, 'param_2': 'project_id_dev'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 3, 'value': 'sol22-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 3, 'value': 'sol22-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 3 key: project_id_prod
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,580 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,581 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 3, 'key_1': 'project_id_prod'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,584 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,584 INFO sqlalchemy.engine.base.Engine {'solutionId': 3, 'key': 'project_id_prod', 'value': 'sol22-prod-env-ksjs726s', 'key_1': 'project_id_prod', 'solutionId_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,586 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,590 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,591 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,591 INFO sqlalchemy.engine.base.Engine {'param_1': 3, 'param_2': 'project_id_prod'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 3, 'value': 'sol22-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 3,
[33mhouston-service_1  |[0m  'value': 'sol22-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 3 key: project_id_staging
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,594 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,595 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 3, 'key_1': 'project_id_staging'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,598 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,598 INFO sqlalchemy.engine.base.Engine {'solutionId': 3, 'key': 'project_id_staging', 'value': 'sol22-staging-env-ksjs726s', 'key_1': 'project_id_staging', 'solutionId_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,599 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,604 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,605 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,605 INFO sqlalchemy.engine.base.Engine {'param_1': 3, 'param_2': 'project_id_staging'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 3,
[33mhouston-service_1  |[0m  'value': 'sol22-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 3,
[33mhouston-service_1  |[0m  'value': 'sol22-workspace-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 3 key: project_id_workspace
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,607 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,608 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 3, 'key_1': 'project_id_workspace'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,611 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,611 INFO sqlalchemy.engine.base.Engine {'solutionId': 3, 'key': 'project_id_workspace', 'value': 'sol22-workspace-ksjs726s', 'key_1': 'project_id_workspace', 'solutionId_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,612 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,616 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,617 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,617 INFO sqlalchemy.engine.base.Engine {'param_1': 3, 'param_2': 'project_id_workspace'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 3,
[33mhouston-service_1  |[0m  'value': 'sol22-workspace-ksjs726s'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,619 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/solutionresourcejson/3
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,630 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,631 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,631 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,633 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] POST /api/solutionresourcejson/
[33mhouston-service_1  |[0m update_or_create 4
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,644 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,645 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,645 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 4}
[33mhouston-service_1  |[0m Update: 4
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,648 INFO sqlalchemy.engine.base.Engine UPDATE solutionresourcejson SET `solutionId`=%(solutionId)s, json=%(json)s WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,648 INFO sqlalchemy.engine.base.Engine {'solutionId': 4, 'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","di ... (3358 characters truncated) ... pace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}', 'solutionId_1': 4}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,650 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,655 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,656 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,656 INFO sqlalchemy.engine.base.Engine {'param_1': 4}
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol23-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol23-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol23-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol23-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 4}
[33mhouston-service_1  |[0m resources_dict
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol23-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol23-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol23-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol23-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 4}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 4, 'value': 'sol23-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 4 key: project_id_dev
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,659 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,659 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 4, 'key_1': 'project_id_dev'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,662 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,662 INFO sqlalchemy.engine.base.Engine {'solutionId': 4, 'key': 'project_id_dev', 'value': 'sol23-dev-env-ksjs726s', 'key_1': 'project_id_dev', 'solutionId_1': 4}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,663 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,667 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,668 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,668 INFO sqlalchemy.engine.base.Engine {'param_1': 4, 'param_2': 'project_id_dev'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 4, 'value': 'sol23-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 4, 'value': 'sol23-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 4 key: project_id_prod
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,671 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,672 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 4, 'key_1': 'project_id_prod'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,676 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,676 INFO sqlalchemy.engine.base.Engine {'solutionId': 4, 'key': 'project_id_prod', 'value': 'sol23-prod-env-ksjs726s', 'key_1': 'project_id_prod', 'solutionId_1': 4}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,678 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,683 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,684 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,684 INFO sqlalchemy.engine.base.Engine {'param_1': 4, 'param_2': 'project_id_prod'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 4, 'value': 'sol23-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 4,
[33mhouston-service_1  |[0m  'value': 'sol23-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 4 key: project_id_staging
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,687 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,687 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 4, 'key_1': 'project_id_staging'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,689 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,690 INFO sqlalchemy.engine.base.Engine {'solutionId': 4, 'key': 'project_id_staging', 'value': 'sol23-staging-env-ksjs726s', 'key_1': 'project_id_staging', 'solutionId_1': 4}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,691 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,694 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,695 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,695 INFO sqlalchemy.engine.base.Engine {'param_1': 4, 'param_2': 'project_id_staging'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 4,
[33mhouston-service_1  |[0m  'value': 'sol23-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 4,
[33mhouston-service_1  |[0m  'value': 'sol23-workspace-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 4 key: project_id_workspace
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,697 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,697 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 4, 'key_1': 'project_id_workspace'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,700 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,700 INFO sqlalchemy.engine.base.Engine {'solutionId': 4, 'key': 'project_id_workspace', 'value': 'sol23-workspace-ksjs726s', 'key_1': 'project_id_workspace', 'solutionId_1': 4}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,701 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,705 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,706 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,706 INFO sqlalchemy.engine.base.Engine {'param_1': 4, 'param_2': 'project_id_workspace'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 4,
[33mhouston-service_1  |[0m  'value': 'sol23-workspace-ksjs726s'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,707 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/solutionresourcejson/4
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,718 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,720 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,720 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 4}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,722 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] POST /api/keyValues/sourceControl/
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,737 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,738 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,738 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,741 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,741 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,744 INFO sqlalchemy.engine.base.Engine INSERT INTO sourcecontrol (`key`, value) VALUES (%(key)s, %(value)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,744 INFO sqlalchemy.engine.base.Engine {'key': 'test-sourcecontrol', 'value': 'test-post-value'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,746 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,750 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,751 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,751 INFO sqlalchemy.engine.base.Engine {'param_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,753 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/keyValues/sourceControl/test-sourcecontrol
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,767 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,768 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,769 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,770 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] PUT /api/keyValues/sourceControl/test-sourcecontrol
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,786 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,786 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,787 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,789 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,789 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,792 INFO sqlalchemy.engine.base.Engine UPDATE sourcecontrol SET value=%(value)s WHERE sourcecontrol.`key` = %(sourcecontrol_key)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,792 INFO sqlalchemy.engine.base.Engine {'value': 'new-test-value', 'sourcecontrol_key': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,794 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,798 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,799 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,799 INFO sqlalchemy.engine.base.Engine {'param_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,800 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/keyValues/sourceControl/test-sourcecontrol
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,810 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,811 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,811 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,813 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] DELETE /api/keyValues/sourceControl/test-sourcecontrol
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,826 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,827 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,827 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,829 INFO sqlalchemy.engine.base.Engine DELETE FROM sourcecontrol WHERE sourcecontrol.`key` = %(key)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,829 INFO sqlalchemy.engine.base.Engine {'key': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,830 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] DELETE /api/keyValues/sourceControl/test-sourcecontrol
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,850 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,851 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,851 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,853 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [11] [DEBUG] GET /api/keyValues/sourceControl/test
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,868 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,869 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,869 INFO sqlalchemy.engine.base.Engine {'key_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,871 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/keyValues/sourceControl/
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,884 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,885 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol ORDER BY sourcecontrol.`key`
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,885 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,887 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] POST /api/team/
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,901 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,903 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.name = %(name_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,903 INFO sqlalchemy.engine.base.Engine {'name_1': 'Team-Test'}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,906 INFO sqlalchemy.engine.base.Engine INSERT INTO team (name, description, `businessUnitId`, `isActive`) VALUES (%(name)s, %(description)s, %(businessUnitId)s, %(isActive)s)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,906 INFO sqlalchemy.engine.base.Engine {'name': 'Team-Test', 'description': 'Test Team', 'businessUnitId': 0, 'isActive': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,907 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,911 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,913 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,913 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,916 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/team/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,929 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,931 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,931 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,934 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [11] [DEBUG] PUT /api/team/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,947 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,948 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,949 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,951 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,951 INFO sqlalchemy.engine.base.Engine {'id_1': 1, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,953 INFO sqlalchemy.engine.base.Engine UPDATE team SET name=%(name)s, `isActive`=%(isActive)s WHERE team.id = %(team_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,953 INFO sqlalchemy.engine.base.Engine {'name': 'Team-Test-Updated', 'isActive': 0, 'team_id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,954 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,957 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,958 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,958 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,960 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] GET /api/team/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,969 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,970 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,970 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,972 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [12] [DEBUG] DELETE /api/team/1
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,982 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,984 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,984 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,986 INFO sqlalchemy.engine.base.Engine DELETE FROM team WHERE team.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,986 INFO sqlalchemy.engine.base.Engine {'id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:31:59,987 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:31:59 +0000] [15] [DEBUG] GET /api/team/1
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,001 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,003 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,003 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,005 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [15] [DEBUG] DELETE /api/team/1
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,016 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,018 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,018 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,020 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [12] [DEBUG] GET /api/teams/
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,031 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,033 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team ORDER BY team.id
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,033 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,034 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [13] [DEBUG] POST /api/teammember/
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,049 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,051 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.`userId` = %(userId_1)s AND teammember.`teamId` = %(teamId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,051 INFO sqlalchemy.engine.base.Engine {'userId_1': 1000, 'teamId_1': 1000}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,054 INFO sqlalchemy.engine.base.Engine INSERT INTO teammember (`userId`, `teamId`, `role`, `isActive`) VALUES (%(userId)s, %(teamId)s, %(role)s, %(isActive)s)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,055 INFO sqlalchemy.engine.base.Engine {'userId': 1000, 'teamId': 1000, 'role': 'Admin', 'isActive': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,056 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,061 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,063 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,063 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,069 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [12] [DEBUG] GET /api/teammember/1
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,086 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,087 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,088 INFO sqlalchemy.engine.base.Engine {'id_1': '1'}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,089 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [12] [DEBUG] PUT /api/teammember/1
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,101 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,102 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,102 INFO sqlalchemy.engine.base.Engine {'id_1': '1'}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,104 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,104 INFO sqlalchemy.engine.base.Engine {'id_1': 1, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,106 INFO sqlalchemy.engine.base.Engine UPDATE teammember SET `isActive`=%(isActive)s WHERE teammember.id = %(teammember_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,106 INFO sqlalchemy.engine.base.Engine {'isActive': 0, 'teammember_id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,108 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,112 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,113 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,113 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,114 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [12] [DEBUG] GET /api/teammember/1
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,124 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,125 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,125 INFO sqlalchemy.engine.base.Engine {'id_1': '1'}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,127 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [15] [DEBUG] GET /api/teammembers/
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,139 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,141 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.`userId` = %(userId_1)s AND teammember.`teamId` = %(teamId_1)s ORDER BY teammember.id
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,142 INFO sqlalchemy.engine.base.Engine {'userId_1': 1000, 'teamId_1': 1000}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,144 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [11] [DEBUG] DELETE /api/teammember/1
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,154 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,156 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,156 INFO sqlalchemy.engine.base.Engine {'id_1': '1'}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,158 INFO sqlalchemy.engine.base.Engine DELETE FROM teammember WHERE teammember.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,159 INFO sqlalchemy.engine.base.Engine {'id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,160 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [12] [DEBUG] GET /api/teammember/1
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,173 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,174 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,174 INFO sqlalchemy.engine.base.Engine {'id_1': '1'}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,177 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [12] [DEBUG] DELETE /api/teammember/1
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,186 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,187 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,187 INFO sqlalchemy.engine.base.Engine {'id_1': '1'}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,188 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [12] [DEBUG] GET /api/teammembers/
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,198 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,199 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE true = 1 ORDER BY teammember.id
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,199 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,201 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [12] [DEBUG] POST /api/user/
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,216 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,218 INFO sqlalchemy.engine.base.Engine SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user 
[33mhouston-service_1  |[0m WHERE user.`firstName` = %(firstName_1)s AND user.`lastName` = %(lastName_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,218 INFO sqlalchemy.engine.base.Engine {'firstName_1': 'test', 'lastName_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,225 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m Exception on /api/user/ [POST]
[33mhouston-service_1  |[0m Traceback (most recent call last):
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/mysql/connector/connection_cext.py", line 489, in cmd_query
[33mhouston-service_1  |[0m     raw_as_string=raw_as_string)
[33mhouston-service_1  |[0m _mysql_connector.MySQLInterfaceError: Unknown column 'user.isActive' in 'field list'
[33mhouston-service_1  |[0m 
[33mhouston-service_1  |[0m During handling of the above exception, another exception occurred:
[33mhouston-service_1  |[0m 
[33mhouston-service_1  |[0m Traceback (most recent call last):
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py", line 1244, in _execute_context
[33mhouston-service_1  |[0m     cursor, statement, parameters, context
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/default.py", line 552, in do_execute
[33mhouston-service_1  |[0m     cursor.execute(statement, parameters)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/mysql/connector/cursor_cext.py", line 266, in execute
[33mhouston-service_1  |[0m     raw_as_string=self._raw_as_string)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/mysql/connector/connection_cext.py", line 492, in cmd_query
[33mhouston-service_1  |[0m     sqlstate=exc.sqlstate)
[33mhouston-service_1  |[0m mysql.connector.errors.ProgrammingError: 1054 (42S22): Unknown column 'user.isActive' in 'field list'
[33mhouston-service_1  |[0m 
[33mhouston-service_1  |[0m The above exception was the direct cause of the following exception:
[33mhouston-service_1  |[0m 
[33mhouston-service_1  |[0m Traceback (most recent call last):
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 2446, in wsgi_app
[33mhouston-service_1  |[0m     response = self.full_dispatch_request()
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1951, in full_dispatch_request
[33mhouston-service_1  |[0m     rv = self.handle_user_exception(e)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1820, in handle_user_exception
[33mhouston-service_1  |[0m     reraise(exc_type, exc_value, tb)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/_compat.py", line 39, in reraise
[33mhouston-service_1  |[0m     raise value
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1949, in full_dispatch_request
[33mhouston-service_1  |[0m     rv = self.dispatch_request()
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1935, in dispatch_request
[33mhouston-service_1  |[0m     return self.view_functions[rule.endpoint](**req.view_args)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/decorator.py", line 48, in wrapper
[33mhouston-service_1  |[0m     response = function(request)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/uri_parsing.py", line 144, in wrapper
[33mhouston-service_1  |[0m     response = function(request)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/validation.py", line 184, in wrapper
[33mhouston-service_1  |[0m     response = function(request)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/parameter.py", line 121, in wrapper
[33mhouston-service_1  |[0m     return function(**kwargs)
[33mhouston-service_1  |[0m   File "/srv/user.py", line 67, in create
[33mhouston-service_1  |[0m     User.query.filter(User.firstName == userDetails['firstName']).filter(User.lastName == userDetails['lastName']).one_or_none()
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/orm/query.py", line 3243, in one_or_none
[33mhouston-service_1  |[0m     ret = list(self)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/orm/query.py", line 3316, in __iter__
[33mhouston-service_1  |[0m     return self._execute_and_instances(context)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/orm/query.py", line 3341, in _execute_and_instances
[33mhouston-service_1  |[0m     result = conn.execute(querycontext.statement, self._params)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py", line 988, in execute
[33mhouston-service_1  |[0m     return meth(self, multiparams, params)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/sql/elements.py", line 287, in _execute_on_connection
[33mhouston-service_1  |[0m     return connection._execute_clauseelement(self, multiparams, params)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py", line 1107, in _execute_clauseelement
[33mhouston-service_1  |[0m     distilled_params,
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py", line 1248, in _execute_context
[33mhouston-service_1  |[0m     e, statement, parameters, cursor, context
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py", line 1466, in _handle_dbapi_exception
[33mhouston-service_1  |[0m     util.raise_from_cause(sqlalchemy_exception, exc_info)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/util/compat.py", line 383, in raise_from_cause
[33mhouston-service_1  |[0m     reraise(type(exception), exception, tb=exc_tb, cause=cause)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/util/compat.py", line 128, in reraise
[33mhouston-service_1  |[0m     raise value.with_traceback(tb)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py", line 1244, in _execute_context
[33mhouston-service_1  |[0m     cursor, statement, parameters, context
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/default.py", line 552, in do_execute
[33mhouston-service_1  |[0m     cursor.execute(statement, parameters)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/mysql/connector/cursor_cext.py", line 266, in execute
[33mhouston-service_1  |[0m     raw_as_string=self._raw_as_string)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/mysql/connector/connection_cext.py", line 492, in cmd_query
[33mhouston-service_1  |[0m     sqlstate=exc.sqlstate)
[33mhouston-service_1  |[0m sqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1054 (42S22): Unknown column 'user.isActive' in 'field list'
[33mhouston-service_1  |[0m [SQL: SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user 
[33mhouston-service_1  |[0m WHERE user.`firstName` = %(firstName_1)s AND user.`lastName` = %(lastName_1)s]
[33mhouston-service_1  |[0m [parameters: {'firstName_1': 'test', 'lastName_1': 'test'}]
[33mhouston-service_1  |[0m (Background on this error at: http://sqlalche.me/e/f405)
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [12] [DEBUG] POST /api/keyValues/vpnonpremisevendor/
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,271 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,272 INFO sqlalchemy.engine.base.Engine INSERT INTO vpnonpremisevendor (`key`, value) VALUES (%(key)s, %(value)s)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,273 INFO sqlalchemy.engine.base.Engine {'key': 'test', 'value': 'test-value'}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,274 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,278 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,279 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,279 INFO sqlalchemy.engine.base.Engine {'param_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,282 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [10] [DEBUG] GET /api/keyValues/vpnonpremisevendor/2
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,294 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,298 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,298 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,300 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [10] [DEBUG] PUT /api/keyValues/vpnonpremisevendor/2
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,316 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,317 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,318 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,321 INFO sqlalchemy.engine.base.Engine UPDATE vpnonpremisevendor SET `key`=%(key)s, value=%(value)s WHERE vpnonpremisevendor.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,321 INFO sqlalchemy.engine.base.Engine {'key': 'test', 'value': 'new-test-value', 'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,322 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,326 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,328 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,328 INFO sqlalchemy.engine.base.Engine {'param_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,330 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [10] [DEBUG] GET /api/keyValues/vpnonpremisevendor/2
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,340 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,341 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,341 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,342 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [10] [DEBUG] DELETE /api/keyValues/vpnonpremisevendor/2
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,352 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,353 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,353 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,355 INFO sqlalchemy.engine.base.Engine DELETE FROM vpnonpremisevendor WHERE vpnonpremisevendor.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,356 INFO sqlalchemy.engine.base.Engine {'id': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,357 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [12] [DEBUG] GET /api/keyValues/vpnonpremisevendor/2
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,372 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,373 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,373 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,375 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [12] [DEBUG] DELETE /api/keyValues/vpnonpremisevendor/2
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,386 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,387 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,387 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,389 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:32:00 +0000] [10] [DEBUG] GET /api/keyValues/vpnonpremisevendor/
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,400 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,401 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor ORDER BY vpnonpremisevendor.`key`
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,401 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:32:00,403 INFO sqlalchemy.engine.base.Engine ROLLBACK
[36mgcp-dac_1          |[0m  'teams': 2}[36mtb-houston-service_gcp-dac_1 exited with code 137
[0m[32mmysql57_1          |[0m 2020-05-05T09:36:26.445725Z 2 [Note] Aborted connection 2 to db: 'eagle_db' user: 'eagle-user' host: '172.19.0.3' (Got an error reading communication packets)
[32mmysql57_1          |[0m 2020-05-05T09:36:26.446615Z 4 [Note] Aborted connection 4 to db: 'eagle_db' user: 'eagle-user' host: '172.19.0.3' (Got an error reading communication packets)
[32mmysql57_1          |[0m 2020-05-05T09:36:26.447769Z 6 [Note] Aborted connection 6 to db: 'eagle_db' user: 'eagle-user' host: '172.19.0.3' (Got an error reading communication packets)
[32mmysql57_1          |[0m 2020-05-05T09:36:26.448060Z 5 [Note] Aborted connection 5 to db: 'eagle_db' user: 'eagle-user' host: '172.19.0.3' (Got an error reading communication packets)
[32mmysql57_1          |[0m 2020-05-05T09:36:26.474999Z 3 [Note] Aborted connection 3 to db: 'eagle_db' user: 'eagle-user' host: '172.19.0.3' (Got an error reading communication packets)
[33mtb-houston-service_houston-service_1 exited with code 137
[0m[32mmysql57_1          |[0m 2020-05-05T09:36:26.697252Z 0 [Note] Giving 0 client threads a chance to die gracefully
[32mmysql57_1          |[0m 2020-05-05T09:36:26.697284Z 0 [Note] Shutting down slave threads
[32mmysql57_1          |[0m 2020-05-05T09:36:26.697309Z 0 [Note] Forcefully disconnecting 0 remaining clients
[32mmysql57_1          |[0m 2020-05-05T09:36:26.697323Z 0 [Note] Event Scheduler: Purging the queue. 0 events
[32mmysql57_1          |[0m 2020-05-05T09:36:26.697409Z 0 [Note] Binlog end
[32mmysql57_1          |[0m 2020-05-05T09:36:26.698973Z 0 [Note] Shutting down plugin 'ngram'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699017Z 0 [Note] Shutting down plugin 'partition'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699025Z 0 [Note] Shutting down plugin 'BLACKHOLE'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699032Z 0 [Note] Shutting down plugin 'ARCHIVE'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699041Z 0 [Note] Shutting down plugin 'PERFORMANCE_SCHEMA'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699074Z 0 [Note] Shutting down plugin 'MRG_MYISAM'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699089Z 0 [Note] Shutting down plugin 'MyISAM'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699103Z 0 [Note] Shutting down plugin 'INNODB_SYS_VIRTUAL'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699112Z 0 [Note] Shutting down plugin 'INNODB_SYS_DATAFILES'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699187Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLESPACES'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699195Z 0 [Note] Shutting down plugin 'INNODB_SYS_FOREIGN_COLS'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699202Z 0 [Note] Shutting down plugin 'INNODB_SYS_FOREIGN'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699209Z 0 [Note] Shutting down plugin 'INNODB_SYS_FIELDS'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699221Z 0 [Note] Shutting down plugin 'INNODB_SYS_COLUMNS'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699237Z 0 [Note] Shutting down plugin 'INNODB_SYS_INDEXES'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699245Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLESTATS'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699251Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLES'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699259Z 0 [Note] Shutting down plugin 'INNODB_FT_INDEX_TABLE'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699269Z 0 [Note] Shutting down plugin 'INNODB_FT_INDEX_CACHE'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699276Z 0 [Note] Shutting down plugin 'INNODB_FT_CONFIG'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699283Z 0 [Note] Shutting down plugin 'INNODB_FT_BEING_DELETED'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699290Z 0 [Note] Shutting down plugin 'INNODB_FT_DELETED'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699308Z 0 [Note] Shutting down plugin 'INNODB_FT_DEFAULT_STOPWORD'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699318Z 0 [Note] Shutting down plugin 'INNODB_METRICS'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699325Z 0 [Note] Shutting down plugin 'INNODB_TEMP_TABLE_INFO'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699332Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_POOL_STATS'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699339Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_PAGE_LRU'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699346Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_PAGE'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699357Z 0 [Note] Shutting down plugin 'INNODB_CMP_PER_INDEX_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699397Z 0 [Note] Shutting down plugin 'INNODB_CMP_PER_INDEX'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699404Z 0 [Note] Shutting down plugin 'INNODB_CMPMEM_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699411Z 0 [Note] Shutting down plugin 'INNODB_CMPMEM'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699420Z 0 [Note] Shutting down plugin 'INNODB_CMP_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699428Z 0 [Note] Shutting down plugin 'INNODB_CMP'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699438Z 0 [Note] Shutting down plugin 'INNODB_LOCK_WAITS'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699454Z 0 [Note] Shutting down plugin 'INNODB_LOCKS'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699462Z 0 [Note] Shutting down plugin 'INNODB_TRX'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699469Z 0 [Note] Shutting down plugin 'InnoDB'
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699550Z 0 [Note] InnoDB: FTS optimize thread exiting.
[32mmysql57_1          |[0m 2020-05-05T09:36:26.699751Z 0 [Note] InnoDB: Starting shutdown...
[32mmysql57_1          |[0m 2020-05-05T09:36:26.802467Z 0 [Note] InnoDB: Dumping buffer pool(s) to /var/lib/mysql/ib_buffer_pool
[32mmysql57_1          |[0m 2020-05-05T09:36:26.803264Z 0 [Note] InnoDB: Buffer pool(s) dump completed at 200505  9:36:26
[32mmysql57_1          |[0m 2020-05-05T09:36:28.052379Z 0 [Note] InnoDB: Shutdown completed; log sequence number 12805041
[32mmysql57_1          |[0m 2020-05-05T09:36:28.055968Z 0 [Note] InnoDB: Removed temporary tablespace data file: "ibtmp1"
[32mmysql57_1          |[0m 2020-05-05T09:36:28.056032Z 0 [Note] Shutting down plugin 'MEMORY'
[32mmysql57_1          |[0m 2020-05-05T09:36:28.056049Z 0 [Note] Shutting down plugin 'CSV'
[32mmysql57_1          |[0m 2020-05-05T09:36:28.056065Z 0 [Note] Shutting down plugin 'sha256_password'
[32mmysql57_1          |[0m 2020-05-05T09:36:28.056075Z 0 [Note] Shutting down plugin 'mysql_native_password'
[32mmysql57_1          |[0m 2020-05-05T09:36:28.056594Z 0 [Note] Shutting down plugin 'binlog'
[32mmysql57_1          |[0m 2020-05-05T09:36:28.059786Z 0 [Note] mysqld: Shutdown complete
[32mmysql57_1          |[0m 
[32mtb-houston-service_mysql57_1 exited with code 0
[0mCreating network "tb-houston-service_default" with the default driver
Creating tb-houston-service_mysql57_1 ... 
[1A[2KCreating tb-houston-service_mysql57_1 ... [32mdone[0m[1BCreating tb-houston-service_houston-service_1 ... 
[1A[2KCreating tb-houston-service_houston-service_1 ... [32mdone[0m[1BCreating tb-houston-service_gcp-dac_1         ... 
[1A[2KCreating tb-houston-service_gcp-dac_1         ... [32mdone[0m[1BAttaching to tb-houston-service_mysql57_1, tb-houston-service_houston-service_1, tb-houston-service_gcp-dac_1
[33mhouston-service_1  |[0m Using port: 3000
[33mhouston-service_1  |[0m Using DB server IP: localhost
[33mhouston-service_1  |[0m SH SQLALCHEMY_DATABASE_URI: mysql+mysqlconnector://eagle-user:eagle-user-secret-pw@mysql57/eagle_db
[36mgcp-dac_1          |[0m Using port: 3100
[32mmysql57_1          |[0m 2020-05-05 09:57:21+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 5.7.30-1debian10 started.
[33mhouston-service_1  |[0m [2020-05-05 09:57:22 +0000] [7] [DEBUG] Current configuration:
[33mhouston-service_1  |[0m   config: None
[33mhouston-service_1  |[0m   bind: ['0.0.0.0:3000']
[33mhouston-service_1  |[0m   backlog: 2048
[33mhouston-service_1  |[0m   workers: 5
[33mhouston-service_1  |[0m   worker_class: sync
[33mhouston-service_1  |[0m   threads: 1
[33mhouston-service_1  |[0m   worker_connections: 1000
[33mhouston-service_1  |[0m   max_requests: 0
[33mhouston-service_1  |[0m   max_requests_jitter: 0
[33mhouston-service_1  |[0m   timeout: 30
[33mhouston-service_1  |[0m   graceful_timeout: 30
[33mhouston-service_1  |[0m   keepalive: 2
[33mhouston-service_1  |[0m   limit_request_line: 4094
[33mhouston-service_1  |[0m   limit_request_fields: 100
[33mhouston-service_1  |[0m   limit_request_field_size: 8190
[33mhouston-service_1  |[0m   reload: False
[33mhouston-service_1  |[0m   reload_engine: auto
[33mhouston-service_1  |[0m   reload_extra_files: []
[33mhouston-service_1  |[0m   spew: False
[33mhouston-service_1  |[0m   check_config: False
[33mhouston-service_1  |[0m   preload_app: False
[33mhouston-service_1  |[0m   sendfile: None
[33mhouston-service_1  |[0m   reuse_port: False
[33mhouston-service_1  |[0m   chdir: /srv
[33mhouston-service_1  |[0m   daemon: False
[33mhouston-service_1  |[0m   raw_env: []
[33mhouston-service_1  |[0m   pidfile: None
[33mhouston-service_1  |[0m   worker_tmp_dir: None
[33mhouston-service_1  |[0m   user: 0
[33mhouston-service_1  |[0m   group: 0
[33mhouston-service_1  |[0m   umask: 0
[33mhouston-service_1  |[0m   initgroups: False
[33mhouston-service_1  |[0m   tmp_upload_dir: None
[33mhouston-service_1  |[0m   secure_scheme_headers: {'X-FORWARDED-PROTOCOL': 'ssl', 'X-FORWARDED-PROTO': 'https', 'X-FORWARDED-SSL': 'on'}
[33mhouston-service_1  |[0m   forwarded_allow_ips: ['127.0.0.1']
[33mhouston-service_1  |[0m   accesslog: None
[33mhouston-service_1  |[0m   disable_redirect_access_to_syslog: False
[33mhouston-service_1  |[0m   access_log_format: %(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"
[33mhouston-service_1  |[0m   errorlog: -
[33mhouston-service_1  |[0m   loglevel: debug
[33mhouston-service_1  |[0m   capture_output: False
[33mhouston-service_1  |[0m   logger_class: gunicorn.glogging.Logger
[33mhouston-service_1  |[0m   logconfig: None
[33mhouston-service_1  |[0m   logconfig_dict: {}
[33mhouston-service_1  |[0m   syslog_addr: udp://localhost:514
[33mhouston-service_1  |[0m   syslog: False
[33mhouston-service_1  |[0m   syslog_prefix: None
[33mhouston-service_1  |[0m   syslog_facility: user
[33mhouston-service_1  |[0m   enable_stdio_inheritance: False
[33mhouston-service_1  |[0m   statsd_host: None
[33mhouston-service_1  |[0m   dogstatsd_tags: 
[33mhouston-service_1  |[0m   statsd_prefix: 
[33mhouston-service_1  |[0m   proc_name: None
[33mhouston-service_1  |[0m   default_proc_name: app:connex_app
[33mhouston-service_1  |[0m   pythonpath: None
[33mhouston-service_1  |[0m   paste: None
[33mhouston-service_1  |[0m   on_starting: <function OnStarting.on_starting at 0x7fc568e9ef28>
[33mhouston-service_1  |[0m   on_reload: <function OnReload.on_reload at 0x7fc568eb60d0>
[33mhouston-service_1  |[0m   when_ready: <function WhenReady.when_ready at 0x7fc568eb61e0>
[33mhouston-service_1  |[0m   pre_fork: <function Prefork.pre_fork at 0x7fc568eb62f0>
[33mhouston-service_1  |[0m   post_fork: <function Postfork.post_fork at 0x7fc568eb6400>
[33mhouston-service_1  |[0m   post_worker_init: <function PostWorkerInit.post_worker_init at 0x7fc568eb6510>
[33mhouston-service_1  |[0m   worker_int: <function WorkerInt.worker_int at 0x7fc568eb6620>
[33mhouston-service_1  |[0m   worker_abort: <function WorkerAbort.worker_abort at 0x7fc568eb6730>
[33mhouston-service_1  |[0m   pre_exec: <function PreExec.pre_exec at 0x7fc568eb6840>
[33mhouston-service_1  |[0m   pre_request: <function PreRequest.pre_request at 0x7fc568eb6950>
[33mhouston-service_1  |[0m   post_request: <function PostRequest.post_request at 0x7fc568eb69d8>
[33mhouston-service_1  |[0m   child_exit: <function ChildExit.child_exit at 0x7fc568eb6ae8>
[33mhouston-service_1  |[0m   worker_exit: <function WorkerExit.worker_exit at 0x7fc568eb6bf8>
[33mhouston-service_1  |[0m   nworkers_changed: <function NumWorkersChanged.nworkers_changed at 0x7fc568eb6d08>
[33mhouston-service_1  |[0m   on_exit: <function OnExit.on_exit at 0x7fc568eb6e18>
[33mhouston-service_1  |[0m   proxy_protocol: False
[33mhouston-service_1  |[0m   proxy_allow_ips: ['127.0.0.1']
[33mhouston-service_1  |[0m   keyfile: None
[33mhouston-service_1  |[0m   certfile: None
[33mhouston-service_1  |[0m   ssl_version: 2
[33mhouston-service_1  |[0m   cert_reqs: 0
[33mhouston-service_1  |[0m   ca_certs: None
[33mhouston-service_1  |[0m   suppress_ragged_eofs: True
[33mhouston-service_1  |[0m   do_handshake_on_connect: False
[33mhouston-service_1  |[0m   ciphers: None
[33mhouston-service_1  |[0m   raw_paste_global_conf: []
[33mhouston-service_1  |[0m   strip_header_spaces: False
[33mhouston-service_1  |[0m [2020-05-05 09:57:22 +0000] [7] [INFO] Starting gunicorn 20.0.4
[32mmysql57_1          |[0m 2020-05-05 09:57:22+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'
[33mhouston-service_1  |[0m [2020-05-05 09:57:22 +0000] [7] [DEBUG] Arbiter booted
[33mhouston-service_1  |[0m [2020-05-05 09:57:22 +0000] [7] [INFO] Listening at: http://0.0.0.0:3000 (7)
[33mhouston-service_1  |[0m [2020-05-05 09:57:22 +0000] [7] [INFO] Using worker: sync
[32mmysql57_1          |[0m 2020-05-05 09:57:22+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 5.7.30-1debian10 started.
[33mhouston-service_1  |[0m [2020-05-05 09:57:22 +0000] [10] [INFO] Booting worker with pid: 10
[32mmysql57_1          |[0m 2020-05-05 09:57:22+00:00 [Note] [Entrypoint]: Initializing database files
[33mhouston-service_1  |[0m [2020-05-05 09:57:22 +0000] [11] [INFO] Booting worker with pid: 11
[32mmysql57_1          |[0m 2020-05-05T09:57:22.175837Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
[32mmysql57_1          |[0m 2020-05-05T09:57:22.602502Z 0 [Warning] InnoDB: New log files created, LSN=45790
[33mhouston-service_1  |[0m [2020-05-05 09:57:22 +0000] [12] [INFO] Booting worker with pid: 12
[32mmysql57_1          |[0m 2020-05-05T09:57:22.680631Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.
[33mhouston-service_1  |[0m [2020-05-05 09:57:23 +0000] [13] [INFO] Booting worker with pid: 13
[33mhouston-service_1  |[0m [2020-05-05 09:57:23 +0000] [14] [INFO] Booting worker with pid: 14
[32mmysql57_1          |[0m 2020-05-05T09:57:22.699820Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: d0d4701a-8eb6-11ea-8759-0242ac140002.
[32mmysql57_1          |[0m 2020-05-05T09:57:22.703346Z 0 [Warning] Gtid table is not ready to be used. Table 'mysql.gtid_executed' cannot be opened.
[33mhouston-service_1  |[0m [2020-05-05 09:57:23 +0000] [7] [DEBUG] 5 workers
[36mgcp-dac_1          |[0m [2020-05-05 09:57:23 +0000] [8] [DEBUG] Current configuration:
[36mgcp-dac_1          |[0m   config: None
[36mgcp-dac_1          |[0m   bind: ['0.0.0.0:3100']
[36mgcp-dac_1          |[0m   backlog: 2048
[36mgcp-dac_1          |[0m   workers: 1
[36mgcp-dac_1          |[0m   worker_class: sync
[36mgcp-dac_1          |[0m   threads: 1
[36mgcp-dac_1          |[0m   worker_connections: 1000
[36mgcp-dac_1          |[0m   max_requests: 0
[36mgcp-dac_1          |[0m   max_requests_jitter: 0
[36mgcp-dac_1          |[0m   timeout: 30
[36mgcp-dac_1          |[0m   graceful_timeout: 30
[36mgcp-dac_1          |[0m   keepalive: 2
[36mgcp-dac_1          |[0m   limit_request_line: 4094
[36mgcp-dac_1          |[0m   limit_request_fields: 100
[36mgcp-dac_1          |[0m   limit_request_field_size: 8190
[36mgcp-dac_1          |[0m   reload: False
[36mgcp-dac_1          |[0m   reload_engine: auto
[36mgcp-dac_1          |[0m   reload_extra_files: []
[36mgcp-dac_1          |[0m   spew: False
[36mgcp-dac_1          |[0m   check_config: False
[36mgcp-dac_1          |[0m   preload_app: False
[36mgcp-dac_1          |[0m   sendfile: None
[36mgcp-dac_1          |[0m   reuse_port: False
[36mgcp-dac_1          |[0m   chdir: /srv
[36mgcp-dac_1          |[0m   daemon: False
[36mgcp-dac_1          |[0m   raw_env: []
[36mgcp-dac_1          |[0m   pidfile: None
[36mgcp-dac_1          |[0m   worker_tmp_dir: None
[36mgcp-dac_1          |[0m   user: 0
[36mgcp-dac_1          |[0m   group: 0
[36mgcp-dac_1          |[0m   umask: 0
[36mgcp-dac_1          |[0m   initgroups: False
[36mgcp-dac_1          |[0m   tmp_upload_dir: None
[36mgcp-dac_1          |[0m   secure_scheme_headers: {'X-FORWARDED-PROTOCOL': 'ssl', 'X-FORWARDED-PROTO': 'https', 'X-FORWARDED-SSL': 'on'}
[36mgcp-dac_1          |[0m   forwarded_allow_ips: ['127.0.0.1']
[36mgcp-dac_1          |[0m   accesslog: None
[36mgcp-dac_1          |[0m   disable_redirect_access_to_syslog: False
[36mgcp-dac_1          |[0m   access_log_format: %(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"
[36mgcp-dac_1          |[0m   errorlog: -
[36mgcp-dac_1          |[0m   loglevel: debug
[36mgcp-dac_1          |[0m   capture_output: False
[36mgcp-dac_1          |[0m   logger_class: gunicorn.glogging.Logger
[36mgcp-dac_1          |[0m   logconfig: None
[36mgcp-dac_1          |[0m   logconfig_dict: {}
[36mgcp-dac_1          |[0m   syslog_addr: udp://localhost:514
[36mgcp-dac_1          |[0m   syslog: False
[36mgcp-dac_1          |[0m   syslog_prefix: None
[36mgcp-dac_1          |[0m   syslog_facility: user
[36mgcp-dac_1          |[0m   enable_stdio_inheritance: False
[36mgcp-dac_1          |[0m   statsd_host: None
[36mgcp-dac_1          |[0m   dogstatsd_tags: 
[36mgcp-dac_1          |[0m   statsd_prefix: 
[36mgcp-dac_1          |[0m   proc_name: None
[36mgcp-dac_1          |[0m   default_proc_name: app:connex_app
[36mgcp-dac_1          |[0m   pythonpath: None
[36mgcp-dac_1          |[0m   paste: None
[36mgcp-dac_1          |[0m   on_starting: <function OnStarting.on_starting at 0x7f244b09af28>
[36mgcp-dac_1          |[0m   on_reload: <function OnReload.on_reload at 0x7f244b0b50d0>
[36mgcp-dac_1          |[0m   when_ready: <function WhenReady.when_ready at 0x7f244b0b51e0>
[36mgcp-dac_1          |[0m   pre_fork: <function Prefork.pre_fork at 0x7f244b0b52f0>
[36mgcp-dac_1          |[0m   post_fork: <function Postfork.post_fork at 0x7f244b0b5400>
[36mgcp-dac_1          |[0m   post_worker_init: <function PostWorkerInit.post_worker_init at 0x7f244b0b5510>
[36mgcp-dac_1          |[0m   worker_int: <function WorkerInt.worker_int at 0x7f244b0b5620>
[36mgcp-dac_1          |[0m   worker_abort: <function WorkerAbort.worker_abort at 0x7f244b0b5730>
[36mgcp-dac_1          |[0m   pre_exec: <function PreExec.pre_exec at 0x7f244b0b5840>
[36mgcp-dac_1          |[0m   pre_request: <function PreRequest.pre_request at 0x7f244b0b5950>
[36mgcp-dac_1          |[0m   post_request: <function PostRequest.post_request at 0x7f244b0b59d8>
[36mgcp-dac_1          |[0m   child_exit: <function ChildExit.child_exit at 0x7f244b0b5ae8>
[36mgcp-dac_1          |[0m   worker_exit: <function WorkerExit.worker_exit at 0x7f244b0b5bf8>
[36mgcp-dac_1          |[0m   nworkers_changed: <function NumWorkersChanged.nworkers_changed at 0x7f244b0b5d08>
[36mgcp-dac_1          |[0m   on_exit: <function OnExit.on_exit at 0x7f244b0b5e18>
[36mgcp-dac_1          |[0m   proxy_protocol: False
[36mgcp-dac_1          |[0m   proxy_allow_ips: ['127.0.0.1']
[36mgcp-dac_1          |[0m   keyfile: None
[36mgcp-dac_1          |[0m   certfile: None
[36mgcp-dac_1          |[0m   ssl_version: 2
[36mgcp-dac_1          |[0m   cert_reqs: 0
[36mgcp-dac_1          |[0m   ca_certs: None
[36mgcp-dac_1          |[0m   suppress_ragged_eofs: True
[36mgcp-dac_1          |[0m   do_handshake_on_connect: False
[36mgcp-dac_1          |[0m   ciphers: None
[36mgcp-dac_1          |[0m   raw_paste_global_conf: []
[36mgcp-dac_1          |[0m   strip_header_spaces: False
[36mgcp-dac_1          |[0m [2020-05-05 09:57:23 +0000] [8] [INFO] Starting gunicorn 20.0.4
[36mgcp-dac_1          |[0m [2020-05-05 09:57:23 +0000] [8] [DEBUG] Arbiter booted
[36mgcp-dac_1          |[0m [2020-05-05 09:57:23 +0000] [8] [INFO] Listening at: http://0.0.0.0:3100 (8)
[36mgcp-dac_1          |[0m [2020-05-05 09:57:23 +0000] [8] [INFO] Using worker: sync
[36mgcp-dac_1          |[0m [2020-05-05 09:57:23 +0000] [11] [INFO] Booting worker with pid: 11
[32mmysql57_1          |[0m 2020-05-05T09:57:23.514695Z 0 [Warning] CA certificate ca.pem is self signed.
[36mgcp-dac_1          |[0m [2020-05-05 09:57:23 +0000] [8] [DEBUG] 1 workers
[32mmysql57_1          |[0m 2020-05-05T09:57:23.834565Z 1 [Warning] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.
[32mmysql57_1          |[0m 2020-05-05 09:57:26+00:00 [Note] [Entrypoint]: Database files initialized
[32mmysql57_1          |[0m 2020-05-05 09:57:26+00:00 [Note] [Entrypoint]: Starting temporary server
[32mmysql57_1          |[0m 2020-05-05 09:57:26+00:00 [Note] [Entrypoint]: Waiting for server startup
[32mmysql57_1          |[0m 2020-05-05T09:57:26.743697Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
[32mmysql57_1          |[0m 2020-05-05T09:57:26.745302Z 0 [Note] mysqld (mysqld 5.7.30) starting as process 78 ...
[32mmysql57_1          |[0m 2020-05-05T09:57:26.748704Z 0 [Note] InnoDB: PUNCH HOLE support available
[32mmysql57_1          |[0m 2020-05-05T09:57:26.748752Z 0 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins
[32mmysql57_1          |[0m 2020-05-05T09:57:26.748767Z 0 [Note] InnoDB: Uses event mutexes
[32mmysql57_1          |[0m 2020-05-05T09:57:26.748778Z 0 [Note] InnoDB: GCC builtin __atomic_thread_fence() is used for memory barrier
[32mmysql57_1          |[0m 2020-05-05T09:57:26.748784Z 0 [Note] InnoDB: Compressed tables use zlib 1.2.11
[32mmysql57_1          |[0m 2020-05-05T09:57:26.748791Z 0 [Note] InnoDB: Using Linux native AIO
[32mmysql57_1          |[0m 2020-05-05T09:57:26.749164Z 0 [Note] InnoDB: Number of pools: 1
[32mmysql57_1          |[0m 2020-05-05T09:57:26.749280Z 0 [Note] InnoDB: Using CPU crc32 instructions
[32mmysql57_1          |[0m 2020-05-05T09:57:26.751030Z 0 [Note] InnoDB: Initializing buffer pool, total size = 128M, instances = 1, chunk size = 128M
[32mmysql57_1          |[0m 2020-05-05T09:57:26.762416Z 0 [Note] InnoDB: Completed initialization of buffer pool
[32mmysql57_1          |[0m 2020-05-05T09:57:26.765163Z 0 [Note] InnoDB: If the mysqld execution user is authorized, page cleaner thread priority can be changed. See the man page of setpriority().
[32mmysql57_1          |[0m 2020-05-05T09:57:26.780461Z 0 [Note] InnoDB: Highest supported file format is Barracuda.
[32mmysql57_1          |[0m 2020-05-05T09:57:26.799625Z 0 [Note] InnoDB: Creating shared tablespace for temporary tables
[32mmysql57_1          |[0m 2020-05-05T09:57:26.799778Z 0 [Note] InnoDB: Setting file './ibtmp1' size to 12 MB. Physically writing the file full; Please wait ...
[32mmysql57_1          |[0m 2020-05-05T09:57:26.841522Z 0 [Note] InnoDB: File './ibtmp1' size is now 12 MB.
[32mmysql57_1          |[0m 2020-05-05T09:57:26.842621Z 0 [Note] InnoDB: 96 redo rollback segment(s) found. 96 redo rollback segment(s) are active.
[32mmysql57_1          |[0m 2020-05-05T09:57:26.842664Z 0 [Note] InnoDB: 32 non-redo rollback segment(s) are active.
[32mmysql57_1          |[0m 2020-05-05T09:57:26.843281Z 0 [Note] InnoDB: Waiting for purge to start
[32mmysql57_1          |[0m 2020-05-05T09:57:26.894617Z 0 [Note] InnoDB: 5.7.30 started; log sequence number 2629907
[32mmysql57_1          |[0m 2020-05-05T09:57:26.895588Z 0 [Note] Plugin 'FEDERATED' is disabled.
[32mmysql57_1          |[0m 2020-05-05T09:57:26.896912Z 0 [Note] InnoDB: Loading buffer pool(s) from /var/lib/mysql/ib_buffer_pool
[32mmysql57_1          |[0m 2020-05-05T09:57:26.899945Z 0 [Note] InnoDB: Buffer pool(s) load completed at 200505  9:57:26
[32mmysql57_1          |[0m 2020-05-05T09:57:26.905246Z 0 [Note] Found ca.pem, server-cert.pem and server-key.pem in data directory. Trying to enable SSL support using them.
[32mmysql57_1          |[0m 2020-05-05T09:57:26.905297Z 0 [Note] Skipping generation of SSL certificates as certificate files are present in data directory.
[32mmysql57_1          |[0m 2020-05-05T09:57:26.906077Z 0 [Warning] CA certificate ca.pem is self signed.
[32mmysql57_1          |[0m 2020-05-05T09:57:26.906131Z 0 [Note] Skipping generation of RSA key pair as key files are present in data directory.
[32mmysql57_1          |[0m 2020-05-05T09:57:26.908975Z 0 [Warning] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.
[32mmysql57_1          |[0m 2020-05-05T09:57:26.920425Z 0 [Note] Event Scheduler: Loaded 0 events
[32mmysql57_1          |[0m 2020-05-05T09:57:26.920717Z 0 [Note] mysqld: ready for connections.
[32mmysql57_1          |[0m Version: '5.7.30'  socket: '/var/run/mysqld/mysqld.sock'  port: 0  MySQL Community Server (GPL)
[32mmysql57_1          |[0m 2020-05-05 09:57:27+00:00 [Note] [Entrypoint]: Temporary server started.
[32mmysql57_1          |[0m Warning: Unable to load '/usr/share/zoneinfo/iso3166.tab' as time zone. Skipping it.
[32mmysql57_1          |[0m Warning: Unable to load '/usr/share/zoneinfo/leap-seconds.list' as time zone. Skipping it.
[32mmysql57_1          |[0m Warning: Unable to load '/usr/share/zoneinfo/zone.tab' as time zone. Skipping it.
[32mmysql57_1          |[0m Warning: Unable to load '/usr/share/zoneinfo/zone1970.tab' as time zone. Skipping it.
[32mmysql57_1          |[0m 2020-05-05 09:57:30+00:00 [Note] [Entrypoint]: Creating database eagle_db
[32mmysql57_1          |[0m 2020-05-05 09:57:30+00:00 [Note] [Entrypoint]: Creating user eagle-user
[32mmysql57_1          |[0m 2020-05-05 09:57:30+00:00 [Note] [Entrypoint]: Giving user eagle-user access to schema eagle_db
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05 09:57:30+00:00 [Note] [Entrypoint]: /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/eagle_db_dump_mock.sql
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05 09:57:31+00:00 [Note] [Entrypoint]: Stopping temporary server
[32mmysql57_1          |[0m 2020-05-05T09:57:31.338641Z 0 [Note] Giving 0 client threads a chance to die gracefully
[32mmysql57_1          |[0m 2020-05-05T09:57:31.338694Z 0 [Note] Shutting down slave threads
[32mmysql57_1          |[0m 2020-05-05T09:57:31.338708Z 0 [Note] Forcefully disconnecting 0 remaining clients
[32mmysql57_1          |[0m 2020-05-05T09:57:31.338723Z 0 [Note] Event Scheduler: Purging the queue. 0 events
[32mmysql57_1          |[0m 2020-05-05T09:57:31.338785Z 0 [Note] Binlog end
[32mmysql57_1          |[0m 2020-05-05T09:57:31.339438Z 0 [Note] Shutting down plugin 'ngram'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.339451Z 0 [Note] Shutting down plugin 'partition'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.339463Z 0 [Note] Shutting down plugin 'BLACKHOLE'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.339477Z 0 [Note] Shutting down plugin 'ARCHIVE'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.339489Z 0 [Note] Shutting down plugin 'PERFORMANCE_SCHEMA'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.339523Z 0 [Note] Shutting down plugin 'MRG_MYISAM'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.339536Z 0 [Note] Shutting down plugin 'MyISAM'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.339554Z 0 [Note] Shutting down plugin 'INNODB_SYS_VIRTUAL'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.339574Z 0 [Note] Shutting down plugin 'INNODB_SYS_DATAFILES'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.339949Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLESPACES'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.339962Z 0 [Note] Shutting down plugin 'INNODB_SYS_FOREIGN_COLS'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.339980Z 0 [Note] Shutting down plugin 'INNODB_SYS_FOREIGN'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.339993Z 0 [Note] Shutting down plugin 'INNODB_SYS_FIELDS'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340006Z 0 [Note] Shutting down plugin 'INNODB_SYS_COLUMNS'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340016Z 0 [Note] Shutting down plugin 'INNODB_SYS_INDEXES'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340025Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLESTATS'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340038Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLES'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340058Z 0 [Note] Shutting down plugin 'INNODB_FT_INDEX_TABLE'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340068Z 0 [Note] Shutting down plugin 'INNODB_FT_INDEX_CACHE'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340076Z 0 [Note] Shutting down plugin 'INNODB_FT_CONFIG'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340090Z 0 [Note] Shutting down plugin 'INNODB_FT_BEING_DELETED'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340106Z 0 [Note] Shutting down plugin 'INNODB_FT_DELETED'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340114Z 0 [Note] Shutting down plugin 'INNODB_FT_DEFAULT_STOPWORD'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340122Z 0 [Note] Shutting down plugin 'INNODB_METRICS'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340131Z 0 [Note] Shutting down plugin 'INNODB_TEMP_TABLE_INFO'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340143Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_POOL_STATS'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340152Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_PAGE_LRU'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340162Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_PAGE'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340174Z 0 [Note] Shutting down plugin 'INNODB_CMP_PER_INDEX_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340186Z 0 [Note] Shutting down plugin 'INNODB_CMP_PER_INDEX'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340198Z 0 [Note] Shutting down plugin 'INNODB_CMPMEM_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340249Z 0 [Note] Shutting down plugin 'INNODB_CMPMEM'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340259Z 0 [Note] Shutting down plugin 'INNODB_CMP_RESET'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340267Z 0 [Note] Shutting down plugin 'INNODB_CMP'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340277Z 0 [Note] Shutting down plugin 'INNODB_LOCK_WAITS'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340288Z 0 [Note] Shutting down plugin 'INNODB_LOCKS'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340296Z 0 [Note] Shutting down plugin 'INNODB_TRX'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340303Z 0 [Note] Shutting down plugin 'InnoDB'
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340382Z 0 [Note] InnoDB: FTS optimize thread exiting.
[32mmysql57_1          |[0m 2020-05-05T09:57:31.340843Z 0 [Note] InnoDB: Starting shutdown...
[32mmysql57_1          |[0m 2020-05-05T09:57:31.445470Z 0 [Note] InnoDB: Dumping buffer pool(s) to /var/lib/mysql/ib_buffer_pool
[32mmysql57_1          |[0m 2020-05-05T09:57:31.448128Z 0 [Note] InnoDB: Buffer pool(s) dump completed at 200505  9:57:31
[32mmysql57_1          |[0m 2020-05-05T09:57:33.007335Z 0 [Note] InnoDB: Shutdown completed; log sequence number 12705355
[32mmysql57_1          |[0m 2020-05-05T09:57:33.010760Z 0 [Note] InnoDB: Removed temporary tablespace data file: "ibtmp1"
[32mmysql57_1          |[0m 2020-05-05T09:57:33.010820Z 0 [Note] Shutting down plugin 'MEMORY'
[32mmysql57_1          |[0m 2020-05-05T09:57:33.010835Z 0 [Note] Shutting down plugin 'CSV'
[32mmysql57_1          |[0m 2020-05-05T09:57:33.010850Z 0 [Note] Shutting down plugin 'sha256_password'
[32mmysql57_1          |[0m 2020-05-05T09:57:33.010863Z 0 [Note] Shutting down plugin 'mysql_native_password'
[32mmysql57_1          |[0m 2020-05-05T09:57:33.011061Z 0 [Note] Shutting down plugin 'binlog'
[32mmysql57_1          |[0m 2020-05-05T09:57:33.014342Z 0 [Note] mysqld: Shutdown complete
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05 09:57:33+00:00 [Note] [Entrypoint]: Temporary server stopped
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05 09:57:33+00:00 [Note] [Entrypoint]: MySQL init process done. Ready for start up.
[32mmysql57_1          |[0m 
[32mmysql57_1          |[0m 2020-05-05T09:57:33.556811Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
[32mmysql57_1          |[0m 2020-05-05T09:57:33.558581Z 0 [Note] mysqld (mysqld 5.7.30) starting as process 1 ...
[32mmysql57_1          |[0m 2020-05-05T09:57:33.561968Z 0 [Note] InnoDB: PUNCH HOLE support available
[32mmysql57_1          |[0m 2020-05-05T09:57:33.562022Z 0 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins
[32mmysql57_1          |[0m 2020-05-05T09:57:33.562037Z 0 [Note] InnoDB: Uses event mutexes
[32mmysql57_1          |[0m 2020-05-05T09:57:33.562045Z 0 [Note] InnoDB: GCC builtin __atomic_thread_fence() is used for memory barrier
[32mmysql57_1          |[0m 2020-05-05T09:57:33.562052Z 0 [Note] InnoDB: Compressed tables use zlib 1.2.11
[32mmysql57_1          |[0m 2020-05-05T09:57:33.562062Z 0 [Note] InnoDB: Using Linux native AIO
[32mmysql57_1          |[0m 2020-05-05T09:57:33.562580Z 0 [Note] InnoDB: Number of pools: 1
[32mmysql57_1          |[0m 2020-05-05T09:57:33.562784Z 0 [Note] InnoDB: Using CPU crc32 instructions
[32mmysql57_1          |[0m 2020-05-05T09:57:33.564528Z 0 [Note] InnoDB: Initializing buffer pool, total size = 128M, instances = 1, chunk size = 128M
[32mmysql57_1          |[0m 2020-05-05T09:57:33.575690Z 0 [Note] InnoDB: Completed initialization of buffer pool
[32mmysql57_1          |[0m 2020-05-05T09:57:33.578503Z 0 [Note] InnoDB: If the mysqld execution user is authorized, page cleaner thread priority can be changed. See the man page of setpriority().
[32mmysql57_1          |[0m 2020-05-05T09:57:33.592486Z 0 [Note] InnoDB: Highest supported file format is Barracuda.
[32mmysql57_1          |[0m 2020-05-05T09:57:33.609226Z 0 [Note] InnoDB: Creating shared tablespace for temporary tables
[32mmysql57_1          |[0m 2020-05-05T09:57:33.609304Z 0 [Note] InnoDB: Setting file './ibtmp1' size to 12 MB. Physically writing the file full; Please wait ...
[32mmysql57_1          |[0m 2020-05-05T09:57:33.651039Z 0 [Note] InnoDB: File './ibtmp1' size is now 12 MB.
[32mmysql57_1          |[0m 2020-05-05T09:57:33.652331Z 0 [Note] InnoDB: 96 redo rollback segment(s) found. 96 redo rollback segment(s) are active.
[32mmysql57_1          |[0m 2020-05-05T09:57:33.652375Z 0 [Note] InnoDB: 32 non-redo rollback segment(s) are active.
[32mmysql57_1          |[0m 2020-05-05T09:57:33.653104Z 0 [Note] InnoDB: Waiting for purge to start
[32mmysql57_1          |[0m 2020-05-05T09:57:33.705002Z 0 [Note] InnoDB: 5.7.30 started; log sequence number 12705355
[32mmysql57_1          |[0m 2020-05-05T09:57:33.705527Z 0 [Note] InnoDB: Loading buffer pool(s) from /var/lib/mysql/ib_buffer_pool
[32mmysql57_1          |[0m 2020-05-05T09:57:33.707325Z 0 [Note] Plugin 'FEDERATED' is disabled.
[32mmysql57_1          |[0m 2020-05-05T09:57:33.712081Z 0 [Note] InnoDB: Buffer pool(s) load completed at 200505  9:57:33
[32mmysql57_1          |[0m 2020-05-05T09:57:33.716122Z 0 [Note] Found ca.pem, server-cert.pem and server-key.pem in data directory. Trying to enable SSL support using them.
[32mmysql57_1          |[0m 2020-05-05T09:57:33.716170Z 0 [Note] Skipping generation of SSL certificates as certificate files are present in data directory.
[32mmysql57_1          |[0m 2020-05-05T09:57:33.717219Z 0 [Warning] CA certificate ca.pem is self signed.
[32mmysql57_1          |[0m 2020-05-05T09:57:33.717292Z 0 [Note] Skipping generation of RSA key pair as key files are present in data directory.
[32mmysql57_1          |[0m 2020-05-05T09:57:33.718066Z 0 [Note] Server hostname (bind-address): '*'; port: 3306
[32mmysql57_1          |[0m 2020-05-05T09:57:33.718151Z 0 [Note] IPv6 is available.
[32mmysql57_1          |[0m 2020-05-05T09:57:33.718174Z 0 [Note]   - '::' resolves to '::';
[32mmysql57_1          |[0m 2020-05-05T09:57:33.718202Z 0 [Note] Server socket created on IP: '::'.
[32mmysql57_1          |[0m 2020-05-05T09:57:33.720339Z 0 [Warning] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.
[32mmysql57_1          |[0m 2020-05-05T09:57:33.734334Z 0 [Note] Event Scheduler: Loaded 0 events
[32mmysql57_1          |[0m 2020-05-05T09:57:33.735079Z 0 [Note] mysqld: ready for connections.
[32mmysql57_1          |[0m Version: '5.7.30'  socket: '/var/run/mysqld/mysqld.sock'  port: 3306  MySQL Community Server (GPL)
[33mhouston-service_1  |[0m [2020-05-05 09:57:55 +0000] [10] [DEBUG] POST /api/activator/
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,945 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,945 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,949 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,949 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,952 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,952 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,955 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,955 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,956 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,956 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,957 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,960 INFO sqlalchemy.engine.base.Engine INSERT INTO activator (name, type, available, sensitivity, category, envs, platforms, `lastUpdated`, `userCapacity`, `serverCapacity`, regions, hosting, `apiManagement`, ci, cd, `sourceControl`, `businessUnit`, `technologyOwner`, `technologyOwnerEmail`, billing, activator, status, description, `accessRequestedBy`, source, `activatorLink`) VALUES (%(name)s, %(type)s, %(available)s, %(sensitivity)s, %(category)s, %(envs)s, %(platforms)s, %(lastUpdated)s, %(userCapacity)s, %(serverCapacity)s, %(regions)s, %(hosting)s, %(apiManagement)s, %(ci)s, %(cd)s, %(sourceControl)s, %(businessUnit)s, %(technologyOwner)s, %(technologyOwnerEmail)s, %(billing)s, %(activator)s, %(status)s, %(description)s, %(accessRequestedBy)s, %(source)s, %(activatorLink)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,960 INFO sqlalchemy.engine.base.Engine {'name': 'test-post-', 'type': 'test-post-', 'available': 1, 'sensitivity': 'test-post-', 'category': 'test-post-', 'envs': '["dev", "prd", "poc"]', 'platforms': '["test-post-1", "test-post-2", "test-post-3", "test-post-4", "test-post-5", "test-post-6"]', 'lastUpdated': '2020-05-05 09:57:55', 'userCapacity': 999999999, 'serverCapacity': 999999999, 'regions': '["test-post-1", "test-post-2", "test-post-3", "test-post-4", "test-post-5"]', 'hosting': '["test-post-1", "test-post-2", "test-post-3", "test-post-4", "test-post-5"]', 'apiManagement': '["test-post-", "test-post-1", "test-post-2", "test-post-3", "test-post-4", "test-post-5"]', 'ci': '["test-post-1", "test-post-2"]', 'cd': '["test-post-1", "test-post-2", "test-post-3"]', 'sourceControl': '["test-post-", "test-post-1"]', 'businessUnit': 'test-post-', 'technologyOwner': 'test-post-', 'technologyOwnerEmail': 'test-post-', 'billing': 'test-post-', 'activator': 'test-activator', 'status': 'Available', 'description': 'test-post-test-post-test-post-test-post-test-post-test-post-test-post-test-post-', 'accessRequestedBy': 0, 'source': 'test-post-', 'activatorLink': 'test-post-'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,965 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,970 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,972 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,972 INFO sqlalchemy.engine.base.Engine {'param_1': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:57:55,976 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:55 +0000] [14] [DEBUG] GET /api/activator/112
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,036 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,036 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,041 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,041 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,044 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,045 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,047 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,047 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,048 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,049 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,050 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,053 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,053 INFO sqlalchemy.engine.base.Engine {'id_1': '112'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,057 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [11] [DEBUG] POST /api/setactivatorstatus/
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,133 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,133 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,140 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,140 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,144 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,144 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,147 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,147 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,149 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,149 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,151 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,154 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,155 INFO sqlalchemy.engine.base.Engine {'id_1': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,159 INFO sqlalchemy.engine.base.Engine UPDATE activator SET `lastUpdated`=%(lastUpdated)s, status=%(status)s WHERE activator.id = %(activator_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,160 INFO sqlalchemy.engine.base.Engine {'lastUpdated': '2020-05-05 09:57:56', 'status': 'Locked', 'activator_id': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,168 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,181 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,183 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,183 INFO sqlalchemy.engine.base.Engine {'param_1': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,187 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [12] [DEBUG] PUT /api/activator/112
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,250 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,250 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,254 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,254 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,257 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,257 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,260 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,260 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,261 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,261 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,263 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,266 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,266 INFO sqlalchemy.engine.base.Engine {'id_1': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,271 INFO sqlalchemy.engine.base.Engine UPDATE activator SET name=%(name)s, type=%(type)s, available=%(available)s, sensitivity=%(sensitivity)s, category=%(category)s, envs=%(envs)s, platforms=%(platforms)s, `lastUpdated`=%(lastUpdated)s, `userCapacity`=%(userCapacity)s, `serverCapacity`=%(serverCapacity)s, regions=%(regions)s, hosting=%(hosting)s, `apiManagement`=%(apiManagement)s, ci=%(ci)s, cd=%(cd)s, `sourceControl`=%(sourceControl)s, `businessUnit`=%(businessUnit)s, `technologyOwner`=%(technologyOwner)s, `technologyOwnerEmail`=%(technologyOwnerEmail)s, billing=%(billing)s, activator=%(activator)s, status=%(status)s, description=%(description)s, `accessRequestedBy`=%(accessRequestedBy)s, source=%(source)s, `activatorLink`=%(activatorLink)s WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,271 INFO sqlalchemy.engine.base.Engine {'name': 'mynewactivatortest', 'type': 'best', 'available': 0, 'sensitivity': 'confidential', 'category': 'category', 'envs': '["dev", "Prd", "Poc"]', 'platforms': '["test-put-101", "test-put-102", "test-put-103", "test-put-104", "test-put-105", "test-put-106"]', 'lastUpdated': '2020-05-05 09:57:56', 'userCapacity': 10, 'serverCapacity': 5, 'regions': '["test-put-101", "test-put-210", "test-put-310", "test-put-410", "test-put-510"]', 'hosting': '["test-put-11", "test-put-22", "test-put-33", "test-put-44", "test-put-55"]', 'apiManagement': '["test-put-6", "test-put-7", "test-put-8"]', 'ci': '["test-put-7", "test-put-8"]', 'cd': '["test-put-4", "test-put-5", "test-put-6"]', 'sourceControl': '["dotmatrix", "tape"]', 'businessUnit': 'businessUnit', 'technologyOwner': 'me', 'technologyOwnerEmail': 'me@me.com', 'billing': 'billing', 'activator': 'new-test-activator', 'status': 'NotAvailable', 'description': 'TheQuickBrownFoxJumpedOverTheLazyDogs', 'accessRequestedBy': 0, 'source': 'original', 'activatorLink': 'test-put-', 'id_1': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,273 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,280 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,282 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,282 INFO sqlalchemy.engine.base.Engine {'id_1': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,285 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [12] [DEBUG] GET /api/activator/112
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,296 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,298 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,298 INFO sqlalchemy.engine.base.Engine {'id_1': '112'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,302 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [13] [DEBUG] DELETE /api/activator/112
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,363 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'sql_mode'
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,363 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,368 INFO sqlalchemy.engine.base.Engine SHOW VARIABLES LIKE 'lower_case_table_names'
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,368 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,372 INFO sqlalchemy.engine.base.Engine SELECT DATABASE()
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,372 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,374 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,375 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,376 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,376 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,378 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,381 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,381 INFO sqlalchemy.engine.base.Engine {'id_1': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,384 INFO sqlalchemy.engine.base.Engine DELETE FROM activator WHERE activator.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,384 INFO sqlalchemy.engine.base.Engine {'id': 112}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,386 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [11] [DEBUG] GET /api/activator/112
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,413 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,415 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,415 INFO sqlalchemy.engine.base.Engine {'id_1': '112'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,417 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [12] [DEBUG] GET /api/activators/
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,428 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,430 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE true = 1 ORDER BY activator.id
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,430 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,441 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [10] [DEBUG] GET /api/activator_meta/
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,457 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,458 INFO sqlalchemy.engine.base.Engine SELECT count(*) AS count_1 
[33mhouston-service_1  |[0m FROM (SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator) AS anon_1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,458 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,460 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [10] [DEBUG] GET /api/activatorcategories/
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,469 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,470 INFO sqlalchemy.engine.base.Engine select category from activator group by category
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,470 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,471 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [13] [DEBUG] POST /api/application/
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,487 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,489 INFO sqlalchemy.engine.base.Engine INSERT INTO application (`solutionId`, `activatorId`, name, env, status, description, `lastUpdated`, resources) VALUES (%(solutionId)s, %(activatorId)s, %(name)s, %(env)s, %(status)s, %(description)s, %(lastUpdated)s, %(resources)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,489 INFO sqlalchemy.engine.base.Engine {'solutionId': 0, 'activatorId': 0, 'name': 'test', 'env': 'DEV', 'status': 'Active', 'description': 'test', 'lastUpdated': '2020-05-05 09:57:56', 'resources': '[{"ipaddress": "address1", "name": "value1"}, {"ipaddress": "address2", "name": "value2"}, {"ipaddress": "address3", "name": "value3"}]'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,491 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,495 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,497 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,497 INFO sqlalchemy.engine.base.Engine {'param_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,500 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [11] [DEBUG] GET /api/application/7
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,511 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,513 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,513 INFO sqlalchemy.engine.base.Engine {'id_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,515 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [12] [DEBUG] PUT /api/application/7
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,526 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,528 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,528 INFO sqlalchemy.engine.base.Engine {'id_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,531 INFO sqlalchemy.engine.base.Engine UPDATE application SET id=%(id)s, status=%(status)s, description=%(description)s, `lastUpdated`=%(lastUpdated)s, resources=%(resources)s WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,531 INFO sqlalchemy.engine.base.Engine {'id': 7, 'status': 'Inactive', 'description': 'test put', 'lastUpdated': '2020-05-05 09:57:56', 'resources': '"[{\\"ipaddress\\": \\"address1\\", \\"name\\": \\"value1\\"}, {\\"ipaddress\\": \\"address2\\", \\"name\\": \\"value2\\"}, {\\"ipaddress\\": \\"address3\\", \\"name\\": \\"value3\\"}]"', 'id_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,532 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,536 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,537 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,537 INFO sqlalchemy.engine.base.Engine {'param_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,541 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [10] [DEBUG] GET /api/application/7
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,552 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,554 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,554 INFO sqlalchemy.engine.base.Engine {'id_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,558 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [10] [DEBUG] DELETE /api/application/7
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,570 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,571 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,571 INFO sqlalchemy.engine.base.Engine {'id_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,573 INFO sqlalchemy.engine.base.Engine DELETE FROM application WHERE application.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,573 INFO sqlalchemy.engine.base.Engine {'id': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,574 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [14] [DEBUG] GET /api/application/7
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,589 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,591 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,591 INFO sqlalchemy.engine.base.Engine {'id_1': 7}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,593 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [14] [DEBUG] GET /api/applications/
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,603 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,605 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE true = 1 ORDER BY application.id
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,605 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,610 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [14] [DEBUG] POST /api/application/
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,621 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,623 INFO sqlalchemy.engine.base.Engine INSERT INTO application (`solutionId`, `activatorId`, name, env, status, description, `lastUpdated`, resources) VALUES (%(solutionId)s, %(activatorId)s, %(name)s, %(env)s, %(status)s, %(description)s, %(lastUpdated)s, %(resources)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,623 INFO sqlalchemy.engine.base.Engine {'solutionId': 0, 'activatorId': 0, 'name': 'test', 'env': 'DEV', 'status': 'Active', 'description': 'test', 'lastUpdated': '2020-05-05 09:57:56', 'resources': '[]'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,624 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,628 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,629 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,629 INFO sqlalchemy.engine.base.Engine {'param_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,631 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [11] [DEBUG] GET /api/application/8
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,642 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,643 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,643 INFO sqlalchemy.engine.base.Engine {'id_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,646 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [11] [DEBUG] DELETE /api/application/8
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,657 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,658 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,659 INFO sqlalchemy.engine.base.Engine {'id_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,661 INFO sqlalchemy.engine.base.Engine DELETE FROM application WHERE application.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,661 INFO sqlalchemy.engine.base.Engine {'id': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,662 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [14] [DEBUG] GET /api/application/8
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,675 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,677 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,677 INFO sqlalchemy.engine.base.Engine {'id_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,679 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [10] [DEBUG] POST /api/keyValues/bgproutingmode/
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,694 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,696 INFO sqlalchemy.engine.base.Engine INSERT INTO bgproutingmode (`key`, value) VALUES (%(key)s, %(value)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,696 INFO sqlalchemy.engine.base.Engine {'key': 'Local', 'value': 'Local'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,699 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,703 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,704 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode 
[33mhouston-service_1  |[0m WHERE bgproutingmode.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,705 INFO sqlalchemy.engine.base.Engine {'param_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,706 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [11] [DEBUG] GET /api/keyValues/bgproutingmode/2
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,723 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,724 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode 
[33mhouston-service_1  |[0m WHERE bgproutingmode.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,725 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,726 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [10] [DEBUG] PUT /api/keyValues/bgproutingmode/2
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,737 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,737 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode 
[33mhouston-service_1  |[0m WHERE bgproutingmode.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,738 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,739 INFO sqlalchemy.engine.base.Engine UPDATE bgproutingmode SET id=%(id)s, `key`=%(key)s, value=%(value)s WHERE bgproutingmode.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,740 INFO sqlalchemy.engine.base.Engine {'id': 2, 'key': 'new-key', 'value': 'new-value', 'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,741 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,744 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,745 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode 
[33mhouston-service_1  |[0m WHERE bgproutingmode.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,745 INFO sqlalchemy.engine.base.Engine {'param_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,748 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [10] [DEBUG] GET /api/keyValues/bgproutingmode/2
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,758 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,759 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode 
[33mhouston-service_1  |[0m WHERE bgproutingmode.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,759 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,761 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [13] [DEBUG] DELETE /api/keyValues/bgproutingmode/2
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,771 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,773 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode 
[33mhouston-service_1  |[0m WHERE bgproutingmode.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,773 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,775 INFO sqlalchemy.engine.base.Engine DELETE FROM bgproutingmode WHERE bgproutingmode.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,775 INFO sqlalchemy.engine.base.Engine {'id': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,777 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [14] [DEBUG] GET /api/keyValues/bgproutingmode/2
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,791 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,792 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode 
[33mhouston-service_1  |[0m WHERE bgproutingmode.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,792 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,794 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [10] [DEBUG] GET /api/keyValues/bgproutingmode/
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,804 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,805 INFO sqlalchemy.engine.base.Engine SELECT bgproutingmode.id AS bgproutingmode_id, bgproutingmode.`key` AS bgproutingmode_key, bgproutingmode.value AS bgproutingmode_value 
[33mhouston-service_1  |[0m FROM bgproutingmode ORDER BY bgproutingmode.`key`
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,805 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,807 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [10] [DEBUG] POST /api/businessunit/
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,821 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,823 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.name = %(name_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,823 INFO sqlalchemy.engine.base.Engine {'name_1': 'BU-Test'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,827 INFO sqlalchemy.engine.base.Engine INSERT INTO businessunit (name, description, `isActive`) VALUES (%(name)s, %(description)s, %(isActive)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,827 INFO sqlalchemy.engine.base.Engine {'name': 'BU-Test', 'description': 'Test BU desc', 'isActive': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,829 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,832 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,834 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,834 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,838 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,849 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [11] [DEBUG] GET /api/businessunit/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,850 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,851 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,852 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [11] [DEBUG] PUT /api/businessunit/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,862 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,863 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,864 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,866 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,866 INFO sqlalchemy.engine.base.Engine {'id_1': 1, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,869 INFO sqlalchemy.engine.base.Engine UPDATE businessunit SET `isActive`=%(isActive)s WHERE businessunit.id = %(businessunit_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,869 INFO sqlalchemy.engine.base.Engine {'isActive': 0, 'businessunit_id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,870 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,874 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,875 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,875 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,877 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [11] [DEBUG] GET /api/businessunit/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,888 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,889 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,890 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,891 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [14] [DEBUG] DELETE /api/businessunit/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,904 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,905 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,905 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,908 INFO sqlalchemy.engine.base.Engine DELETE FROM businessunit WHERE businessunit.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,908 INFO sqlalchemy.engine.base.Engine {'id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,909 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [13] [DEBUG] GET /api/businessunit/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,925 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,926 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,927 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,928 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [14] [DEBUG] DELETE /api/businessunit/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,939 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,942 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit 
[33mhouston-service_1  |[0m WHERE businessunit.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,942 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,944 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [14] [DEBUG] GET /api/businessunits/
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,954 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,956 INFO sqlalchemy.engine.base.Engine SELECT businessunit.id AS businessunit_id, businessunit.name AS businessunit_name, businessunit.description AS businessunit_description, businessunit.`isActive` AS `businessunit_isActive` 
[33mhouston-service_1  |[0m FROM businessunit ORDER BY businessunit.id
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,956 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,958 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [14] [DEBUG] POST /api/keyValues/cd/
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,973 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,975 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,975 INFO sqlalchemy.engine.base.Engine {'key_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,978 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,978 INFO sqlalchemy.engine.base.Engine {'key_1': 'test', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,980 INFO sqlalchemy.engine.base.Engine INSERT INTO cd (`key`, value) VALUES (%(key)s, %(value)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,980 INFO sqlalchemy.engine.base.Engine {'key': 'test', 'value': 'test-post-value'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,981 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,985 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,986 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,986 INFO sqlalchemy.engine.base.Engine {'param_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:56,989 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:56 +0000] [12] [DEBUG] GET /api/keyValues/cd/test
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,000 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,001 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,001 INFO sqlalchemy.engine.base.Engine {'key_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,003 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [12] [DEBUG] PUT /api/keyValues/cd/test
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,017 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,019 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,019 INFO sqlalchemy.engine.base.Engine {'key_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,023 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,023 INFO sqlalchemy.engine.base.Engine {'key_1': 'test', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,026 INFO sqlalchemy.engine.base.Engine UPDATE cd SET value=%(value)s WHERE cd.`key` = %(cd_key)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,026 INFO sqlalchemy.engine.base.Engine {'value': 'new-test-value', 'cd_key': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,027 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,031 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,032 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,033 INFO sqlalchemy.engine.base.Engine {'param_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,036 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [12] [DEBUG] GET /api/keyValues/cd/test
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,048 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,049 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,049 INFO sqlalchemy.engine.base.Engine {'key_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,050 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [11] [DEBUG] DELETE /api/keyValues/cd/test
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,065 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,067 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,067 INFO sqlalchemy.engine.base.Engine {'key_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,071 INFO sqlalchemy.engine.base.Engine DELETE FROM cd WHERE cd.`key` = %(key)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,071 INFO sqlalchemy.engine.base.Engine {'key': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,073 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [14] [DEBUG] GET /api/keyValues/cd/test
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,095 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,096 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd 
[33mhouston-service_1  |[0m WHERE cd.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,096 INFO sqlalchemy.engine.base.Engine {'key_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,098 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [12] [DEBUG] GET /api/keyValues/cd/
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,113 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,115 INFO sqlalchemy.engine.base.Engine SELECT cd.`key` AS cd_key, cd.value AS cd_value 
[33mhouston-service_1  |[0m FROM cd ORDER BY cd.`key`
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,115 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,117 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [10] [DEBUG] POST /api/keyValues/ci/
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,133 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,135 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,135 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,140 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,140 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,144 INFO sqlalchemy.engine.base.Engine INSERT INTO ci (`key`, value) VALUES (%(key)s, %(value)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,144 INFO sqlalchemy.engine.base.Engine {'key': 'test-ci', 'value': 'test-post-value'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,146 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,149 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,150 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,150 INFO sqlalchemy.engine.base.Engine {'param_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,152 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [11] [DEBUG] GET /api/keyValues/ci/test-ci
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,167 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,170 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,170 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,172 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [14] [DEBUG] PUT /api/keyValues/ci/test-ci
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,190 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,192 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,192 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,195 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,196 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,198 INFO sqlalchemy.engine.base.Engine UPDATE ci SET value=%(value)s WHERE ci.`key` = %(ci_key)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,198 INFO sqlalchemy.engine.base.Engine {'value': 'new-test-value', 'ci_key': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,200 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,205 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,207 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,207 INFO sqlalchemy.engine.base.Engine {'param_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,210 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [12] [DEBUG] GET /api/keyValues/ci/test-ci
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,222 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,223 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,223 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,225 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [13] [DEBUG] DELETE /api/keyValues/ci/test-ci
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,244 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,245 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,246 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,248 INFO sqlalchemy.engine.base.Engine DELETE FROM ci WHERE ci.`key` = %(key)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,248 INFO sqlalchemy.engine.base.Engine {'key': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,251 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [14] [DEBUG] DELETE /api/keyValues/ci/test-ci
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,270 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,271 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,272 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,273 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [10] [DEBUG] GET /api/keyValues/ci/test-ci
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,285 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,287 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci 
[33mhouston-service_1  |[0m WHERE ci.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,287 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-ci'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,289 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [10] [DEBUG] GET /api/keyValues/ci/
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,302 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,303 INFO sqlalchemy.engine.base.Engine SELECT ci.`key` AS ci_key, ci.value AS ci_value 
[33mhouston-service_1  |[0m FROM ci ORDER BY ci.`key`
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,303 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,305 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [12] [DEBUG] POST /api/cloudaccount/
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,320 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,322 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,323 INFO sqlalchemy.engine.base.Engine {'id_1': 10}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,327 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,327 INFO sqlalchemy.engine.base.Engine {'id_1': 10, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,330 INFO sqlalchemy.engine.base.Engine INSERT INTO cloudaccount (id, name, `userId`, `isActive`) VALUES (%(id)s, %(name)s, %(userId)s, %(isActive)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,330 INFO sqlalchemy.engine.base.Engine {'id': 10, 'name': 'GCP-Test', 'userId': 1, 'isActive': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,331 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,334 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,336 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,336 INFO sqlalchemy.engine.base.Engine {'param_1': 10}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,338 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [13] [DEBUG] GET /api/cloudaccount/10
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,349 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,350 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,350 INFO sqlalchemy.engine.base.Engine {'id_1': '10'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,352 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [12] [DEBUG] PUT /api/cloudaccount/10
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,364 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,365 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,366 INFO sqlalchemy.engine.base.Engine {'id_1': '10'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,369 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,369 INFO sqlalchemy.engine.base.Engine {'id_1': 10, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,372 INFO sqlalchemy.engine.base.Engine UPDATE cloudaccount SET name=%(name)s, `isActive`=%(isActive)s WHERE cloudaccount.id = %(cloudaccount_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,372 INFO sqlalchemy.engine.base.Engine {'name': 'GCP-Test-Updated', 'isActive': 0, 'cloudaccount_id': 10}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,374 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,377 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,378 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,379 INFO sqlalchemy.engine.base.Engine {'param_1': 10}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,381 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [13] [DEBUG] GET /api/cloudaccount/10
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,392 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,393 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,394 INFO sqlalchemy.engine.base.Engine {'id_1': '10'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,396 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [10] [DEBUG] DELETE /api/cloudaccount/10
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,407 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,409 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,409 INFO sqlalchemy.engine.base.Engine {'id_1': '10'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,413 INFO sqlalchemy.engine.base.Engine DELETE FROM cloudaccount WHERE cloudaccount.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,413 INFO sqlalchemy.engine.base.Engine {'id': 10}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,414 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [10] [DEBUG] GET /api/cloudaccount/10
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,429 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,430 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,430 INFO sqlalchemy.engine.base.Engine {'id_1': '10'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,432 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [12] [DEBUG] DELETE /api/cloudaccount/10
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,443 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,444 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount 
[33mhouston-service_1  |[0m WHERE cloudaccount.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,444 INFO sqlalchemy.engine.base.Engine {'id_1': '10'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,446 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [14] [DEBUG] GET /api/cloudaccounts/
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,458 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,460 INFO sqlalchemy.engine.base.Engine SELECT cloudaccount.id AS cloudaccount_id, cloudaccount.name AS cloudaccount_name, cloudaccount.`userId` AS `cloudaccount_userId`, cloudaccount.`isActive` AS `cloudaccount_isActive` 
[33mhouston-service_1  |[0m FROM cloudaccount ORDER BY cloudaccount.id
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,460 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,462 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [14] [DEBUG] POST /api/keyValues/environment/
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,481 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,482 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,482 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,485 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,485 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,488 INFO sqlalchemy.engine.base.Engine INSERT INTO environment (`key`, value) VALUES (%(key)s, %(value)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,488 INFO sqlalchemy.engine.base.Engine {'key': 'test-env', 'value': 'test-post-value'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,490 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,494 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,495 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,495 INFO sqlalchemy.engine.base.Engine {'param_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,496 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [14] [DEBUG] GET /api/keyValues/environment/test-env
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,507 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,508 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,508 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,509 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [10] [DEBUG] PUT /api/keyValues/environment/test-env
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,523 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,524 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,524 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,527 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,527 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,529 INFO sqlalchemy.engine.base.Engine UPDATE environment SET value=%(value)s WHERE environment.`key` = %(environment_key)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,529 INFO sqlalchemy.engine.base.Engine {'value': 'new-test-value', 'environment_key': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,531 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,534 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,537 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,538 INFO sqlalchemy.engine.base.Engine {'param_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,541 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [10] [DEBUG] GET /api/keyValues/environment/test-env
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,552 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,553 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,553 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,554 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [11] [DEBUG] DELETE /api/keyValues/environment/test-env
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,568 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,571 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,571 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,574 INFO sqlalchemy.engine.base.Engine DELETE FROM environment WHERE environment.`key` = %(key)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,574 INFO sqlalchemy.engine.base.Engine {'key': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,576 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [11] [DEBUG] DELETE /api/keyValues/environment/test-env
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,593 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,595 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,595 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,596 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [11] [DEBUG] GET /api/keyValues/environment/test-env
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,609 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,611 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment 
[33mhouston-service_1  |[0m WHERE environment.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,611 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-env'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,612 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [10] [DEBUG] GET /api/keyValues/environment/
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,626 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,627 INFO sqlalchemy.engine.base.Engine SELECT environment.`key` AS environment_key, environment.value AS environment_value 
[33mhouston-service_1  |[0m FROM environment ORDER BY environment.`key`
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,627 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,629 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [12] [DEBUG] GET /api/health
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [10] [DEBUG] POST /api/landingzoneaction/
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,656 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,659 INFO sqlalchemy.engine.base.Engine INSERT INTO landingzoneaction (title, `categoryName`, `categoryClass`, `completionRate`, locked, `routerLink`) VALUES (%(title)s, %(categoryName)s, %(categoryClass)s, %(completionRate)s, %(locked)s, %(routerLink)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,659 INFO sqlalchemy.engine.base.Engine {'title': 'Test Landing Zone', 'categoryName': 'testCategory', 'categoryClass': 'test-folder-structure', 'completionRate': 100, 'locked': 0, 'routerLink': 'testLink'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,661 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,665 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,666 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,667 INFO sqlalchemy.engine.base.Engine {'param_1': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,669 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [10] [DEBUG] GET /api/landingzoneaction/13
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,682 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,683 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,683 INFO sqlalchemy.engine.base.Engine {'id_1': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,685 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [10] [DEBUG] PUT /api/landingzoneaction/13
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,694 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,695 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,695 INFO sqlalchemy.engine.base.Engine {'id_1': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,698 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,698 INFO sqlalchemy.engine.base.Engine {'id_1': 13, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,700 INFO sqlalchemy.engine.base.Engine UPDATE landingzoneaction SET locked=%(locked)s WHERE landingzoneaction.id = %(landingzoneaction_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,700 INFO sqlalchemy.engine.base.Engine {'locked': 1, 'landingzoneaction_id': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,701 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,704 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,705 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,705 INFO sqlalchemy.engine.base.Engine {'param_1': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,707 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [13] [DEBUG] GET /api/landingzoneaction/13
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,719 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,721 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,721 INFO sqlalchemy.engine.base.Engine {'id_1': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,723 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [11] [DEBUG] DELETE /api/landingzoneaction/13
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,734 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,736 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,736 INFO sqlalchemy.engine.base.Engine {'id_1': '13'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,739 INFO sqlalchemy.engine.base.Engine DELETE FROM landingzoneaction WHERE landingzoneaction.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,739 INFO sqlalchemy.engine.base.Engine {'id': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,740 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [14] [DEBUG] GET /api/landingzoneaction/13
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,753 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,755 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,755 INFO sqlalchemy.engine.base.Engine {'id_1': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,757 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [13] [DEBUG] DELETE /api/landingzoneaction/13
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,768 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,769 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction 
[33mhouston-service_1  |[0m WHERE landingzoneaction.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,769 INFO sqlalchemy.engine.base.Engine {'id_1': '13'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,770 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [10] [DEBUG] GET /api/landingzoneactions/
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,780 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,781 INFO sqlalchemy.engine.base.Engine SELECT landingzoneaction.id AS landingzoneaction_id, landingzoneaction.title AS landingzoneaction_title, landingzoneaction.`categoryName` AS `landingzoneaction_categoryName`, landingzoneaction.`categoryClass` AS `landingzoneaction_categoryClass`, landingzoneaction.`completionRate` AS `landingzoneaction_completionRate`, landingzoneaction.locked AS landingzoneaction_locked, landingzoneaction.`routerLink` AS `landingzoneaction_routerLink` 
[33mhouston-service_1  |[0m FROM landingzoneaction
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,781 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,785 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [12] [DEBUG] POST /api/landingzoneprogressitem/
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,801 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,803 INFO sqlalchemy.engine.base.Engine INSERT INTO landingzoneprogressitem (label, completed) VALUES (%(label)s, %(completed)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,803 INFO sqlalchemy.engine.base.Engine {'label': 'Testing-progress-item-post', 'completed': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,806 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,810 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,811 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,811 INFO sqlalchemy.engine.base.Engine {'param_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,813 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [12] [DEBUG] GET /api/landingzoneprogressitem/8
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,825 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,826 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,826 INFO sqlalchemy.engine.base.Engine {'id_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,827 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [11] [DEBUG] PUT /api/landingzoneprogressitem/8
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,837 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,838 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,839 INFO sqlalchemy.engine.base.Engine {'id_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,841 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,841 INFO sqlalchemy.engine.base.Engine {'id_1': 8, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,843 INFO sqlalchemy.engine.base.Engine UPDATE landingzoneprogressitem SET label=%(label)s, completed=%(completed)s WHERE landingzoneprogressitem.id = %(landingzoneprogressitem_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,843 INFO sqlalchemy.engine.base.Engine {'label': 'Testing-new-progress-item-post', 'completed': 0, 'landingzoneprogressitem_id': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,844 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,847 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,848 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,848 INFO sqlalchemy.engine.base.Engine {'param_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,850 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [13] [DEBUG] GET /api/landingzoneprogressitem/8
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,860 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,862 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,862 INFO sqlalchemy.engine.base.Engine {'id_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,863 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [10] [DEBUG] DELETE /api/landingzoneprogressitem/8
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,874 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,876 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,876 INFO sqlalchemy.engine.base.Engine {'id_1': '8'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,879 INFO sqlalchemy.engine.base.Engine DELETE FROM landingzoneprogressitem WHERE landingzoneprogressitem.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,879 INFO sqlalchemy.engine.base.Engine {'id': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,881 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [14] [DEBUG] GET /api/landingzoneprogressitem/8
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,895 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,896 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,896 INFO sqlalchemy.engine.base.Engine {'id_1': 8}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,898 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [13] [DEBUG] DELETE /api/landingzoneprogressitem/8
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,908 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,910 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem 
[33mhouston-service_1  |[0m WHERE landingzoneprogressitem.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,910 INFO sqlalchemy.engine.base.Engine {'id_1': '8'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,911 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [14] [DEBUG] GET /api/landingzoneprogressitems/
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,922 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,923 INFO sqlalchemy.engine.base.Engine SELECT landingzoneprogressitem.id AS landingzoneprogressitem_id, landingzoneprogressitem.label AS landingzoneprogressitem_label, landingzoneprogressitem.completed AS landingzoneprogressitem_completed 
[33mhouston-service_1  |[0m FROM landingzoneprogressitem
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,923 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,925 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [14] [DEBUG] POST /api/landingzonewan/
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,942 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,945 INFO sqlalchemy.engine.base.Engine INSERT INTO landingzonewan (`googleSession__primaryGcpVpcSubnet`, `googleSession__primaryRegion`, `googleSession__primarySubnetName`, `googleSession__secondaryGcpVpcSubnet`, `googleSession__secondaryRegion`, `googleSession__secondarySubnetName`, `onPremiseSession__primaryBgpPeer`, `onPremiseSession__primaryPeerIp`, `onPremiseSession__primaryPeerIpSubnet`, `onPremiseSession__primarySharedSecret`, `onPremiseSession__primaryVpnTunnel`, `onPremiseSession__secondaryBgpPeer`, `onPremiseSession__secondaryPeerIp`, `onPremiseSession__secondaryPeerIpSubnet`, `onPremiseSession__secondarySharedSecret`, `onPremiseSession__secondaryVpnTunnel`, `onPremiseSession__vendor`, `vpn__bgpInterfaceNetLength`, `vpn__bgpRoutingMode`, `vpn__cloudRouterName`, vpn__description, `vpn__externalVpnGateway`, `vpn__googleASN`, `vpn__haVpnGateway`, `vpn__peerASN`, `vpn__projectName`, `vpn__subnetMode`, `vpn__vpcName`) VALUES (%(googleSession__primaryGcpVpcSubnet)s, %(googleSession__primaryRegion)s, %(googleSession__primarySubnetName)s, %(googleSession__secondaryGcpVpcSubnet)s, %(googleSession__secondaryRegion)s, %(googleSession__secondarySubnetName)s, %(onPremiseSession__primaryBgpPeer)s, %(onPremiseSession__primaryPeerIp)s, %(onPremiseSession__primaryPeerIpSubnet)s, %(onPremiseSession__primarySharedSecret)s, %(onPremiseSession__primaryVpnTunnel)s, %(onPremiseSession__secondaryBgpPeer)s, %(onPremiseSession__secondaryPeerIp)s, %(onPremiseSession__secondaryPeerIpSubnet)s, %(onPremiseSession__secondarySharedSecret)s, %(onPremiseSession__secondaryVpnTunnel)s, %(onPremiseSession__vendor)s, %(vpn__bgpInterfaceNetLength)s, %(vpn__bgpRoutingMode)s, %(vpn__cloudRouterName)s, %(vpn__description)s, %(vpn__externalVpnGateway)s, %(vpn__googleASN)s, %(vpn__haVpnGateway)s, %(vpn__peerASN)s, %(vpn__projectName)s, %(vpn__subnetMode)s, %(vpn__vpcName)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,945 INFO sqlalchemy.engine.base.Engine {'googleSession__primaryGcpVpcSubnet': 'test-post', 'googleSession__primaryRegion': 'test-post', 'googleSession__primarySubnetName': 'test-post', 'googleSession__secondaryGcpVpcSubnet': 'test-post', 'googleSession__secondaryRegion': 'test-post', 'googleSession__secondarySubnetName': 'test-post', 'onPremiseSession__primaryBgpPeer': 'test-post', 'onPremiseSession__primaryPeerIp': 'test-post', 'onPremiseSession__primaryPeerIpSubnet': 'test-post', 'onPremiseSession__primarySharedSecret': 'test-post', 'onPremiseSession__primaryVpnTunnel': 'test-post', 'onPremiseSession__secondaryBgpPeer': 'test-post', 'onPremiseSession__secondaryPeerIp': 'test-post', 'onPremiseSession__secondaryPeerIpSubnet': 'test-post', 'onPremiseSession__secondarySharedSecret': 'test-post', 'onPremiseSession__secondaryVpnTunnel': 'test-post', 'onPremiseSession__vendor': 'test-post', 'vpn__bgpInterfaceNetLength': 'test-post', 'vpn__bgpRoutingMode': 'test-post', 'vpn__cloudRouterName': 'test-post', 'vpn__description': 'test-post', 'vpn__externalVpnGateway': 'test-post', 'vpn__googleASN': 0, 'vpn__haVpnGateway': 'test-post', 'vpn__peerASN': 0, 'vpn__projectName': 'test-post', 'vpn__subnetMode': 'test-post', 'vpn__vpcName': 'test-post'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,947 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,951 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,954 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,955 INFO sqlalchemy.engine.base.Engine {'param_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,957 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [14] [DEBUG] GET /api/landingzonewan/3
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,967 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,968 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,968 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,974 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:57 +0000] [13] [DEBUG] PUT /api/landingzonewan/3
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,987 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,991 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,991 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,996 INFO sqlalchemy.engine.base.Engine UPDATE landingzonewan SET `googleSession__primaryGcpVpcSubnet`=%(googleSession__primaryGcpVpcSubnet)s, `googleSession__primaryRegion`=%(googleSession__primaryRegion)s, `googleSession__primarySubnetName`=%(googleSession__primarySubnetName)s, `googleSession__secondaryGcpVpcSubnet`=%(googleSession__secondaryGcpVpcSubnet)s, `googleSession__secondaryRegion`=%(googleSession__secondaryRegion)s, `googleSession__secondarySubnetName`=%(googleSession__secondarySubnetName)s, `onPremiseSession__primaryBgpPeer`=%(onPremiseSession__primaryBgpPeer)s, `onPremiseSession__primaryPeerIp`=%(onPremiseSession__primaryPeerIp)s, `onPremiseSession__primaryPeerIpSubnet`=%(onPremiseSession__primaryPeerIpSubnet)s, `onPremiseSession__primarySharedSecret`=%(onPremiseSession__primarySharedSecret)s, `onPremiseSession__primaryVpnTunnel`=%(onPremiseSession__primaryVpnTunnel)s, `onPremiseSession__secondaryBgpPeer`=%(onPremiseSession__secondaryBgpPeer)s, `onPremiseSession__secondaryPeerIp`=%(onPremiseSession__secondaryPeerIp)s, `onPremiseSession__secondaryPeerIpSubnet`=%(onPremiseSession__secondaryPeerIpSubnet)s, `onPremiseSession__secondarySharedSecret`=%(onPremiseSession__secondarySharedSecret)s, `onPremiseSession__secondaryVpnTunnel`=%(onPremiseSession__secondaryVpnTunnel)s, `onPremiseSession__vendor`=%(onPremiseSession__vendor)s, `vpn__bgpInterfaceNetLength`=%(vpn__bgpInterfaceNetLength)s, `vpn__bgpRoutingMode`=%(vpn__bgpRoutingMode)s, `vpn__cloudRouterName`=%(vpn__cloudRouterName)s, vpn__description=%(vpn__description)s, `vpn__externalVpnGateway`=%(vpn__externalVpnGateway)s, `vpn__haVpnGateway`=%(vpn__haVpnGateway)s, `vpn__projectName`=%(vpn__projectName)s, `vpn__subnetMode`=%(vpn__subnetMode)s, `vpn__vpcName`=%(vpn__vpcName)s WHERE landingzonewan.id = %(landingzonewan_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,996 INFO sqlalchemy.engine.base.Engine {'googleSession__primaryGcpVpcSubnet': 'new-test-put', 'googleSession__primaryRegion': 'test-put', 'googleSession__primarySubnetName': 'test-put', 'googleSession__secondaryGcpVpcSubnet': 'test-put', 'googleSession__secondaryRegion': 'test-put', 'googleSession__secondarySubnetName': 'test-put', 'onPremiseSession__primaryBgpPeer': 'new-test-put', 'onPremiseSession__primaryPeerIp': 'test-put', 'onPremiseSession__primaryPeerIpSubnet': 'test-put', 'onPremiseSession__primarySharedSecret': 'test-put', 'onPremiseSession__primaryVpnTunnel': 'test-put', 'onPremiseSession__secondaryBgpPeer': 'test-put', 'onPremiseSession__secondaryPeerIp': 'test-put', 'onPremiseSession__secondaryPeerIpSubnet': 'test-put', 'onPremiseSession__secondarySharedSecret': 'test-put', 'onPremiseSession__secondaryVpnTunnel': 'test-put', 'onPremiseSession__vendor': 'test-put', 'vpn__bgpInterfaceNetLength': 'new-test-put', 'vpn__bgpRoutingMode': 'test-put', 'vpn__cloudRouterName': 'test-put', 'vpn__description': 'test-put', 'vpn__externalVpnGateway': 'test-put', 'vpn__haVpnGateway': 'test-put', 'vpn__projectName': 'test-put', 'vpn__subnetMode': 'test-put', 'vpn__vpcName': 'test-put', 'landingzonewan_id': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:57,997 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,000 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,002 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,002 INFO sqlalchemy.engine.base.Engine {'param_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,005 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [10] [DEBUG] GET /api/landingzonewan/3
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,016 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,020 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,020 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,026 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [11] [DEBUG] DELETE /api/landingzonewan/3
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,039 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,042 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,042 INFO sqlalchemy.engine.base.Engine {'id_1': '3'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,044 INFO sqlalchemy.engine.base.Engine DELETE FROM landingzonewan WHERE landingzonewan.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,045 INFO sqlalchemy.engine.base.Engine {'id': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,046 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [11] [DEBUG] GET /api/landingzonewan/3
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,060 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,062 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,062 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,064 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [11] [DEBUG] DELETE /api/landingzonewan/3
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,075 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,076 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan 
[33mhouston-service_1  |[0m WHERE landingzonewan.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,077 INFO sqlalchemy.engine.base.Engine {'id_1': '3'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,078 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [11] [DEBUG] GET /api/landingzonewans/
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,089 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,090 INFO sqlalchemy.engine.base.Engine SELECT landingzonewan.id AS landingzonewan_id, landingzonewan.`googleSession__primaryGcpVpcSubnet` AS `landingzonewan_googleSession__primaryGcpVpcSubnet`, landingzonewan.`googleSession__primaryRegion` AS `landingzonewan_googleSession__primaryRegion`, landingzonewan.`googleSession__primarySubnetName` AS `landingzonewan_googleSession__primarySubnetName`, landingzonewan.`googleSession__secondaryGcpVpcSubnet` AS `landingzonewan_googleSession__secondaryGcpVpcSubnet`, landingzonewan.`googleSession__secondaryRegion` AS `landingzonewan_googleSession__secondaryRegion`, landingzonewan.`googleSession__secondarySubnetName` AS `landingzonewan_googleSession__secondarySubnetName`, landingzonewan.`onPremiseSession__primaryBgpPeer` AS `landingzonewan_onPremiseSession__primaryBgpPeer`, landingzonewan.`onPremiseSession__primaryPeerIp` AS `landingzonewan_onPremiseSession__primaryPeerIp`, landingzonewan.`onPremiseSession__primaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__primaryPeerIpSubnet`, landingzonewan.`onPremiseSession__primarySharedSecret` AS `landingzonewan_onPremiseSession__primarySharedSecret`, landingzonewan.`onPremiseSession__primaryVpnTunnel` AS `landingzonewan_onPremiseSession__primaryVpnTunnel`, landingzonewan.`onPremiseSession__secondaryBgpPeer` AS `landingzonewan_onPremiseSession__secondaryBgpPeer`, landingzonewan.`onPremiseSession__secondaryPeerIp` AS `landingzonewan_onPremiseSession__secondaryPeerIp`, landingzonewan.`onPremiseSession__secondaryPeerIpSubnet` AS `landingzonewan_onPremiseSession__secondaryPeerIpSubnet`, landingzonewan.`onPremiseSession__secondarySharedSecret` AS `landingzonewan_onPremiseSession__secondarySharedSecret`, landingzonewan.`onPremiseSession__secondaryVpnTunnel` AS `landingzonewan_onPremiseSession__secondaryVpnTunnel`, landingzonewan.`onPremiseSession__vendor` AS `landingzonewan_onPremiseSession__vendor`, landingzonewan.`vpn__bgpInterfaceNetLength` AS `landingzonewan_vpn__bgpInterfaceNetLength`, landingzonewan.`vpn__bgpRoutingMode` AS `landingzonewan_vpn__bgpRoutingMode`, landingzonewan.`vpn__cloudRouterName` AS `landingzonewan_vpn__cloudRouterName`, landingzonewan.vpn__description AS landingzonewan_vpn__description, landingzonewan.`vpn__externalVpnGateway` AS `landingzonewan_vpn__externalVpnGateway`, landingzonewan.`vpn__googleASN` AS `landingzonewan_vpn__googleASN`, landingzonewan.`vpn__haVpnGateway` AS `landingzonewan_vpn__haVpnGateway`, landingzonewan.`vpn__peerASN` AS `landingzonewan_vpn__peerASN`, landingzonewan.`vpn__projectName` AS `landingzonewan_vpn__projectName`, landingzonewan.`vpn__subnetMode` AS `landingzonewan_vpn__subnetMode`, landingzonewan.`vpn__vpcName` AS `landingzonewan_vpn__vpcName` 
[33mhouston-service_1  |[0m FROM landingzonewan
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,090 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,097 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [12] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m http://localhost:3000/api/login validation error: '0' is not of type 'integer' - 'id'
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [10] [DEBUG] POST /api/solution/
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,180 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,182 INFO sqlalchemy.engine.base.Engine INSERT INTO solution (name, description, `businessUnit`, `costCentre`, ci, cd, `sourceControl`, environments, active, favourite, teams, `lastUpdated`, deployed, `deploymentState`, `statusId`, `statusCode`, `statusMessage`, `taskId`) VALUES (%(name)s, %(description)s, %(businessUnit)s, %(costCentre)s, %(ci)s, %(cd)s, %(sourceControl)s, %(environments)s, %(active)s, %(favourite)s, %(teams)s, %(lastUpdated)s, %(deployed)s, %(deploymentState)s, %(statusId)s, %(statusCode)s, %(statusMessage)s, %(taskId)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,182 INFO sqlalchemy.engine.base.Engine {'name': 'test', 'description': 'test', 'businessUnit': 'test', 'costCentre': 'test', 'ci': 'test', 'cd': 'test', 'sourceControl': 'test', 'environments': '["test"]', 'active': 1, 'favourite': 1, 'teams': 0, 'lastUpdated': '2020-05-05 09:57:58', 'deployed': 0, 'deploymentState': '', 'statusId': 0, 'statusCode': '', 'statusMessage': '', 'taskId': None}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,184 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,194 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,196 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,196 INFO sqlalchemy.engine.base.Engine {'param_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,200 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE %(param_1)s = application.`solutionId`
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,200 INFO sqlalchemy.engine.base.Engine {'param_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,202 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [10] [DEBUG] GET /api/solution/18
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,214 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,215 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,215 INFO sqlalchemy.engine.base.Engine {'id_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,218 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,218 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,220 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [14] [DEBUG] PUT /api/solution/18
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,231 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,234 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,234 INFO sqlalchemy.engine.base.Engine {'id_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,238 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,239 INFO sqlalchemy.engine.base.Engine {'id_1': 18, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,242 INFO sqlalchemy.engine.base.Engine UPDATE solution SET name=%(name)s, description=%(description)s, `businessUnit`=%(businessUnit)s, `costCentre`=%(costCentre)s, ci=%(ci)s, cd=%(cd)s, `sourceControl`=%(sourceControl)s, environments=%(environments)s, teams=%(teams)s, `lastUpdated`=%(lastUpdated)s WHERE solution.id = %(solution_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,242 INFO sqlalchemy.engine.base.Engine {'name': 'test put', 'description': 'test put', 'businessUnit': 'test put', 'costCentre': 'test put', 'ci': 'test put', 'cd': 'test put', 'sourceControl': 'test put', 'environments': '["test put 1", "test put 2", "test put 3"]', 'teams': 10, 'lastUpdated': '2020-05-05 09:57:58', 'solution_id': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,243 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [10] [DEBUG] GET /api/solution/18
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,257 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,259 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,259 INFO sqlalchemy.engine.base.Engine {'id_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,262 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,262 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,264 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [12] [DEBUG] DELETE /api/solution/18
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,276 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,278 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,278 INFO sqlalchemy.engine.base.Engine {'id_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,281 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE %(param_1)s = application.`solutionId`
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,282 INFO sqlalchemy.engine.base.Engine {'param_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,283 INFO sqlalchemy.engine.base.Engine DELETE FROM solution WHERE solution.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,284 INFO sqlalchemy.engine.base.Engine {'id': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,284 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [14] [DEBUG] GET /api/solution/18
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,297 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,299 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,299 INFO sqlalchemy.engine.base.Engine {'id_1': 18}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,301 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [14] [DEBUG] GET /api/solutions/
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,311 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,312 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution ORDER BY solution.id
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,312 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,316 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,316 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,319 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,319 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,322 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,322 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,325 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,326 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,328 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,328 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,331 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,332 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,335 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,335 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,338 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,338 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,340 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,340 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,343 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,343 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 11}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,345 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,345 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 12}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,347 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,347 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 13}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,349 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,349 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 14}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,350 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,351 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 15}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,352 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,353 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 16}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,354 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,355 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 17}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,372 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [12] [DEBUG] POST /api/solutiondeployment/
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,389 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,390 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,390 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,393 INFO sqlalchemy.engine.base.Engine SELECT application.id AS application_id, application.`solutionId` AS `application_solutionId`, application.`activatorId` AS `application_activatorId`, application.name AS application_name, application.env AS application_env, application.status AS application_status, application.description AS application_description, application.`lastUpdated` AS `application_lastUpdated`, application.resources AS application_resources 
[33mhouston-service_1  |[0m FROM application 
[33mhouston-service_1  |[0m WHERE application.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,393 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,396 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,396 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,399 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,399 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,402 INFO sqlalchemy.engine.base.Engine SELECT activator.id AS activator_id, activator.name AS activator_name, activator.type AS activator_type, activator.available AS activator_available, activator.sensitivity AS activator_sensitivity, activator.category AS activator_category, activator.envs AS activator_envs, activator.platforms AS activator_platforms, activator.`lastUpdated` AS `activator_lastUpdated`, activator.`userCapacity` AS `activator_userCapacity`, activator.`serverCapacity` AS `activator_serverCapacity`, activator.regions AS activator_regions, activator.hosting AS activator_hosting, activator.`apiManagement` AS `activator_apiManagement`, activator.ci AS activator_ci, activator.cd AS activator_cd, activator.`sourceControl` AS `activator_sourceControl`, activator.`businessUnit` AS `activator_businessUnit`, activator.`technologyOwner` AS `activator_technologyOwner`, activator.`technologyOwnerEmail` AS `activator_technologyOwnerEmail`, activator.billing AS activator_billing, activator.activator AS activator_activator, activator.status AS activator_status, activator.description AS activator_description, activator.`accessRequestedBy` AS `activator_accessRequestedBy`, activator.source AS activator_source, activator.`activatorLink` AS `activator_activatorLink` 
[33mhouston-service_1  |[0m FROM activator 
[33mhouston-service_1  |[0m WHERE activator.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,402 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[36mgcp-dac_1          |[0m [2020-05-05 09:57:58 +0000] [11] [DEBUG] POST /api/solution/
[36mgcp-dac_1          |[0m basedir: /srv
[36mgcp-dac_1          |[0m DEBUG: True
[36mgcp-dac_1          |[0m {'active': True,
[36mgcp-dac_1          |[0m  'applications': [{'activator': {'accessRequestedBy': None,
[36mgcp-dac_1          |[0m                                  'activator': 'Single Region Kubernetes',
[36mgcp-dac_1          |[0m                                  'activatorLink': '',
[36mgcp-dac_1          |[0m                                  'apiManagement': ['ApiGee'],
[36mgcp-dac_1          |[0m                                  'available': True,
[36mgcp-dac_1          |[0m                                  'billing': 'Monthly: Eagle tier 3',
[36mgcp-dac_1          |[0m                                  'businessUnit': 'FICC Business Unit',
[36mgcp-dac_1          |[0m                                  'category': 'Web application',
[36mgcp-dac_1          |[0m                                  'cd': ['Codeship', 'Option'],
[36mgcp-dac_1          |[0m                                  'ci': ['Jenkins', 'Travis'],
[36mgcp-dac_1          |[0m                                  'description': 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy. '
[36mgcp-dac_1          |[0m                                                 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy. '
[36mgcp-dac_1          |[0m                                                 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy',
[36mgcp-dac_1          |[0m                                  'envs': ['POC', 'DEV'],
[36mgcp-dac_1          |[0m                                  'hosting': ['Appengine'],
[36mgcp-dac_1          |[0m                                  'id': 1,
[36mgcp-dac_1          |[0m                                  'lastUpdated': '2020-04-16 17:59:21',
[36mgcp-dac_1          |[0m                                  'name': 'CMS Web App',
[36mgcp-dac_1          |[0m                                  'platforms': ['GCP'],
[36mgcp-dac_1          |[0m                                  'regions': ['UK', 'DB'],
[36mgcp-dac_1          |[0m                                  'sensitivity': 'Public',
[36mgcp-dac_1          |[0m                                  'serverCapacity': 1200,
[36mgcp-dac_1          |[0m                                  'source': 'open',
[36mgcp-dac_1          |[0m                                  'sourceControl': ['JIRA', 'Option'],
[36mgcp-dac_1          |[0m                                  'status': 'Available',
[36mgcp-dac_1          |[0m                                  'technologyOwner': 'Sanjeev Gupta',
[36mgcp-dac_1          |[0m                                  'technologyOwnerEmail': 's.gupta@company.name',
[36mgcp-dac_1          |[0m                                  'type': 'Tier 3',
[36mgcp-dac_1          |[0m                                  'userCapacity': 1000},
[36mgcp-dac_1          |[0m                    'description': 'Lorem ipsum dolor sit amet, consectetur '
[36mgcp-dac_1          |[0m                                   'adipiscing elit, sed do eiusmod tempor '
[36mgcp-dac_1          |[0m                                   'incididunt ut labore et do',
[36mgcp-dac_1          |[0m                    'env': 'DEV',
[36mgcp-dac_1          |[0m                    'id': 1,
[36mgcp-dac_1          |[0m                    'lastUpdated': '2020-04-16 17:58:21',
[36mgcp-dac_1          |[0m                    'name': 'Placeholder',
[36mgcp-dac_1          |[0m                    'resources': [{'name': 'GKE Cluster'},
[36mgcp-dac_1          |[0m                                  {'name': 'Cloud SQL'}],
[36mgcp-dac_1          |[0m                    'status': 'Active'},
[36mgcp-dac_1          |[0m                   {'activator': {'accessRequestedBy': None,
[36mgcp-dac_1          |[0m                                  'activator': 'Multi Region Kubernetes',
[36mgcp-dac_1          |[0m                                  'activatorLink': '',
[36mgcp-dac_1          |[0m                                  'apiManagement': ['ApiGee'],
[36mgcp-dac_1          |[0m                                  'available': True,
[36mgcp-dac_1          |[0m                                  'billing': 'Monthly: Eagle tier 1',
[36mgcp-dac_1          |[0m                                  'businessUnit': 'M&A Business Unit',
[36mgcp-dac_1          |[0m                                  'category': 'Micro-services',
[36mgcp-dac_1          |[0m                                  'cd': ['Codeship', 'Option'],
[36mgcp-dac_1          |[0m                                  'ci': ['Jenkins', 'Travis'],
[36mgcp-dac_1          |[0m                                  'description': 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy. '
[36mgcp-dac_1          |[0m                                                 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy. '
[36mgcp-dac_1          |[0m                                                 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy',
[36mgcp-dac_1          |[0m                                  'envs': ['POC', 'AWS', 'Other', 'Fancy'],
[36mgcp-dac_1          |[0m                                  'hosting': ['Appengine'],
[36mgcp-dac_1          |[0m                                  'id': 2,
[36mgcp-dac_1          |[0m                                  'lastUpdated': '2020-01-09 15:59:10',
[36mgcp-dac_1          |[0m                                  'name': 'Multi region kubernetes',
[36mgcp-dac_1          |[0m                                  'platforms': ['GCP'],
[36mgcp-dac_1          |[0m                                  'regions': ['UK', 'DB'],
[36mgcp-dac_1          |[0m                                  'sensitivity': 'Restricted',
[36mgcp-dac_1          |[0m                                  'serverCapacity': 2000,
[36mgcp-dac_1          |[0m                                  'source': 'open',
[36mgcp-dac_1          |[0m                                  'sourceControl': ['JIRA', 'Option'],
[36mgcp-dac_1          |[0m                                  'status': 'Available',
[36mgcp-dac_1          |[0m                                  'technologyOwner': 'Nathanael Stoltenberg',
[36mgcp-dac_1          |[0m                                  'technologyOwnerEmail': 'Nathanael.Stoltenberg@yahoo.com',
[36mgcp-dac_1          |[0m                                  'type': 'Tier 1',
[36mgcp-dac_1          |[0m                                  'userCapacity': 1300},
[36mgcp-dac_1          |[0m                    'description': 'Lorem ipsum dolor sit amet, consectetur '
[36mgcp-dac_1          |[0m                                   'adipiscing elit, sed do eiusmod tempor '
[36mgcp-dac_1          |[0m                                   'incididunt ut labore et do',
[36mgcp-dac_1          |[0m                    'env': 'POC',
[36mgcp-dac_1          |[0m                    'id': 2,
[36mgcp-dac_1          |[0m                    'lastUpdated': '2020-04-02 00:00:00',
[36mgcp-dac_1          |[0m                    'name': 'Other App',
[36mgcp-dac_1          |[0m                    'resources': [{'name': 'GKE Cluster'},
[36mgcp-dac_1          |[0m                                  {'name': 'Cloud SQL'}],
[36mgcp-dac_1          |[0m                    'status': 'Active'},
[36mgcp-dac_1          |[0m                   {'activator': {'accessRequestedBy': None,
[36mgcp-dac_1          |[0m                                  'activator': 'Multi Region Kubernetes',
[36mgcp-dac_1          |[0m                                  'activatorLink': '',
[36mgcp-dac_1          |[0m                                  'apiManagement': ['ApiGee'],
[36mgcp-dac_1          |[0m                                  'available': True,
[36mgcp-dac_1          |[0m                                  'billing': 'Monthly: Eagle tier 1',
[36mgcp-dac_1          |[0m                                  'businessUnit': 'M&A Business Unit',
[36mgcp-dac_1          |[0m                                  'category': 'Micro-services',
[36mgcp-dac_1          |[0m                                  'cd': ['Codeship', 'Option'],
[36mgcp-dac_1          |[0m                                  'ci': ['Jenkins', 'Travis'],
[36mgcp-dac_1          |[0m                                  'description': 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy. '
[36mgcp-dac_1          |[0m                                                 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy. '
[36mgcp-dac_1          |[0m                                                 'Some very long description '
[36mgcp-dac_1          |[0m                                                 'that I did not want to copy',
[36mgcp-dac_1          |[0m                                  'envs': ['POC', 'AWS', 'Other', 'Fancy'],
[36mgcp-dac_1          |[0m                                  'hosting': ['Appengine'],
[36mgcp-dac_1          |[0m                                  'id': 2,
[36mgcp-dac_1          |[0m                                  'lastUpdated': '2020-01-09 15:59:10',
[36mgcp-dac_1          |[0m                                  'name': 'Multi region kubernetes',
[36mgcp-dac_1          |[0m                                  'platforms': ['GCP'],
[36mgcp-dac_1          |[0m                                  'regions': ['UK', 'DB'],
[36mgcp-dac_1          |[0m                                  'sensitivity': 'Restricted',
[36mgcp-dac_1          |[0m                                  'serverCapacity': 2000,
[36mgcp-dac_1          |[0m                                  'source': 'open',
[36mgcp-dac_1          |[0m                                  'sourceControl': ['JIRA', 'Option'],
[36mgcp-dac_1          |[0m                                  'status': 'Available',
[36mgcp-dac_1          |[0m                                  'technologyOwner': 'Nathanael Stoltenberg',
[36mgcp-dac_1          |[0m                                  'technologyOwnerEmail': 'Nathanael.Stoltenberg@yahoo.com',
[36mgcp-dac_1          |[0m                                  'type': 'Tier 1',
[36mgcp-dac_1          |[0m                                  'userCapacity': 1300},
[36mgcp-dac_1          |[0m                    'description': 'Lorem ipsum dolor sit amet, consectetur '
[36mgcp-dac_1          |[0m                                   'adipiscing elit, sed do eiusmod tempor '
[36mgcp-dac_1          |[0m                                   'incididunt ut labore et do',
[36mgcp-dac_1          |[0m                    'env': 'POC',
[36mgcp-dac_1          |[0m                    'id': 6,
[36mgcp-dac_1          |[0m                    'lastUpdated': '2020-04-03 09:23:37',
[36mgcp-dac_1          |[0m                    'name': 'My First App',
[36mgcp-dac_1          |[0m                    'resources': [{'name': 'GKE Cluster'},
[36mgcp-dac_1          |[0m                                  {'name': 'Cloud SQL'}],
[36mgcp-dac_1          |[0m                    'status': 'Active'}],
[36mgcp-dac_1          |[0m  'businessUnit': 'Modern Apps',
[36mgcp-dac_1          |[0m  'cd': 'Spinnaker',
[36mgcp-dac_1          |[0m  'ci': 'Jenkins CI',
[36mgcp-dac_1          |[0m  'costCentre': 'XXX-123-456-YYY',
[36mgcp-dac_1          |[0m  'description': 'Solution for internal users to be able to process settlement '
[36mgcp-dac_1          |[0m                 'for FX transactions',
[36mgcp-dac_1          |[0m  'environments': ['Development'],
[36mgcp-dac_1          |[0m  'favourite': True,
[36mgcp-dac_1          |[0m  'id': 1,
[36mgcp-dac_1          |[0m  'lastUpdated': '2020-04-25 09:09:56',
[36mgcp-dac_1          |[0m  'name': 'Risk Engine',
[36mgcp-dac_1          |[0m  'sourceControl': 'GitHub',
[33mhouston-service_1  |[0m Response from Dac
[33mhouston-service_1  |[0m {'deployed': False,
[33mhouston-service_1  |[0m  'deploymentState': 'In progress',
[33mhouston-service_1  |[0m  'id': 1,
[33mhouston-service_1  |[0m  'statusCode': 'SS',
[33mhouston-service_1  |[0m  'statusId': 0,
[33mhouston-service_1  |[0m  'statusMessage': 'Successful',
[33mhouston-service_1  |[0m  'taskId': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,421 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,422 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,425 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,425 INFO sqlalchemy.engine.base.Engine {'id_1': 1, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,427 INFO sqlalchemy.engine.base.Engine UPDATE solution SET `lastUpdated`=%(lastUpdated)s, deployed=%(deployed)s, `deploymentState`=%(deploymentState)s, `statusId`=%(statusId)s, `statusCode`=%(statusCode)s, `statusMessage`=%(statusMessage)s, `taskId`=%(taskId)s WHERE solution.id = %(solution_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,427 INFO sqlalchemy.engine.base.Engine {'lastUpdated': '2020-05-05 09:57:58', 'deployed': 0, 'deploymentState': 'In progress', 'statusId': 0, 'statusCode': 'SS', 'statusMessage': 'Successful', 'taskId': 1, 'solution_id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,428 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,433 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,434 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,434 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,436 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [13] [DEBUG] GET /api/solutiondeployment/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,449 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,452 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,452 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,454 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [13] [DEBUG] PUT /api/solutiondeployment/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,468 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,469 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,469 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,473 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,473 INFO sqlalchemy.engine.base.Engine {'id_1': 1, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,476 INFO sqlalchemy.engine.base.Engine UPDATE solution SET `lastUpdated`=%(lastUpdated)s, deployed=%(deployed)s, `deploymentState`=%(deploymentState)s, `statusId`=%(statusId)s, `statusCode`=%(statusCode)s, `statusMessage`=%(statusMessage)s, `taskId`=%(taskId)s WHERE solution.id = %(solution_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,476 INFO sqlalchemy.engine.base.Engine {'lastUpdated': '2020-05-05 09:57:58', 'deployed': 1, 'deploymentState': 'Deployed', 'statusId': 1, 'statusCode': '12', 'statusMessage': 'I just deployed again', 'taskId': 2, 'solution_id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,478 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,481 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,482 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,482 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,484 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [12] [DEBUG] GET /api/solutiondeployment/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,495 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,497 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution 
[33mhouston-service_1  |[0m WHERE solution.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,497 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,499 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [14] [DEBUG] GET /api/solutiondeployments/
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,509 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,510 INFO sqlalchemy.engine.base.Engine SELECT solution.id AS solution_id, solution.name AS solution_name, solution.description AS solution_description, solution.`businessUnit` AS `solution_businessUnit`, solution.`costCentre` AS `solution_costCentre`, solution.ci AS solution_ci, solution.cd AS solution_cd, solution.`sourceControl` AS `solution_sourceControl`, solution.environments AS solution_environments, solution.active AS solution_active, solution.favourite AS solution_favourite, solution.teams AS solution_teams, solution.`lastUpdated` AS `solution_lastUpdated`, solution.deployed AS solution_deployed, solution.`deploymentState` AS `solution_deploymentState`, solution.`statusId` AS `solution_statusId`, solution.`statusCode` AS `solution_statusCode`, solution.`statusMessage` AS `solution_statusMessage`, solution.`taskId` AS `solution_taskId` 
[33mhouston-service_1  |[0m FROM solution
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,511 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,513 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [10] [DEBUG] POST /api/solutionresource/
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'key 1', 'solutionId': 1, 'value': 'value 1'}
[33mhouston-service_1  |[0m solutionId: 1 key: key 1
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,527 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,529 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,529 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1, 'key_1': 'key 1'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,532 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,532 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1, 'key_1': 'key 1', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,534 INFO sqlalchemy.engine.base.Engine INSERT INTO solutionresource (`solutionId`, `key`, value) VALUES (%(solutionId)s, %(key)s, %(value)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,534 INFO sqlalchemy.engine.base.Engine {'solutionId': 1, 'key': 'key 1', 'value': 'value 1'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,536 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,545 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,547 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,547 INFO sqlalchemy.engine.base.Engine {'param_1': 1, 'param_2': 'key 1'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'key 1', 'solutionId': 1, 'value': 'value 1'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,549 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [12] [DEBUG] GET /api/solutionresource/1/key%201
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,562 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,564 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,564 INFO sqlalchemy.engine.base.Engine {'key_1': 'key 1', 'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,566 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [11] [DEBUG] GET /api/solutionresources/
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,575 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,576 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource ORDER BY solutionresource.`solutionId`
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,576 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,579 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [14] [DEBUG] DELETE /api/solutionresource/1/key%201
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,591 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,592 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,592 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1, 'key_1': 'key 1'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,594 INFO sqlalchemy.engine.base.Engine DELETE FROM solutionresource WHERE solutionresource.`solutionId` = %(solutionId)s AND solutionresource.`key` = %(key)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,594 INFO sqlalchemy.engine.base.Engine {'solutionId': 1, 'key': 'key 1'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,595 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [11] [DEBUG] GET /api/solutionresource/1/key%201
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,612 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,613 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,613 INFO sqlalchemy.engine.base.Engine {'key_1': 'key 1', 'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,614 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [10] [DEBUG] POST /api/solutionresourcejson/
[33mhouston-service_1  |[0m update_or_create 1
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,628 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,629 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,630 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1}
[33mhouston-service_1  |[0m Update: 1
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,632 INFO sqlalchemy.engine.base.Engine UPDATE solutionresourcejson SET `solutionId`=%(solutionId)s, json=%(json)s WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,632 INFO sqlalchemy.engine.base.Engine {'solutionId': 1, 'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","di ... (3358 characters truncated) ... pace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}', 'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,634 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,639 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,640 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,641 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol22-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol22-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol22-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol22-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 1}
[33mhouston-service_1  |[0m resources_dict
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol22-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol22-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol22-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol22-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 1}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 1, 'value': 'sol22-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 1 key: project_id_dev
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,644 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,644 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1, 'key_1': 'project_id_dev'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,647 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,647 INFO sqlalchemy.engine.base.Engine {'solutionId': 1, 'key': 'project_id_dev', 'value': 'sol22-dev-env-ksjs726s', 'key_1': 'project_id_dev', 'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,648 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,651 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,652 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,652 INFO sqlalchemy.engine.base.Engine {'param_1': 1, 'param_2': 'project_id_dev'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 1, 'value': 'sol22-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 1, 'value': 'sol22-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 1 key: project_id_prod
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,656 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,656 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1, 'key_1': 'project_id_prod'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,658 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,659 INFO sqlalchemy.engine.base.Engine {'solutionId': 1, 'key': 'project_id_prod', 'value': 'sol22-prod-env-ksjs726s', 'key_1': 'project_id_prod', 'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,659 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,662 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,663 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,664 INFO sqlalchemy.engine.base.Engine {'param_1': 1, 'param_2': 'project_id_prod'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 1, 'value': 'sol22-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 1,
[33mhouston-service_1  |[0m  'value': 'sol22-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 1 key: project_id_staging
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,666 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,666 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1, 'key_1': 'project_id_staging'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,668 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,668 INFO sqlalchemy.engine.base.Engine {'solutionId': 1, 'key': 'project_id_staging', 'value': 'sol22-staging-env-ksjs726s', 'key_1': 'project_id_staging', 'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,669 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,673 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,673 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,673 INFO sqlalchemy.engine.base.Engine {'param_1': 1, 'param_2': 'project_id_staging'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 1,
[33mhouston-service_1  |[0m  'value': 'sol22-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 1,
[33mhouston-service_1  |[0m  'value': 'sol22-workspace-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 1 key: project_id_workspace
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,676 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,676 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1, 'key_1': 'project_id_workspace'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,678 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,678 INFO sqlalchemy.engine.base.Engine {'solutionId': 1, 'key': 'project_id_workspace', 'value': 'sol22-workspace-ksjs726s', 'key_1': 'project_id_workspace', 'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,679 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,682 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,683 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,684 INFO sqlalchemy.engine.base.Engine {'param_1': 1, 'param_2': 'project_id_workspace'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 1,
[33mhouston-service_1  |[0m  'value': 'sol22-workspace-ksjs726s'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,685 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [12] [DEBUG] GET /api/solutionresourcejson/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,697 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,698 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,699 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,701 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [14] [DEBUG] GET /api/solutionresourcejsons/
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,711 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,712 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson ORDER BY solutionresourcejson.`solutionId`
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,713 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,715 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [14] [DEBUG] DELETE /api/solutionresourcejson/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,725 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,727 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,727 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,729 INFO sqlalchemy.engine.base.Engine DELETE FROM solutionresourcejson WHERE solutionresourcejson.`solutionId` = %(solutionId)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,729 INFO sqlalchemy.engine.base.Engine {'solutionId': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,730 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [13] [DEBUG] GET /api/solutionresourcejson/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,744 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,745 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,745 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,747 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [14] [DEBUG] POST /api/solutionresourcejson/
[33mhouston-service_1  |[0m update_or_create 2
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,758 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,759 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,759 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 2}
[33mhouston-service_1  |[0m Update: 2
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,762 INFO sqlalchemy.engine.base.Engine UPDATE solutionresourcejson SET `solutionId`=%(solutionId)s, json=%(json)s WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,762 INFO sqlalchemy.engine.base.Engine {'solutionId': 2, 'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","di ... (3358 characters truncated) ... pace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}', 'solutionId_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,763 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,767 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,768 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,769 INFO sqlalchemy.engine.base.Engine {'param_1': 2}
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol22-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol22-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol22-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol22-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 2}
[33mhouston-service_1  |[0m resources_dict
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol22-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol22-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol22-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol22-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 2}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 2, 'value': 'sol22-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 2 key: project_id_dev
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,771 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,771 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 2, 'key_1': 'project_id_dev'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,774 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,774 INFO sqlalchemy.engine.base.Engine {'solutionId': 2, 'key': 'project_id_dev', 'value': 'sol22-dev-env-ksjs726s', 'key_1': 'project_id_dev', 'solutionId_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,775 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,779 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,780 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,780 INFO sqlalchemy.engine.base.Engine {'param_1': 2, 'param_2': 'project_id_dev'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 2, 'value': 'sol22-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 2, 'value': 'sol22-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 2 key: project_id_prod
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,783 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,783 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 2, 'key_1': 'project_id_prod'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,786 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,787 INFO sqlalchemy.engine.base.Engine {'solutionId': 2, 'key': 'project_id_prod', 'value': 'sol22-prod-env-ksjs726s', 'key_1': 'project_id_prod', 'solutionId_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,788 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,791 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,793 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,793 INFO sqlalchemy.engine.base.Engine {'param_1': 2, 'param_2': 'project_id_prod'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 2, 'value': 'sol22-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 2,
[33mhouston-service_1  |[0m  'value': 'sol22-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 2 key: project_id_staging
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,795 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,795 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 2, 'key_1': 'project_id_staging'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,797 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,797 INFO sqlalchemy.engine.base.Engine {'solutionId': 2, 'key': 'project_id_staging', 'value': 'sol22-staging-env-ksjs726s', 'key_1': 'project_id_staging', 'solutionId_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,799 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,803 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,804 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,804 INFO sqlalchemy.engine.base.Engine {'param_1': 2, 'param_2': 'project_id_staging'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 2,
[33mhouston-service_1  |[0m  'value': 'sol22-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 2,
[33mhouston-service_1  |[0m  'value': 'sol22-workspace-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 2 key: project_id_workspace
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,806 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,806 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 2, 'key_1': 'project_id_workspace'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,809 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,809 INFO sqlalchemy.engine.base.Engine {'solutionId': 2, 'key': 'project_id_workspace', 'value': 'sol22-workspace-ksjs726s', 'key_1': 'project_id_workspace', 'solutionId_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,810 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,814 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,815 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,815 INFO sqlalchemy.engine.base.Engine {'param_1': 2, 'param_2': 'project_id_workspace'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 2,
[33mhouston-service_1  |[0m  'value': 'sol22-workspace-ksjs726s'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,817 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,827 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [12] [DEBUG] GET /api/solutionresourcejson/2
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,830 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,830 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,832 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [10] [DEBUG] POST /api/solutionresourcejson/
[33mhouston-service_1  |[0m update_or_create 3
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,844 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,845 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,845 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 3}
[33mhouston-service_1  |[0m Update: 3
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,847 INFO sqlalchemy.engine.base.Engine UPDATE solutionresourcejson SET `solutionId`=%(solutionId)s, json=%(json)s WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,848 INFO sqlalchemy.engine.base.Engine {'solutionId': 3, 'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","di ... (3358 characters truncated) ... pace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}', 'solutionId_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,849 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,853 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,854 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,854 INFO sqlalchemy.engine.base.Engine {'param_1': 3}
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol22-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol22-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol22-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol22-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 3}
[33mhouston-service_1  |[0m resources_dict
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol22-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol22-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol22-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol22-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 3}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 3, 'value': 'sol22-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 3 key: project_id_dev
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,856 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,857 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 3, 'key_1': 'project_id_dev'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,861 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,861 INFO sqlalchemy.engine.base.Engine {'solutionId': 3, 'key': 'project_id_dev', 'value': 'sol22-dev-env-ksjs726s', 'key_1': 'project_id_dev', 'solutionId_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,863 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,867 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,869 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,869 INFO sqlalchemy.engine.base.Engine {'param_1': 3, 'param_2': 'project_id_dev'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 3, 'value': 'sol22-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 3, 'value': 'sol22-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 3 key: project_id_prod
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,873 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,873 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 3, 'key_1': 'project_id_prod'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,875 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,876 INFO sqlalchemy.engine.base.Engine {'solutionId': 3, 'key': 'project_id_prod', 'value': 'sol22-prod-env-ksjs726s', 'key_1': 'project_id_prod', 'solutionId_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,877 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,880 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,882 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,882 INFO sqlalchemy.engine.base.Engine {'param_1': 3, 'param_2': 'project_id_prod'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 3, 'value': 'sol22-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 3,
[33mhouston-service_1  |[0m  'value': 'sol22-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 3 key: project_id_staging
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,884 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,884 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 3, 'key_1': 'project_id_staging'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,886 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,887 INFO sqlalchemy.engine.base.Engine {'solutionId': 3, 'key': 'project_id_staging', 'value': 'sol22-staging-env-ksjs726s', 'key_1': 'project_id_staging', 'solutionId_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,888 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,891 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,892 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,892 INFO sqlalchemy.engine.base.Engine {'param_1': 3, 'param_2': 'project_id_staging'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 3,
[33mhouston-service_1  |[0m  'value': 'sol22-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 3,
[33mhouston-service_1  |[0m  'value': 'sol22-workspace-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 3 key: project_id_workspace
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,895 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,895 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 3, 'key_1': 'project_id_workspace'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,897 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,897 INFO sqlalchemy.engine.base.Engine {'solutionId': 3, 'key': 'project_id_workspace', 'value': 'sol22-workspace-ksjs726s', 'key_1': 'project_id_workspace', 'solutionId_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,899 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,903 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,904 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,904 INFO sqlalchemy.engine.base.Engine {'param_1': 3, 'param_2': 'project_id_workspace'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 3,
[33mhouston-service_1  |[0m  'value': 'sol22-workspace-ksjs726s'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,905 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [14] [DEBUG] GET /api/solutionresourcejson/3
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,917 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,918 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,919 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,921 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [13] [DEBUG] POST /api/solutionresourcejson/
[33mhouston-service_1  |[0m update_or_create 4
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,932 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,933 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,933 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 4}
[33mhouston-service_1  |[0m Update: 4
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,935 INFO sqlalchemy.engine.base.Engine UPDATE solutionresourcejson SET `solutionId`=%(solutionId)s, json=%(json)s WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,936 INFO sqlalchemy.engine.base.Engine {'solutionId': 4, 'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","di ... (3358 characters truncated) ... pace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}', 'solutionId_1': 4}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,937 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,940 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,941 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,941 INFO sqlalchemy.engine.base.Engine {'param_1': 4}
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol23-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol23-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol23-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol23-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 4}
[33mhouston-service_1  |[0m resources_dict
[33mhouston-service_1  |[0m {'json': '{"lineage":"7b590a8c-e4be-d8c6-6e00-57abbdfd3c3c","outputs":{},"resources":[{"instances":[{"attributes":{"create_time":"2020-04-30T13:51:27.390Z","display_name":"sol22 '
[33mhouston-service_1  |[0m          '- '
[33mhouston-service_1  |[0m          'ksjs726s","id":"folders/615899412414","lifecycle_state":"ACTIVE","name":"folders/615899412414","parent":"folders/943956663445","timeouts":null},"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfX0=","schema_version":0}],"mode":"managed","module":"module.solution_folder","name":"solution_folder","provider":"provider.google","type":"google_folder"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-dev-env-ksjs726s","labels":null,"name":"sol22-dev-env","number":"6570889872","org_id":"","project_id":"sol23-dev-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.dev_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-prod-env-ksjs726s","labels":null,"name":"sol22-prod-env","number":"1072288444773","org_id":"","project_id":"sol23-prod-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.prod_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-staging-env-ksjs726s","labels":null,"name":"sol22-staging-env","number":"292492613552","org_id":"","project_id":"sol23-staging-env-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.staging_environment","name":"environment_project","provider":"provider.google","type":"google_project"},{"instances":[{"attributes":{"auto_create_network":true,"billing_account":null,"folder_id":"615899412414","id":"projects/sol22-workspace-ksjs726s","labels":null,"name":"sol22-workspace","number":"555918489693","org_id":"","project_id":"sol23-workspace-ksjs726s","skip_delete":null,"timeouts":null},"dependencies":["module.solution_folder.google_folder.solution_folder"],"private":"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJyZWFkIjoyNDAwMDAwMDAwMDAsInVwZGF0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=","schema_version":1}],"mode":"managed","module":"module.workspace_project","name":"workspace_project","provider":"provider.google","type":"google_project"}],"serial":1,"terraform_version":"0.12.24","version":4}',
[33mhouston-service_1  |[0m  'solutionId': 4}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 4, 'value': 'sol23-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 4 key: project_id_dev
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,945 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,945 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 4, 'key_1': 'project_id_dev'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,947 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,947 INFO sqlalchemy.engine.base.Engine {'solutionId': 4, 'key': 'project_id_dev', 'value': 'sol23-dev-env-ksjs726s', 'key_1': 'project_id_dev', 'solutionId_1': 4}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,949 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,952 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,954 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,954 INFO sqlalchemy.engine.base.Engine {'param_1': 4, 'param_2': 'project_id_dev'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_dev', 'solutionId': 4, 'value': 'sol23-dev-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 4, 'value': 'sol23-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 4 key: project_id_prod
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,956 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,956 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 4, 'key_1': 'project_id_prod'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,959 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,959 INFO sqlalchemy.engine.base.Engine {'solutionId': 4, 'key': 'project_id_prod', 'value': 'sol23-prod-env-ksjs726s', 'key_1': 'project_id_prod', 'solutionId_1': 4}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,960 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,963 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,965 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,965 INFO sqlalchemy.engine.base.Engine {'param_1': 4, 'param_2': 'project_id_prod'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_prod', 'solutionId': 4, 'value': 'sol23-prod-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 4,
[33mhouston-service_1  |[0m  'value': 'sol23-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 4 key: project_id_staging
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,968 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,968 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 4, 'key_1': 'project_id_staging'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,971 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,971 INFO sqlalchemy.engine.base.Engine {'solutionId': 4, 'key': 'project_id_staging', 'value': 'sol23-staging-env-ksjs726s', 'key_1': 'project_id_staging', 'solutionId_1': 4}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,972 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,976 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,977 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,978 INFO sqlalchemy.engine.base.Engine {'param_1': 4, 'param_2': 'project_id_staging'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_staging',
[33mhouston-service_1  |[0m  'solutionId': 4,
[33mhouston-service_1  |[0m  'value': 'sol23-staging-env-ksjs726s'}
[33mhouston-service_1  |[0m solutionresource:create
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 4,
[33mhouston-service_1  |[0m  'value': 'sol23-workspace-ksjs726s'}
[33mhouston-service_1  |[0m solutionId: 4 key: project_id_workspace
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,980 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(solutionId_1)s AND solutionresource.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,980 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 4, 'key_1': 'project_id_workspace'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,982 INFO sqlalchemy.engine.base.Engine UPDATE solutionresource SET `solutionId`=%(solutionId)s, `key`=%(key)s, value=%(value)s WHERE solutionresource.`key` = %(key_1)s AND solutionresource.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,982 INFO sqlalchemy.engine.base.Engine {'solutionId': 4, 'key': 'project_id_workspace', 'value': 'sol23-workspace-ksjs726s', 'key_1': 'project_id_workspace', 'solutionId_1': 4}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,984 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,987 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,988 INFO sqlalchemy.engine.base.Engine SELECT solutionresource.`solutionId` AS `solutionresource_solutionId`, solutionresource.`key` AS solutionresource_key, solutionresource.value AS solutionresource_value 
[33mhouston-service_1  |[0m FROM solutionresource 
[33mhouston-service_1  |[0m WHERE solutionresource.`solutionId` = %(param_1)s AND solutionresource.`key` = %(param_2)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,988 INFO sqlalchemy.engine.base.Engine {'param_1': 4, 'param_2': 'project_id_workspace'}
[33mhouston-service_1  |[0m solutionresource
[33mhouston-service_1  |[0m {'key': 'project_id_workspace',
[33mhouston-service_1  |[0m  'solutionId': 4,
[33mhouston-service_1  |[0m  'value': 'sol23-workspace-ksjs726s'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:58,990 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:58 +0000] [12] [DEBUG] GET /api/solutionresourcejson/4
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,001 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,002 INFO sqlalchemy.engine.base.Engine SELECT solutionresourcejson.`solutionId` AS `solutionresourcejson_solutionId`, solutionresourcejson.json AS solutionresourcejson_json 
[33mhouston-service_1  |[0m FROM solutionresourcejson 
[33mhouston-service_1  |[0m WHERE solutionresourcejson.`solutionId` = %(solutionId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,002 INFO sqlalchemy.engine.base.Engine {'solutionId_1': 4}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,004 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [14] [DEBUG] POST /api/keyValues/sourceControl/
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,019 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,020 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,020 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,024 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,024 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,027 INFO sqlalchemy.engine.base.Engine INSERT INTO sourcecontrol (`key`, value) VALUES (%(key)s, %(value)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,028 INFO sqlalchemy.engine.base.Engine {'key': 'test-sourcecontrol', 'value': 'test-post-value'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,029 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,032 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,033 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,033 INFO sqlalchemy.engine.base.Engine {'param_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,035 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [10] [DEBUG] GET /api/keyValues/sourceControl/test-sourcecontrol
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,047 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,048 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,048 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,049 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [12] [DEBUG] PUT /api/keyValues/sourceControl/test-sourcecontrol
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,062 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,064 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,064 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,066 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,066 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol', 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,068 INFO sqlalchemy.engine.base.Engine UPDATE sourcecontrol SET value=%(value)s WHERE sourcecontrol.`key` = %(sourcecontrol_key)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,068 INFO sqlalchemy.engine.base.Engine {'value': 'new-test-value', 'sourcecontrol_key': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,069 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,073 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,074 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,074 INFO sqlalchemy.engine.base.Engine {'param_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,076 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [12] [DEBUG] GET /api/keyValues/sourceControl/test-sourcecontrol
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,085 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,086 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,086 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,088 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [10] [DEBUG] DELETE /api/keyValues/sourceControl/test-sourcecontrol
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,099 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,100 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,100 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,104 INFO sqlalchemy.engine.base.Engine DELETE FROM sourcecontrol WHERE sourcecontrol.`key` = %(key)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,104 INFO sqlalchemy.engine.base.Engine {'key': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,105 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [14] [DEBUG] DELETE /api/keyValues/sourceControl/test-sourcecontrol
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,123 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,125 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,125 INFO sqlalchemy.engine.base.Engine {'key_1': 'test-sourcecontrol'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,127 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [14] [DEBUG] GET /api/keyValues/sourceControl/test
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,141 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,142 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol 
[33mhouston-service_1  |[0m WHERE sourcecontrol.`key` = %(key_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,142 INFO sqlalchemy.engine.base.Engine {'key_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,144 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [13] [DEBUG] GET /api/keyValues/sourceControl/
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,158 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,160 INFO sqlalchemy.engine.base.Engine SELECT sourcecontrol.`key` AS sourcecontrol_key, sourcecontrol.value AS sourcecontrol_value 
[33mhouston-service_1  |[0m FROM sourcecontrol ORDER BY sourcecontrol.`key`
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,160 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,161 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [13] [DEBUG] POST /api/team/
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,176 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,178 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.name = %(name_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,179 INFO sqlalchemy.engine.base.Engine {'name_1': 'Team-Test'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,182 INFO sqlalchemy.engine.base.Engine INSERT INTO team (name, description, `businessUnitId`, `isActive`) VALUES (%(name)s, %(description)s, %(businessUnitId)s, %(isActive)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,182 INFO sqlalchemy.engine.base.Engine {'name': 'Team-Test', 'description': 'Test Team', 'businessUnitId': 0, 'isActive': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,183 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,187 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,188 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,188 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,190 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [13] [DEBUG] GET /api/team/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,199 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,200 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,200 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,201 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [10] [DEBUG] PUT /api/team/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,211 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,212 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,212 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,215 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,215 INFO sqlalchemy.engine.base.Engine {'id_1': 1, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,217 INFO sqlalchemy.engine.base.Engine UPDATE team SET name=%(name)s, `isActive`=%(isActive)s WHERE team.id = %(team_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,217 INFO sqlalchemy.engine.base.Engine {'name': 'Team-Test-Updated', 'isActive': 0, 'team_id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,219 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,222 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,223 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,223 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,225 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,235 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [12] [DEBUG] GET /api/team/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,237 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,237 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,239 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [12] [DEBUG] DELETE /api/team/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,251 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,252 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,252 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,254 INFO sqlalchemy.engine.base.Engine DELETE FROM team WHERE team.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,254 INFO sqlalchemy.engine.base.Engine {'id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,255 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [11] [DEBUG] GET /api/team/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,270 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,272 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,272 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,274 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [13] [DEBUG] DELETE /api/team/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,284 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,285 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team 
[33mhouston-service_1  |[0m WHERE team.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,285 INFO sqlalchemy.engine.base.Engine {'id_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,287 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [10] [DEBUG] GET /api/teams/
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,296 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,297 INFO sqlalchemy.engine.base.Engine SELECT team.id AS team_id, team.name AS team_name, team.description AS team_description, team.`businessUnitId` AS `team_businessUnitId`, team.`isActive` AS `team_isActive` 
[33mhouston-service_1  |[0m FROM team ORDER BY team.id
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,298 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,299 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [14] [DEBUG] POST /api/teammember/
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,314 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,316 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.`userId` = %(userId_1)s AND teammember.`teamId` = %(teamId_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,316 INFO sqlalchemy.engine.base.Engine {'userId_1': 1000, 'teamId_1': 1000}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,319 INFO sqlalchemy.engine.base.Engine INSERT INTO teammember (`userId`, `teamId`, `role`, `isActive`) VALUES (%(userId)s, %(teamId)s, %(role)s, %(isActive)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,319 INFO sqlalchemy.engine.base.Engine {'userId': 1000, 'teamId': 1000, 'role': 'Admin', 'isActive': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,321 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,325 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,327 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,327 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,329 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [11] [DEBUG] GET /api/teammember/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,343 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,344 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,345 INFO sqlalchemy.engine.base.Engine {'id_1': '1'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,346 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [11] [DEBUG] PUT /api/teammember/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,356 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,357 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,357 INFO sqlalchemy.engine.base.Engine {'id_1': '1'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,359 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,359 INFO sqlalchemy.engine.base.Engine {'id_1': 1, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,361 INFO sqlalchemy.engine.base.Engine UPDATE teammember SET `isActive`=%(isActive)s WHERE teammember.id = %(teammember_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,362 INFO sqlalchemy.engine.base.Engine {'isActive': 0, 'teammember_id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,363 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,367 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,368 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,368 INFO sqlalchemy.engine.base.Engine {'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,369 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [13] [DEBUG] GET /api/teammember/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,380 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,382 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,382 INFO sqlalchemy.engine.base.Engine {'id_1': '1'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,384 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [11] [DEBUG] GET /api/teammembers/
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,395 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,396 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.`userId` = %(userId_1)s AND teammember.`teamId` = %(teamId_1)s ORDER BY teammember.id
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,396 INFO sqlalchemy.engine.base.Engine {'userId_1': 1000, 'teamId_1': 1000}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,399 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [11] [DEBUG] DELETE /api/teammember/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,409 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,410 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,410 INFO sqlalchemy.engine.base.Engine {'id_1': '1'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,412 INFO sqlalchemy.engine.base.Engine DELETE FROM teammember WHERE teammember.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,413 INFO sqlalchemy.engine.base.Engine {'id': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,414 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [14] [DEBUG] GET /api/teammember/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,429 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,430 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,430 INFO sqlalchemy.engine.base.Engine {'id_1': '1'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,432 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [11] [DEBUG] DELETE /api/teammember/1
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,442 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,443 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE teammember.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,443 INFO sqlalchemy.engine.base.Engine {'id_1': '1'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,444 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [13] [DEBUG] GET /api/teammembers/
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,456 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,457 INFO sqlalchemy.engine.base.Engine SELECT teammember.id AS teammember_id, teammember.`userId` AS `teammember_userId`, teammember.`teamId` AS `teammember_teamId`, teammember.`role` AS teammember_role, teammember.`isActive` AS `teammember_isActive` 
[33mhouston-service_1  |[0m FROM teammember 
[33mhouston-service_1  |[0m WHERE true = 1 ORDER BY teammember.id
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,457 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,459 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [10] [DEBUG] POST /api/user/
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,474 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,476 INFO sqlalchemy.engine.base.Engine SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user 
[33mhouston-service_1  |[0m WHERE user.`firstName` = %(firstName_1)s AND user.`lastName` = %(lastName_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,476 INFO sqlalchemy.engine.base.Engine {'firstName_1': 'test', 'lastName_1': 'test'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,480 INFO sqlalchemy.engine.base.Engine INSERT INTO user (email, `firstName`, `lastName`, `isAdmin`, `isActive`) VALUES (%(email)s, %(firstName)s, %(lastName)s, %(isAdmin)s, %(isActive)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,480 INFO sqlalchemy.engine.base.Engine {'email': 'test@test.com', 'firstName': 'test', 'lastName': 'test', 'isAdmin': 1, 'isActive': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,481 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,484 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,485 INFO sqlalchemy.engine.base.Engine SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user 
[33mhouston-service_1  |[0m WHERE user.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,485 INFO sqlalchemy.engine.base.Engine {'param_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,487 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [11] [DEBUG] GET /api/user/3
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,498 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,500 INFO sqlalchemy.engine.base.Engine SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user 
[33mhouston-service_1  |[0m WHERE user.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,500 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,502 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [13] [DEBUG] PUT /api/user/3
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,512 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,514 INFO sqlalchemy.engine.base.Engine SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user 
[33mhouston-service_1  |[0m WHERE user.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,514 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,517 INFO sqlalchemy.engine.base.Engine SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user 
[33mhouston-service_1  |[0m WHERE user.id = %(id_1)s 
[33mhouston-service_1  |[0m  LIMIT %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,517 INFO sqlalchemy.engine.base.Engine {'id_1': 3, 'param_1': 1}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,520 INFO sqlalchemy.engine.base.Engine UPDATE user SET `isActive`=%(isActive)s WHERE user.id = %(user_id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,520 INFO sqlalchemy.engine.base.Engine {'isActive': 0, 'user_id': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,521 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,524 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,526 INFO sqlalchemy.engine.base.Engine SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user 
[33mhouston-service_1  |[0m WHERE user.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,526 INFO sqlalchemy.engine.base.Engine {'param_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,527 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [12] [DEBUG] GET /api/user/3
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,541 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,542 INFO sqlalchemy.engine.base.Engine SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user 
[33mhouston-service_1  |[0m WHERE user.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,542 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,544 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [14] [DEBUG] DELETE /api/user/3
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,555 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,556 INFO sqlalchemy.engine.base.Engine SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user 
[33mhouston-service_1  |[0m WHERE user.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,556 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,558 INFO sqlalchemy.engine.base.Engine DELETE FROM user WHERE user.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,558 INFO sqlalchemy.engine.base.Engine {'id': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,560 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [14] [DEBUG] GET /api/user/3
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,574 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,575 INFO sqlalchemy.engine.base.Engine SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user 
[33mhouston-service_1  |[0m WHERE user.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,575 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,577 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [13] [DEBUG] DELETE /api/user/3
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,588 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,589 INFO sqlalchemy.engine.base.Engine SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user 
[33mhouston-service_1  |[0m WHERE user.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,589 INFO sqlalchemy.engine.base.Engine {'id_1': 3}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,590 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [10] [DEBUG] GET /api/users/
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,600 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,601 INFO sqlalchemy.engine.base.Engine SELECT user.id AS user_id, user.email AS user_email, user.`firstName` AS `user_firstName`, user.`lastName` AS `user_lastName`, user.`isAdmin` AS `user_isAdmin`, user.`isActive` AS `user_isActive` 
[33mhouston-service_1  |[0m FROM user ORDER BY user.id
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,601 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,603 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [10] [DEBUG] POST /api/keyValues/vpnonpremisevendor/
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,618 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,619 INFO sqlalchemy.engine.base.Engine INSERT INTO vpnonpremisevendor (`key`, value) VALUES (%(key)s, %(value)s)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,620 INFO sqlalchemy.engine.base.Engine {'key': 'test', 'value': 'test-value'}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,621 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,626 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,627 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,627 INFO sqlalchemy.engine.base.Engine {'param_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,628 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [10] [DEBUG] GET /api/keyValues/vpnonpremisevendor/2
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,639 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,641 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,641 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,643 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [10] [DEBUG] PUT /api/keyValues/vpnonpremisevendor/2
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,652 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,653 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,653 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,655 INFO sqlalchemy.engine.base.Engine UPDATE vpnonpremisevendor SET `key`=%(key)s, value=%(value)s WHERE vpnonpremisevendor.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,655 INFO sqlalchemy.engine.base.Engine {'key': 'test', 'value': 'new-test-value', 'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,657 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,660 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,661 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(param_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,661 INFO sqlalchemy.engine.base.Engine {'param_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,662 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [12] [DEBUG] GET /api/keyValues/vpnonpremisevendor/2
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,673 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,674 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,674 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,676 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [12] [DEBUG] DELETE /api/keyValues/vpnonpremisevendor/2
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,687 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,688 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,688 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,690 INFO sqlalchemy.engine.base.Engine DELETE FROM vpnonpremisevendor WHERE vpnonpremisevendor.id = %(id)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,690 INFO sqlalchemy.engine.base.Engine {'id': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,691 INFO sqlalchemy.engine.base.Engine COMMIT
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [11] [DEBUG] GET /api/keyValues/vpnonpremisevendor/2
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,705 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,707 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,707 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,709 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [14] [DEBUG] DELETE /api/keyValues/vpnonpremisevendor/2
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,720 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,721 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor 
[33mhouston-service_1  |[0m WHERE vpnonpremisevendor.id = %(id_1)s
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,721 INFO sqlalchemy.engine.base.Engine {'id_1': 2}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,723 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:57:59 +0000] [13] [DEBUG] GET /api/keyValues/vpnonpremisevendor/
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,734 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,735 INFO sqlalchemy.engine.base.Engine SELECT vpnonpremisevendor.id AS vpnonpremisevendor_id, vpnonpremisevendor.`key` AS vpnonpremisevendor_key, vpnonpremisevendor.value AS vpnonpremisevendor_value 
[33mhouston-service_1  |[0m FROM vpnonpremisevendor ORDER BY vpnonpremisevendor.`key`
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,735 INFO sqlalchemy.engine.base.Engine {}
[33mhouston-service_1  |[0m 2020-05-05 09:57:59,737 INFO sqlalchemy.engine.base.Engine ROLLBACK
[33mhouston-service_1  |[0m [2020-05-05 09:58:42 +0000] [10] [DEBUG] GET /api/login/
[33mhouston-service_1  |[0m [2020-05-05 09:59:13 +0000] [7] [CRITICAL] WORKER TIMEOUT (pid:12)
[33mhouston-service_1  |[0m [2020-05-05 09:59:13 +0000] [12] [INFO] Worker exiting (pid: 12)
[33mhouston-service_1  |[0m [2020-05-05 09:59:13 +0000] [20] [INFO] Booting worker with pid: 20
[33mhouston-service_1  |[0m [2020-05-05 09:59:18 +0000] [14] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m Exception on /api/login [POST]
[33mhouston-service_1  |[0m Traceback (most recent call last):
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 2446, in wsgi_app
[33mhouston-service_1  |[0m     response = self.full_dispatch_request()
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1951, in full_dispatch_request
[33mhouston-service_1  |[0m     rv = self.handle_user_exception(e)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1820, in handle_user_exception
[33mhouston-service_1  |[0m     reraise(exc_type, exc_value, tb)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/_compat.py", line 39, in reraise
[33mhouston-service_1  |[0m     raise value
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1949, in full_dispatch_request
[33mhouston-service_1  |[0m     rv = self.dispatch_request()
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1935, in dispatch_request
[33mhouston-service_1  |[0m     return self.view_functions[rule.endpoint](**req.view_args)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/decorator.py", line 48, in wrapper
[33mhouston-service_1  |[0m     response = function(request)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/uri_parsing.py", line 144, in wrapper
[33mhouston-service_1  |[0m     response = function(request)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/validation.py", line 184, in wrapper
[33mhouston-service_1  |[0m     response = function(request)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/parameter.py", line 121, in wrapper
[33mhouston-service_1  |[0m     return function(**kwargs)
[33mhouston-service_1  |[0m   File "/srv/login.py", line 22, in check_credentials
[33mhouston-service_1  |[0m     username = login_details['username']
[33mhouston-service_1  |[0m KeyError: 'username'
[33mhouston-service_1  |[0m [2020-05-05 10:00:42 +0000] [11] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m http://localhost:3000/api/login validation error: '0' is not of type 'integer' - 'id'
[33mhouston-service_1  |[0m [2020-05-05 10:01:46 +0000] [20] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m http://localhost:3000/api/login validation error: '0' is not of type 'integer' - 'id'
[33mhouston-service_1  |[0m [2020-05-05 10:01:58 +0000] [10] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m http://localhost:3000/api/login validation error: '0' is not of type 'integer' - 'id'
[36mgcp-dac_1          |[0m  'teams': 2}[2020-05-05 10:14:51 +0000] [8] [CRITICAL] WORKER TIMEOUT (pid:11)
[33mhouston-service_1  |[0m [2020-05-05 10:14:51 +0000] [7] [CRITICAL] WORKER TIMEOUT (pid:10)
[36mgcp-dac_1          |[0m [2020-05-05 10:14:51 +0000] [11] [INFO] Worker exiting (pid: 11)
[33mhouston-service_1  |[0m [2020-05-05 10:14:51 +0000] [10] [INFO] Worker exiting (pid: 10)
[36mgcp-dac_1          |[0m 
[36mgcp-dac_1          |[0m {'deployed': False,
[36mgcp-dac_1          |[0m  'deploymentState': 'In progress',
[36mgcp-dac_1          |[0m  'id': 1,
[36mgcp-dac_1          |[0m  'statusCode': 'SS',
[36mgcp-dac_1          |[0m  'statusId': 0,
[36mgcp-dac_1          |[0m  'statusMessage': 'Successful',
[36mgcp-dac_1          |[0m  'taskId': 1}
[33mhouston-service_1  |[0m [2020-05-05 10:14:51 +0000] [7] [CRITICAL] WORKER TIMEOUT (pid:11)
[33mhouston-service_1  |[0m [2020-05-05 10:14:51 +0000] [7] [CRITICAL] WORKER TIMEOUT (pid:13)
[33mhouston-service_1  |[0m [2020-05-05 10:14:51 +0000] [7] [CRITICAL] WORKER TIMEOUT (pid:14)
[33mhouston-service_1  |[0m [2020-05-05 10:14:51 +0000] [7] [CRITICAL] WORKER TIMEOUT (pid:20)
[33mhouston-service_1  |[0m [2020-05-05 10:14:51 +0000] [11] [INFO] Worker exiting (pid: 11)
[33mhouston-service_1  |[0m [2020-05-05 10:14:51 +0000] [20] [INFO] Worker exiting (pid: 20)
[33mhouston-service_1  |[0m [2020-05-05 10:14:51 +0000] [14] [INFO] Worker exiting (pid: 14)
[33mhouston-service_1  |[0m [2020-05-05 10:14:51 +0000] [13] [INFO] Worker exiting (pid: 13)
[36mgcp-dac_1          |[0m [2020-05-05 10:14:51 +0000] [13] [INFO] Booting worker with pid: 13
[33mhouston-service_1  |[0m [2020-05-05 10:14:52 +0000] [22] [INFO] Booting worker with pid: 22
[32mmysql57_1          |[0m 2020-05-05T10:14:52.168829Z 3 [Note] Aborted connection 3 to db: 'eagle_db' user: 'eagle-user' host: '172.20.0.3' (Got an error reading communication packets)
[32mmysql57_1          |[0m 2020-05-05T10:14:52.170243Z 6 [Note] Aborted connection 6 to db: 'eagle_db' user: 'eagle-user' host: '172.20.0.3' (Got an error reading communication packets)
[32mmysql57_1          |[0m 2020-05-05T10:14:52.172187Z 2 [Note] Aborted connection 2 to db: 'eagle_db' user: 'eagle-user' host: '172.20.0.3' (Got an error reading communication packets)
[33mhouston-service_1  |[0m [2020-05-05 10:14:52 +0000] [7] [DEBUG] 1 workers
[33mhouston-service_1  |[0m [2020-05-05 10:14:52 +0000] [23] [INFO] Booting worker with pid: 23
[33mhouston-service_1  |[0m [2020-05-05 10:14:52 +0000] [24] [INFO] Booting worker with pid: 24
[33mhouston-service_1  |[0m [2020-05-05 10:14:52 +0000] [25] [INFO] Booting worker with pid: 25
[33mhouston-service_1  |[0m [2020-05-05 10:14:52 +0000] [7] [DEBUG] 5 workers
[33mhouston-service_1  |[0m [2020-05-05 10:14:52 +0000] [26] [INFO] Booting worker with pid: 26
[33mhouston-service_1  |[0m [2020-05-05 10:16:31 +0000] [23] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m http://localhost:3000/api/login validation error: '0' is not of type 'integer' - 'id'
[33mhouston-service_1  |[0m [2020-05-05 10:16:57 +0000] [24] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m http://localhost:3000/api/login validation error: '0' is not of type 'integer' - 'id'
[33mhouston-service_1  |[0m [2020-05-05 10:22:50 +0000] [26] [DEBUG] GET /api/ui/
[33mhouston-service_1  |[0m [2020-05-05 10:22:50 +0000] [22] [DEBUG] GET /api/openapi.json
[33mhouston-service_1  |[0m [2020-05-05 10:23:01 +0000] [26] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m Exception on /api/login [POST]
[33mhouston-service_1  |[0m Traceback (most recent call last):
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 2446, in wsgi_app
[33mhouston-service_1  |[0m     response = self.full_dispatch_request()
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1951, in full_dispatch_request
[33mhouston-service_1  |[0m     rv = self.handle_user_exception(e)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1820, in handle_user_exception
[33mhouston-service_1  |[0m     reraise(exc_type, exc_value, tb)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/_compat.py", line 39, in reraise
[33mhouston-service_1  |[0m     raise value
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1949, in full_dispatch_request
[33mhouston-service_1  |[0m     rv = self.dispatch_request()
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1935, in dispatch_request
[33mhouston-service_1  |[0m     return self.view_functions[rule.endpoint](**req.view_args)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/decorator.py", line 48, in wrapper
[33mhouston-service_1  |[0m     response = function(request)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/uri_parsing.py", line 144, in wrapper
[33mhouston-service_1  |[0m     response = function(request)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/validation.py", line 184, in wrapper
[33mhouston-service_1  |[0m     response = function(request)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/parameter.py", line 121, in wrapper
[33mhouston-service_1  |[0m     return function(**kwargs)
[33mhouston-service_1  |[0m   File "/srv/login.py", line 22, in check_credentials
[33mhouston-service_1  |[0m     username = login_details['username']
[33mhouston-service_1  |[0m KeyError: 'username'
[33mhouston-service_1  |[0m [2020-05-05 10:25:15 +0000] [25] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m http://localhost:3000/api/login validation error: '0' is not of type 'integer' - 'id'
[33mhouston-service_1  |[0m [2020-05-05 10:25:33 +0000] [24] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m http://localhost:3000/api/login validation error: '0' is not of type 'integer' - 'id'
[33mhouston-service_1  |[0m [2020-05-05 10:25:51 +0000] [23] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m http://localhost:3000/api/login validation error: '0' is not of type 'integer' - 'id'
[33mhouston-service_1  |[0m [2020-05-05 10:26:03 +0000] [26] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m LOGIN FAILED!
[33mhouston-service_1  |[0m [2020-05-05 10:26:32 +0000] [22] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m LOGIN FAILED!
[33mhouston-service_1  |[0m [2020-05-05 10:26:55 +0000] [23] [DEBUG] POST /api/login
[33mhouston-service_1  |[0m Exception on /api/login [POST]
[33mhouston-service_1  |[0m Traceback (most recent call last):
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 2446, in wsgi_app
[33mhouston-service_1  |[0m     response = self.full_dispatch_request()
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1951, in full_dispatch_request
[33mhouston-service_1  |[0m     rv = self.handle_user_exception(e)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1820, in handle_user_exception
[33mhouston-service_1  |[0m     reraise(exc_type, exc_value, tb)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/_compat.py", line 39, in reraise
[33mhouston-service_1  |[0m     raise value
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1949, in full_dispatch_request
[33mhouston-service_1  |[0m     rv = self.dispatch_request()
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/flask/app.py", line 1935, in dispatch_request
[33mhouston-service_1  |[0m     return self.view_functions[rule.endpoint](**req.view_args)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/decorator.py", line 48, in wrapper
[33mhouston-service_1  |[0m     response = function(request)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/uri_parsing.py", line 144, in wrapper
[33mhouston-service_1  |[0m     response = function(request)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/validation.py", line 184, in wrapper
[33mhouston-service_1  |[0m     response = function(request)
[33mhouston-service_1  |[0m   File "/usr/local/lib/python3.6/site-packages/connexion/decorators/parameter.py", line 121, in wrapper
[33mhouston-service_1  |[0m     return function(**kwargs)
[33mhouston-service_1  |[0m   File "/srv/login.py", line 22, in check_credentials
[33mhouston-service_1  |[0m     username = login_details['username']
[33mhouston-service_1  |[0m KeyError: 'username'
[36mtb-houston-service_gcp-dac_1 exited with code 137
[0m[33mtb-houston-service_houston-service_1 exited with code 137
[0m[32mmysql57_1          |[0m 2020-05-05T10:28:23.700903Z 0 [Note] Giving 0 client threads a chance to die gracefully
[32mmysql57_1          |[0m 2020-05-05T10:28:23.700970Z 0 [Note] Shutting down slave threads
[32mmysql57_1          |[0m 2020-05-05T10:28:23.700984Z 0 [Note] Forcefully disconnecting 0 remaining clients
[32mmysql57_1          |[0m 2020-05-05T10:28:23.700996Z 0 [Note] Event Scheduler: Purging the queue. 0 events
[32mmysql57_1          |[0m 2020-05-05T10:28:23.701093Z 0 [Note] Binlog end
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703033Z 0 [Note] Shutting down plugin 'ngram'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703057Z 0 [Note] Shutting down plugin 'partition'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703068Z 0 [Note] Shutting down plugin 'BLACKHOLE'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703079Z 0 [Note] Shutting down plugin 'ARCHIVE'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703086Z 0 [Note] Shutting down plugin 'PERFORMANCE_SCHEMA'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703116Z 0 [Note] Shutting down plugin 'MRG_MYISAM'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703130Z 0 [Note] Shutting down plugin 'MyISAM'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703144Z 0 [Note] Shutting down plugin 'INNODB_SYS_VIRTUAL'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703152Z 0 [Note] Shutting down plugin 'INNODB_SYS_DATAFILES'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703160Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLESPACES'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703167Z 0 [Note] Shutting down plugin 'INNODB_SYS_FOREIGN_COLS'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703176Z 0 [Note] Shutting down plugin 'INNODB_SYS_FOREIGN'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703185Z 0 [Note] Shutting down plugin 'INNODB_SYS_FIELDS'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703223Z 0 [Note] Shutting down plugin 'INNODB_SYS_COLUMNS'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703240Z 0 [Note] Shutting down plugin 'INNODB_SYS_INDEXES'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703333Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLESTATS'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703354Z 0 [Note] Shutting down plugin 'INNODB_SYS_TABLES'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703367Z 0 [Note] Shutting down plugin 'INNODB_FT_INDEX_TABLE'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703378Z 0 [Note] Shutting down plugin 'INNODB_FT_INDEX_CACHE'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703390Z 0 [Note] Shutting down plugin 'INNODB_FT_CONFIG'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703406Z 0 [Note] Shutting down plugin 'INNODB_FT_BEING_DELETED'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703418Z 0 [Note] Shutting down plugin 'INNODB_FT_DELETED'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703430Z 0 [Note] Shutting down plugin 'INNODB_FT_DEFAULT_STOPWORD'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703440Z 0 [Note] Shutting down plugin 'INNODB_METRICS'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703446Z 0 [Note] Shutting down plugin 'INNODB_TEMP_TABLE_INFO'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703456Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_POOL_STATS'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703468Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_PAGE_LRU'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703480Z 0 [Note] Shutting down plugin 'INNODB_BUFFER_PAGE'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703492Z 0 [Note] Shutting down plugin 'INNODB_CMP_PER_INDEX_RESET'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703499Z 0 [Note] Shutting down plugin 'INNODB_CMP_PER_INDEX'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703520Z 0 [Note] Shutting down plugin 'INNODB_CMPMEM_RESET'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703545Z 0 [Note] Shutting down plugin 'INNODB_CMPMEM'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703553Z 0 [Note] Shutting down plugin 'INNODB_CMP_RESET'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703565Z 0 [Note] Shutting down plugin 'INNODB_CMP'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703580Z 0 [Note] Shutting down plugin 'INNODB_LOCK_WAITS'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703592Z 0 [Note] Shutting down plugin 'INNODB_LOCKS'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703604Z 0 [Note] Shutting down plugin 'INNODB_TRX'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703617Z 0 [Note] Shutting down plugin 'InnoDB'
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703764Z 0 [Note] InnoDB: FTS optimize thread exiting.
[32mmysql57_1          |[0m 2020-05-05T10:28:23.703916Z 0 [Note] InnoDB: Starting shutdown...
[32mmysql57_1          |[0m 2020-05-05T10:28:23.804439Z 0 [Note] InnoDB: Dumping buffer pool(s) to /var/lib/mysql/ib_buffer_pool
[32mmysql57_1          |[0m 2020-05-05T10:28:23.805153Z 0 [Note] InnoDB: Buffer pool(s) dump completed at 200505 10:28:23
[32mmysql57_1          |[0m 2020-05-05T10:28:25.139226Z 0 [Note] InnoDB: Shutdown completed; log sequence number 12802711
[32mmysql57_1          |[0m 2020-05-05T10:28:25.142385Z 0 [Note] InnoDB: Removed temporary tablespace data file: "ibtmp1"
[32mmysql57_1          |[0m 2020-05-05T10:28:25.142446Z 0 [Note] Shutting down plugin 'MEMORY'
[32mmysql57_1          |[0m 2020-05-05T10:28:25.142457Z 0 [Note] Shutting down plugin 'CSV'
[32mmysql57_1          |[0m 2020-05-05T10:28:25.142464Z 0 [Note] Shutting down plugin 'sha256_password'
[32mmysql57_1          |[0m 2020-05-05T10:28:25.142474Z 0 [Note] Shutting down plugin 'mysql_native_password'
[32mmysql57_1          |[0m 2020-05-05T10:28:25.142602Z 0 [Note] Shutting down plugin 'binlog'
[32mmysql57_1          |[0m 2020-05-05T10:28:25.146401Z 0 [Note] mysqld: Shutdown complete
[32mmysql57_1          |[0m 
[32mtb-houston-service_mysql57_1 exited with code 0
[0m