openapi: 3.0.0
info:
  description: | 
    TranquilityBase Houston Backend REST API Service.
    The Houston Service is the name of the backend service for the Eagle Console.
    There is more information about the Houston Service here.
    https://github.com/tranquilitybase-io/tb-houston-service/wiki.
    There is more information about the Eagle Console here.
    https://github.com/tranquilitybase-io/tb-eagle-console/wiki
    (This document was generated by redoc-cli: https://github.com/Redocly/redoc/blob/master/cli/README.md.)

  version: 0.32.0
  title: TB Houston Service
  termsOfService: "https://github.com/tranquilitybase-io/tb-houston-service/wiki/Terms-of-service"
  license:
    name: "Apache 2.0"
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"

# Apply the security globally to all operations
#security:
#  - bearerAuth: []

servers:
  - url: /api

paths:
  /login:
    post:
      operationId: tb_houston_service.login.check_credentials
      tags:
        - login
      summary: login credentials check
      description: This endpoint is used to check login credentials.   
      requestBody:
        $ref: "#/components/requestBodies/login.loginDetails"
      responses:
        "201":
          description: The login was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The email address
                  firstName:
                    type: string
                    description: The user's first name
                  lastName:
                    type: string
                    description: The user's last name
                  isAdmin:
                    type: boolean
                    description: is the user an admin user?

                                      
  /health:
    get:
      operationId: tb_houston_service.health.check
      tags:
        - health
      summary: The Houston Service general health check.
      description: Return the health of the Houston service.
      responses:
        "200":
          description: Successfully returned the health of the Houston Service.

  /applications/:
    get:
      operationId: tb_houston_service.application.read_all
      tags:
        - application
      summary: Read the entire list of applications
      description: Read the list of applications
      parameters:
        - in: query
          name: isActive
          schema:
            type: boolean
        - in: query
          name: isFavourite
          schema:
            type: boolean                    
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: activatorId
          schema:
            type: integer
        - in: query
          name: environment
          schema:
            type: string
        - in: query 
          name: page
          schema:
            type: integer
        - in: query 
          name: page_size
          schema:
            type: integer
        - in: query 
          name: sort
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        "200":
          description: Successfully read application list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Application"

  /application/:
    post:
      operationId: tb_houston_service.application.create
      tags:
        - application
      summary: Create an application and add it to the applications list
      description: Create a new application in the applications list
      requestBody:
        $ref: "#/components/requestBodies/application.applicationDetails"
        required: true
      responses:
        "201":
          description: Successfully created an application

  "/application/{oid}":
    get:
      operationId: tb_houston_service.application.read_one
      tags:
        - application
      summary: Read one application from the list
      description: Read one application from the list
      parameters:
        - name: oid
          in: path
          description: oid of the application to get from the list
          required: true
          schema:
            type: integer          
      responses:
        "200":
          description: Successfully read an application from the list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"

    put:
      operationId: tb_houston_service.application.update
      tags:
        - application
      summary: Update an application in the list
      description: Update an application in the list
      parameters:
        - name: oid
          in: path
          description: oid of the application to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/application.applicationDetails"
      responses:
        "200":
          description: Successfully updated an application
    delete:
      operationId: tb_houston_service.application.delete
      tags:
        - application
      summary: Delete a application from the list
      description: Delete a application
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted an application

  "/application_meta/{activatorId}":
    get:
      operationId: tb_houston_service.application_meta.read_one
      tags:
        - application
      summary: Read application_meta
      description: Read application_meta
      parameters:
        - name: activatorId
          in: path
          description: activatorId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read application metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                  length:
                    type: integer

  "/activator_meta/":
    get:
      operationId: tb_houston_service.activator_meta.read_one
      tags:
        - activator
      summary: Read activator_meta
      description: Read activator_meta
      responses:
        "200":
          description: Successfully read activator metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                  length:
                    type: integer

  /teams/:
    get:
      operationId: tb_houston_service.team.read_all
      tags:
        - team
      summary: Read the entire list of teams
      description: Read the list of teams
      responses:
        "200":
          description: Successfully read team list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
  /team/:
    post:
      operationId: tb_houston_service.team.create
      tags:
        - team
      summary: Create a team and add it to the team list
      description: Create a new team in the team list
      requestBody:
        $ref: '#/components/requestBodies/team.teamDetails'
      responses:
        "201":
          description: Successfully created a team

  "/team/{oid}":
    get:
      operationId: tb_houston_service.team.read_one
      tags:
        - team
      summary: Read one team from the list
      description: Read one team from the list
      parameters:
        - name: oid
          in: path
          description: key of the team to get from the list
          required: true
          schema:
            type: integer
      responses:
              "200":
                description: Successfully read an team from the list
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/Team"
    put:
      operationId: tb_houston_service.team.update
      tags:
        - team
      summary: Update a team in the list
      description: Update a team in the list
      parameters:
        - name: oid
          in: path
          description: key of the team to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/team.teamDetails"
      responses:
        "200":
          description: Successfully updated a team

    delete:
      operationId: tb_houston_service.team.delete
      tags:
        - team
      summary: Delete a team from the list
      description: Delete a team
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted a team

  /keyValues/team/:
    get:
      operationId: tb_houston_service.team.read_keyValues
      tags:
        - team
      summary: Read the entire list of teams and return them as key value pairs
      description: Read the list of teams and return them as key value pairs
      responses:
        "200":
          description: Successfully read team list operation and returns key value pairs
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    key:
                      type: string
                      description: key
                    value:
                      type: string
                      description: value

  /keyValues/teamsByUserId/{userId}:
    get:
      operationId: tb_houston_service.team.read_key_values_by_user_id
      tags:
        - team
      summary: Read list of teams the user is a member of 
      description: Read list of teams the user is a member of.
      parameters:
        - name: userId
          in: path
          description: the user's id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read team list for user operation and returns key value pairs
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    key:
                      type: string
                      description: key
                    value:
                      type: string
                      description: value

  /users/:
    get:
      operationId: tb_houston_service.user.read_all
      tags:
        - user
      summary: Read the entire list of users
      description: Read the list of users
      responses:
        "200":
          description: Successfully read user list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /user/:
    post:
      operationId: tb_houston_service.user.create
      tags:
        - user
      summary: Create a user and add it to the user list
      description: Create a new user in the user list
      requestBody:
        $ref: '#/components/requestBodies/user.userDetails'
      responses:
        "201":
          description: Successfully created a user

  "/user/{oid}":
    get:
      operationId: tb_houston_service.user.read_one
      tags:
        - user
      summary: Read one user from the list
      description: Read one user from the list
      parameters:
        - name: oid
          in: path
          description: key of the user to get from the list
          required: true
          schema:
            type: integer
      responses:
              "200":
                description: Successfully read an user from the list
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/User"
    put:
      operationId: tb_houston_service.user.update
      tags:
        - user
      summary: Update a user in the list
      description: Update a user in the list
      parameters:
        - name: oid
          in: path
          description: key of the user to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/user.userDetails"
      responses:
        "200":
          description: Successfully updated a user

    delete:
      operationId: tb_houston_service.user.delete
      tags:
        - user
      summary: Delete a user from the list
      description: Delete a user
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted a user


  /teamMembers/:
    get:
      operationId: tb_houston_service.team_member.read_all_full_details
      tags:
        - teammember
      summary: Read the entire list of team members
      description: Read the list of team members
      parameters:
        - in: query
          name: userId
          schema:
            type: integer
        - in: query
          name: teamId
          schema:
            type: integer
        - in: query
          name: active
          schema:
            type: boolean
        - in: query
          name: page
          schema:
            type: integer 
        - in: query
          name: page_size
          schema:
            type: integer 
        - in: query
          name: sort
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        "200":
          description: Successfully read team member list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamMember"

  /teamMember/:
    post:
      operationId: tb_houston_service.team_member.create
      tags:
        - teammember
      summary: Create a team memeber and add it to the team list
      description: Create a new team member in the teammembers list
      requestBody:
        $ref: '#/components/requestBodies/teammember.teamMemberDetails'
      responses:
        "201":
          description: Successfully created a team member

  "/teamMember/{oid}":
    get:
      operationId: tb_houston_service.team_member.read_one
      tags:
        - teammember
      summary: Read one team member from the list
      description: Read one team  memberfrom the list
      parameters:
        - name: oid
          in: path
          description: id of the team member to get from the list
          required: true
          schema:
            type: integer
      responses:
              "200":
                description: Successfully read an team member from the list
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/TeamMember"
    put:
      operationId: tb_houston_service.team_member.update
      tags:
        - teammember
      summary: Update a team member in the list
      description: Update a team member in the list
      parameters:
        - name: oid
          in: path
          description: id of the team member to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/teammember.teamMemberDetails"
      responses:
        "200":
          description: Successfully updated a team member

    delete:
      operationId: tb_houston_service.team_member.delete
      tags:
        - teammember
      summary: Delete a teammember from the list
      description: Delete a team member
      parameters:
        - name: oid
          in: path
          description: id of the team member to delete
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted a teammember

  /cloudRoles/:
    get:
      operationId: tb_houston_service.cloudRole.read_all
      tags:
        - Cloud Role
      summary: Read the entire list of roles
      description: Read the list of roles
      responses:
        "200":
          description: Successfully read role list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CloudRole"

  /cloudRole/:
    post:
      operationId: tb_houston_service.cloudRole.create
      tags:
        - Cloud Role
      summary: Create a role and add it to the role list
      description: Create a new role in the role list
      requestBody:
        $ref: '#/components/requestBodies/cloudRole.cloudRoleDetails'
      responses:
        "201":
          description: Successfully created a cloud role

  "/cloudRole/{id}":
    get:
      operationId: tb_houston_service.cloudRole.read_one
      tags:
        - Cloud Role
      summary: Read one cloud role from the list
      description: Read one cloud role from the list
      parameters:
        - name: id
          in: path
          description: key of the cloud role to get from the list
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read an role from the list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudRole"
    put:
      operationId: tb_houston_service.cloudRole.update
      tags:
        - Cloud Role
      summary: Update a cloud role in the list
      description: Update a cloud role in the list
      parameters:
        - name: id
          in: path
          description: key of the cloud role to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/cloudRole.cloudRoleDetails"
      responses:
        "200":
          description: Successfully updated a cloud role

    delete:
      operationId: tb_houston_service.cloudRole.delete
      tags:
        - Cloud Role
      summary: Delete a cloud role from the list
      description: Delete a cloud role
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted a cloud account

  /userCloudRoles/:
    get:
      operationId: tb_houston_service.userCloudRole.read_all
      tags:
        - User Cloud Role
      summary: Read the entire list of user roles 
      description: Read the list of user roles
      parameters:
        - in: query
          name: userId
          schema:
            type: integer
        - in: query
          name: roleId
          schema:
            type: integer
        - in: query
          name: active
          schema:
            type: boolean
        - in: query
          name: page
          schema:
            type: integer 
        - in: query
          name: page_size
          schema:
            type: integer 
        - in: query
          name: sort
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        "200":
          description: Successfully read team member list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserRole"

  /userCloudRole/:
    post:
      operationId: tb_houston_service.userCloudRole.create
      tags:
        - User Cloud Role
      summary: Add a role to an user 
      description: Add a role to an user 
      requestBody:
        $ref: '#/components/requestBodies/userCloudRole.userCloudRoleDetails'
      responses:
        "201":
          description: Successfully added a role for an user

  "/userCloudRole/{oid}":
    get:
      operationId: tb_houston_service.userCloudRole.read_one
      tags:
        - User Cloud Role
      summary: Read one user role from the list
      description: Read oneuser role from the list
      parameters:
        - name: oid
          in: path
          description: id of the user role to get from the list
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read an user role from the list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRole"
    put:
      operationId: tb_houston_service.userCloudRole.update
      tags:
        - User Cloud Role
      summary: Update a user role in the list
      description: Update a user role in the list
      parameters:
        - name: oid
          in: path
          description: id of the user role to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/userCloudRole.userCloudRoleDetails"
      responses:
        "200":
          description: Successfully updated a user-role

    delete:
      operationId: tb_houston_service.userCloudRole.delete
      tags:
        -  User Cloud Role
      summary: Delete a user role from the list
      description: Delete a user role
      parameters:
        - name: oid
          in: path
          description: id of the user role to delete
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted a user-role 


  /keyValues/environment/:
    get:
      operationId: tb_houston_service.lzmetadata_env.read_all_key_values
      tags:
        - lzmetadata
      summary: Read the entire list of environments
      description: Read the list of environments
      responses:
        "200":
          description: Successfully read environments list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    key:
                      type: integer
                      description: key
                    value:
                      type: string
                      description: value

  /keyValues/ci/:
    get:
      operationId: tb_houston_service.ci.read_keyValues
      tags:
        - ci
      summary: Read  ci list in key value pairs
      description: Read  ci list in key value pairs
      responses:
        "200":
          description: Successfully read an ci from the list
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: integer
                  value:
                    type: string
  /ci/:
    get:
      operationId: tb_houston_service.ci.read_all
      tags:
        - ci
      summary: Read the entire list of CIs
      description: Read the list of CIs
      responses:
        "200":
          description: Successfully read CI list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      description: id
                    value:
                      type: string
                      description: value
    post:
      operationId: tb_houston_service.ci.create
      tags:
        - ci
      summary: Create an ci and add it to the ci list
      description: Create a new ci in the ci list
      requestBody:
        $ref: '#/components/requestBodies/ci.ciDetails'
      responses:
        "201":
          description: Successfully created an ci

  "/ci/{id}":
    get:
      operationId: tb_houston_service.ci.read_one
      tags:
        - ci
      summary: Read one ci from the list
      description: Read one ci from the list
      parameters:
        - name: id
          in: path
          description: id of the ci to get from the list
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read an ci from the list
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  value:
                    type: string
    put:
      operationId: tb_houston_service.ci.update
      tags:
        - ci
      summary: Update an ci in the list
      description: Update an ci in the list
      parameters:
        - name: id
          in: path
          description: id of the ci to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/ci.ciDetails"
      responses:
        "200":
          description: Successfully updated an CI
    delete:
      operationId: tb_houston_service.ci.delete
      tags:
        - ci
      summary: Delete an CI from the list
      description: Delete an CI
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted an CI
  

  /keyValues/cd/:
    get:
      operationId: tb_houston_service.cd.read_keyValues
      tags:
        - cd
      summary: Read  cd list in key value pairs
      description: Read  cd list in key value pairs
      responses:
        "200":
          description: Successfully read an cd from the list
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: integer
                  value:
                    type: string
  /cd/:
    get:
      operationId: tb_houston_service.cd.read_all
      tags:
        - cd
      summary: Read the entire list of CDs
      description: Read the list of CDs
      responses:
        "200":
          description: Successfully read CD list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      description: id
                    value:
                      type: string
                      description: value
    post:
      operationId: tb_houston_service.cd.create
      tags:
        - cd
      summary: Create a continuous deployment and add it to the continuous deployment list
      description: Create a new continuous deployment in the continuous deployment list
      requestBody:
        $ref: '#/components/requestBodies/cd.cdDetails'
      responses:
        "201":
          description: Successfully created an continuous deployment
  "/cd/{id}":
    get:
      operationId: tb_houston_service.cd.read_one
      tags:
        - cd
      summary: Read one continuous deployment from the list
      description: Read one continuous deployment from the list
      parameters:
        - name: id
          in: path
          description: key of the continuous deployment to get from the list
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read an continuous deployment from the list
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  value:
                    type: string
    put:
      operationId: tb_houston_service.cd.update
      tags:
        - cd
      summary: Update an cd in the list
      description: Update an cd in the list
      parameters:
        - name: id
          in: path
          description: key of the cd to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/cd.cdDetails"
      responses:
        "200":
          description: Successfully updated a continuous deployment 
    delete:
      operationId: tb_houston_service.cd.delete
      tags:
        - cd
      summary: Delete a continuous deployment from the list
      description: Delete a continuous deployment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted a continuous deployment

  /keyValues/sourceControl/:
    get:
      operationId: tb_houston_service.sourcecontrol.read_keyValues
      tags:
        - sourcecontrol
      summary: Read the entire list of source control types
      description: Read the list of source control types
      responses:
        "200":
          description: Successfully read source control type list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    key:
                      type: integer
                      description: id of the source control
                    value:
                      type: string
                      description: name of the source control
  /sourceControl/:
    get:
      operationId: tb_houston_service.sourcecontrol.read_all
      tags:
        - sourcecontrol
      summary: Read the entire list of source control types
      description: Read the list of source control types
      responses:
        "200":
          description: Successfully read source control type list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      description: id of the source control
                    value:
                      type: string
                      description: name of the source control
    post:
      operationId: tb_houston_service.sourcecontrol.create
      tags:
        - sourcecontrol
      summary: Create an source control type and add it to the source control type list
      description: Create a new soure control in the source control type list
      requestBody:
        $ref: '#/components/requestBodies/sourceControl.sourceControlDetails'
      responses:
        "201":
          description: Successfully created a source control type

  "/sourceControl/{id}":
    get:
      operationId: tb_houston_service.sourcecontrol.read_one
      tags:
        - sourcecontrol
      summary: Read one source control type from the list
      description: Read one source control type from the list
      parameters:
        - name: id
          in: path
          description: key of the source control to get from the list
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read an source control from the list
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  value:
                    type: string
    put:
      operationId: tb_houston_service.sourcecontrol.update
      tags:
        - sourcecontrol
      summary: Update a source control in the list
      description: Update an source control in the list
      parameters:
        - name: id
          in: path
          description: key of the source control to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/sourceControl.sourceControlDetails"
      responses:
        "200":
          description: Successfully updated an source control
    delete:
      operationId: tb_houston_service.sourcecontrol.delete
      tags:
        - sourcecontrol
      summary: Delete an source control from the list
      description: Delete an source control
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted a source control

  /keyValues/businessUnit/:
    get:
      operationId: tb_houston_service.businessUnit.read_keyValues
      tags:
        - businessUnit
      summary: Read the entire list of business units and return them as key value pairs
      description: Read the list of business units and return them as key value pairs
      responses:
        "200":
          description: Successfully read business unit list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    key:
                      type: int
                      description: id
                    value:
                      type: string
                      description: value

  /businessunits/:
    get:
      operationId: tb_houston_service.businessUnit.read_all
      tags:
        - businessUnit
      summary: Read the entire list of business units 
      description: Read the list of business units
      responses:
        "200":
          description: Successfully read business unit list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BusinessUnit"
                  
  /businessunit/:
    post:
      operationId: tb_houston_service.businessUnit.create
      tags:
        - businessUnit
      summary: Create an business unit and add it to the business unit list
      description: Create a new business unit in the business unit list
      requestBody:
        $ref: "#/components/requestBodies/businessUnit.businessUnitDetails"
        required: true
      responses:
        "201":
          description: Successfully created an business unit

  "/businessunit/{oid}":
    get:
      operationId: tb_houston_service.businessUnit.read_one
      tags:
        - businessUnit
      summary: Read one business unit from the list
      description: Read one business unit from the list
      parameters:
        - name: oid
          in: path
          description: id of the business unit to get from the list
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read an business unit from the list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessUnit"
    put:
      operationId: tb_houston_service.businessUnit.update
      tags:
        - businessUnit
      summary: Update an business unit in the list
      description: Update an business unit in the list
      parameters:
        - name: oid
          in: path
          description: key of the business unit to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/businessUnit.businessUnitDetails"
      responses:
        "200":
          description: Successfully updated an business unit
    delete:
      operationId: tb_houston_service.businessUnit.delete
      tags:
        - businessUnit
      summary: Delete an business unit from the list
      description: Delete an business unit
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted an business unit

  /solutions/:
    get:
      operationId: tb_houston_service.solution.read_all
      tags:
        - solution
      summary: Read the entire list of solutions
      description: Read the list of solutions
      parameters:
        - in: query
          name: isActive
          schema:
            type: boolean
        - in: query            
          name: isFavourite
          schema:
            type: boolean             
        - in: query
          name: namesonly
          schema:
            type: boolean
        - in: query 
          name: page
          schema:
            type: integer
        - in: query 
          name: page_size
          schema:
            type: integer
        - in: query 
          name: sort
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        "200":
          description: Successfully read solutions list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Solution"

  /solution/:
    post:
      operationId: tb_houston_service.solution.create
      tags:
        - solution
      summary: Create a solution and add it to the solutions list
      description: Create a new solution in the solutions list
      requestBody:
        $ref: "#/components/requestBodies/solution.solutionDetails"
        description: solution to create
      responses:
        "201":
          description: Successfully created a solution
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Solution"          

  "/solution/{oid}":
    get:
      operationId: tb_houston_service.solution.read_one
      tags:
        - solution
      summary: Read a single solution
      description: Read a single solution
      parameters:
        - name: oid
          in: path
          description: the id of the solution
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read a solution
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Solution"

    put:
      operationId: tb_houston_service.solution.update
      tags:
        - solution
      summary: Update a solution in the list
      description: Update an solution in the list
      parameters:
        - name: oid
          in: path
          description: key of the solution to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/solution.solutionDetails"
      responses:
        "200":
          description: Successfully updated a solution
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Solution"          

    delete:
      operationId: tb_houston_service.solution.delete
      tags:
        - solution
      summary: Delete a solution from the list
      description: Delete a solution
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted a solution


  /applicationDeployments/:
    get:
      operationId: tb_houston_service.application_deployment.deployment_read_all
      tags:
        - application
      summary: Read the entire list of deployed applications
      description: Read the list of deployed applications
      responses:
        "200":
          description: Successfully read applications list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApplicationDeployment"

  /applicationDeployment/:
    post:
      operationId: tb_houston_service.application_deployment.deployment_create
      tags:
        - application
      summary: receive application id from the Eagle Console and then post the complete Application to the DaC
      description: receive application id from the Eagle Console and then post the complete Application to the DaC
      requestBody:
        $ref: "#/components/requestBodies/application.applicationDeploymentPostDetails"
      responses:
        "201":
          description: Successfully created an Application Deployment


  /solutiondeployments/:
    get:
      operationId: tb_houston_service.solution_deployment.deployment_read_all
      tags:
        - solution
      summary: Read the entire list of deployed solutions
      description: Read the list of deployed solutions
      responses:
        "200":
          description: Successfully read solutions list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SolutionDeployment"

  /solutiondeployment/:
    post:
      operationId: tb_houston_service.solution_deployment.deployment_create
      tags:
        - solution
      summary: receive solution id from the Eagle Console and then post the complete Solution to the DaC
      description: receive solution id from the Eagle Console and then post the complete Solution to the DaC
      requestBody:
        $ref: "#/components/requestBodies/solution.solutionDeploymentPostDetails"
      responses:
        "201":
          description: Successfully created a Solution Deployment

  "/solutiondeployment/{oid}":
    get:
      operationId: tb_houston_service.solution_deployment.deployment_read_one
      tags:
        - solution
      summary: Read a solution deployment from the list 
      description: Read solution deployment from the list
      parameters:
        - name: oid
          in: path
          description: id of the solution to update
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully updated a solution deployment
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SolutionDeployment"

    put:
      operationId: tb_houston_service.solution_deployment.deployment_update
      tags:
        - solution
      summary: Update a solution deployment in the list with the deployed state
      description: Update a solution deployment in the list with the deployed state
      parameters:
        - name: oid
          in: path
          description: id of the solution to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/solution.solutionDeploymentPutDetails"
      responses:
        "200":
          description: Successfully updated a solution deployment


  "/solutionEnvironment/":
    post:
      operationId: tb_houston_service.solution_environment.create_all
      tags:
        - solution
      summary: Create or update solution environment relationships
      description: Create or update solution environment relationships
      requestBody:
        $ref: "#/components/requestBodies/solution.solutionEnvironmentDetails"
      responses:
        "201":
          description: Successfully created solution environments

    get:
      operationId: tb_houston_service.solution_environment.read_all
      tags:
        - solution
      summary: Retrieve a list of solution environment relationships
      description: Retrieve a list of environment relationships
      responses:
        "200":
          description: Successfully retrieved a list of solution environments


  /solutionresources/:
    get:
      operationId: tb_houston_service.solutionresource.read_all
      tags:
        - solutionresource
      summary: Read the entire list of solution resources
      description: Read the list of solution resources
      responses:
        "200":
          description: Successfully read solution resources list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SolutionResource"

  /solutionresource/:
    post:
      operationId: tb_houston_service.solutionresource.create
      tags:
        - solutionresource
      summary: Create a solution resource
      description: Create a solution resource
      requestBody:
        $ref: "#/components/requestBodies/solutionresource.solutionResourceDetails"
        description: solution resource contains the solution id
      responses:
        "201":
          description: Successfully created a Solution Resource

  "/solutionresource/{solutionId}/{key}":
    get:
      operationId: tb_houston_service.solutionresource.read_one
      tags:
        - solutionresource
      summary: Read a solution resource
      description: Read a solution resource
      parameters:
        - name: solutionId
          in: path
          description: composite key of the solution resource to update
          required: true
          schema:
            type: integer
        - name: key
          in: path
          description: composite key of the solution resource to update
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully read a Solution Resource

    delete:
      operationId: tb_houston_service.solutionresource.delete
      tags:
        - solutionresource
      summary: Delete a solution resource from the list
      description: Delete a solution resource
      parameters:
        - name: solutionId
          in: path
          required: true
          schema:
            type: integer
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully deleted a solution resource

  /solutionresourcejsons/:
    get:
      operationId: tb_houston_service.solutionresourcejson.read_all
      tags:
        - solutionresourcejson
      summary: Read the entire list of solution resource jsons
      description: Read the list of solution resource jsons
      responses:
        "200":
          description: Successfully read solution resource jsons list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SolutionResourceJSON"

  /solutionresourcejson/:
    post:
      operationId: tb_houston_service.solutionresourcejson.create
      tags:
        - solutionresourcejson
      summary: Create a solution resource json
      description: Create a solution resource json
      requestBody:
        $ref: "#/components/requestBodies/solutionresourcejson.solutionResourceJSONDetails"
      responses:
        "201":
          description: Successfully created a Solution Resource JSON

  "/solutionresourcejson/{solutionId}":
    get:
      operationId: tb_houston_service.solutionresourcejson.read_one
      tags:
        - solutionresourcejson
      summary: Read a solution resource json
      description: Read a solution resource json
      parameters:
        - name: solutionId
          in: path
          description: key of the solution resource json to update
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read a Solution Resource JSON

    delete:
      operationId: tb_houston_service.solutionresourcejson.delete
      tags:
        - solutionresourcejson
      summary: Delete a solution resource JSON from the list
      description: Delete a solution resource JSON
      parameters:
        - name: solutionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted a solution resource JSON


  /activators/:
    get:
      operationId: tb_houston_service.activator.read_all
      tags:
        - activator
      summary: Read the entire list of activators
      description: Read the list of activators
      parameters:
        - in: query
          name: isActive
          schema:
            type: boolean   
        - in: query
          name: isFavourite
          schema:
            type: boolean                    
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: environment
          schema:
            type: string
        - in: query
          name: platform
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: sensitivity
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer 
        - in: query
          name: page_size
          schema:
            type: integer 
        - in: query
          name: sort
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        "200":
          description: Successfully ran activator list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Activator"

  /activator/:
    post:
      operationId: tb_houston_service.activator.create
      tags:
        - activator
      summary: Create an activator and add it to the activator list
      description: Create a new activator in the activator list
      requestBody:
        $ref: "#/components/requestBodies/activator.activatorDetails"
      responses:
        "201":
          description: Successfully created an activator

  "/activator/{oid}":
    get:
      operationId: tb_houston_service.activator.read_one
      tags:
        - activator
      summary: Read one activator from the list
      description: Read one activator from the list
      parameters:
        - name: oid
          in: path
          description: key of the activator to get from the list
          required: true
          schema:
            type: string           
      responses:
        "200":
          description: Successfully read an activator from the list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Activator"
    put:
      operationId: tb_houston_service.activator.update
      tags:
        - activator
      summary: Update an activator in the list
      description: Update an activator in the list
      parameters:
        - name: oid
          in: path
          description: key of the activator to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/activator.activatorDetails"
      responses:
        "200":
          description: Successfully updated an activator

    delete:
      operationId: tb_houston_service.activator.delete
      tags:
        - activator
      summary: Delete an activator from the list
      description: Delete an activator
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted an activator

  /setactivatorstatus/:
    post:
      operationId: tb_houston_service.activator.setActivatorStatus
      tags:
        - activator
      summary: set activator status
      description: set activator status
      requestBody:
        $ref: "#/components/requestBodies/activator.setActivatorStatusDetails"
      responses:
        "200":
          description: Successfully updated an activator
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status:
                    type: string

  /activatorcategories/:
    get:
      operationId: tb_houston_service.activator.categories
      tags:
        - activator
      summary: Read the entire list of activator categories
      description: Read the list of activator categories
      responses:
        "200":
          description: Successfully retrieved a list of activator categories
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    category:
                      type: string

  /landingzoneprogressitems/:
    get:
      operationId: tb_houston_service.landingzoneprogressitem.read_all
      tags:
        - landingzoneprogressitem
      summary: Read the entire list of landing zone progress items
      description: Read the list of landing zone progress items
      responses:
        "200":
          description: Successfully ran landing zone progress item list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LandingZoneProgressItem"

  /landingzoneprogressitem/:
    post:
      operationId: tb_houston_service.landingzoneprogressitem.create
      tags:
        - landingzoneprogressitem
      summary: Create a landing zone progress item and add it to the landing zone progress item list
      description: Create a new new landing zone progress item in the landing zone progress item
        list
      requestBody:
        $ref: '#/components/requestBodies/landingZoneProgressItem.landingZoneProgressItemDetails'
      responses:
        "200":
          description: Successfully created a landing zone progress item
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: id the primary key of the object
                  label:
                    type: string
                    description: label
                  completed:
                    type: boolean
                    description: completed
                    
  "/landingzoneprogressitem/{oid}":
    get:
      operationId: tb_houston_service.landingzoneprogressitem.read_one
      tags:
        - landingzoneprogressitem
      summary: Read one landing zone progress item from the list
      description: Read one landing zone progress item from the list
      parameters:
        - name: oid
          in: path
          description: key of the landing zone progress item to get from the list
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read an landing zone progress item from the list
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  label:
                    type: string
                  completed:
                    type: boolean
    put:
      operationId: tb_houston_service.landingzoneprogressitem.update
      tags:
        - landingzoneprogressitem
      summary: Update an landing zone progress item in the list
      description: Update an landing zone progress item in the list
      parameters:
        - name: oid
          in: path
          description: key of the landing zone progress item to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/landingZoneProgressItem.landingZoneProgressItemDetails'
      responses:
        "200":
          description: Successfully updated an landing zone progress item
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  label:
                    type: string
                  completed:
                    type: boolean

    delete:
      operationId: tb_houston_service.landingzoneprogressitem.delete
      tags:
        - landingzoneprogressitem
      summary: Delete a landing zone progress item from the list
      description: Delete a landing zone progress item
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully deleted a landing zone progress item

  /landingzoneactions/:
    get:
      operationId: tb_houston_service.landingzoneaction.read_all
      tags:
        - landingzoneaction
      summary: Read the entire list of landing zone actions
      description: Read the list of landing zone actions
      responses:
        "200":
          description: Successfully ran landing zone action list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      description: id
                    title:
                      type: string
                      description: title
                    categoryName:
                      type: string
                      description: categoryName
                    categoryClass:
                      type: string
                      description: categoryClass
                    completionRate:
                      type: integer
                      description: completionRate
                    locked:
                      type: boolean
                      description: locked
                    routerLink:
                      type: string
                      description: routerLink

  /landingzoneaction/:
    post:
      operationId: tb_houston_service.landingzoneaction.create
      tags:
        - landingzoneaction
      summary: Create a landing zone action and add it to the landing zone action list
      description: Create a new new landing zone action in the landing zone action list
      requestBody:
        $ref: "#/components/requestBodies/landingZoneAction.landingZoneActionDetails"
      responses:
        "200":
          description: Successfully created a landing zone action
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LandingZoneAction"

  "/landingzoneaction/{oid}":
    get:
      operationId: tb_houston_service.landingzoneaction.read_one
      tags:
        - landingzoneaction
      summary: Read one landing zone action from the list
      description: Read one landing zone action from the list
      parameters:
        - name: oid
          in: path
          description: key of the landing zone action to get from the list
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read an landing zone action from the list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LandingZoneAction"

    put:
      operationId: tb_houston_service.landingzoneaction.update
      tags:
        - landingzoneaction
      summary: Update an landing zone action in the list
      description: Update an landing zone action in the list
      parameters:
        - name: oid
          in: path
          description: key of the landing zone action to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/landingZoneAction.landingZoneActionDetails"
      responses:
        "200":
          description: Successfully updated a landing zone action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LandingZoneAction"

    delete:
      operationId: tb_houston_service.landingzoneaction.delete
      tags:
        - landingzoneaction
      summary: Delete a landing zone action from the list
      description: Delete a landing zone action
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully deleted a landing zone action

  /lzEnvironmentDeployment/:
    post:
      operationId: tb_houston_service.lz_action_deployment.environment_deployment
      tags:
        - lzdeployment
      summary: Landing Zone action deployments
      description: Landing Zone Action Deployments
      responses:
        "200":
          description: Successfully performed a landing zone action
          content:
            application/json:
              schema:
                type: object
                properties:
                  deployment:
                    type: boolean
                    description: The response format

  /landingzonewans/:
    get:
      operationId: tb_houston_service.landingzonewan.read_all
      tags:
        - landingzonewan
      summary: Read the entire list of landing zone WANs
      description: Read the list of landing zone WANs
      responses:
        "200":
          description: Successfully ran landing zone WAN list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LandingZoneWAN"

  /landingzonewan/:
    post:
      operationId: tb_houston_service.landingzonewan.create
      tags:
        - landingzonewan
      summary: Create a landingzonewan and add it to the landing zone WAN list
      description: Create a new new landingzonewan in the landing zone WAN list
      requestBody:
        $ref: "#/components/requestBodies/landingZoneWAN.landingZoneWANDetails"
      responses:
        "201":
          description: Successfully created a landing zone WAN

  "/landingzonewan/{oid}":
    get:
      operationId: tb_houston_service.landingzonewan.read_one
      tags:
        - landingzonewan
      summary: Read one landing zone WAN from the list
      description: Read one landing zone WAN from the list
      parameters:
        - name: oid
          in: path
          description: key of the landing zone WAN to get from the list
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read an landing zone WAN from the list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LandingZoneWAN"

    put:
      operationId: tb_houston_service.landingzonewan.update
      tags:
        - landingzonewan
      summary: Update an landing zone WAN in the list
      description: Update an landing zone WAN in the list
      parameters:
        - name: oid
          in: path
          description: key of the landing zone WAN to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/landingZoneWAN.landingZoneWANDetails"
      responses:
        "200":
          description: Successfully updated a landing zone WAN

    delete:
      operationId: tb_houston_service.landingzonewan.delete
      tags:
        - landingzonewan
      summary: Delete a landing zone WAN from the list
      description: Delete a landing zone WAN
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully deleted a landing zone WAN


  "/lzmetadataEnv/":
    post:
      operationId: tb_houston_service.lzmetadata_env.create_all
      tags:
        - lzmetadata
      summary: Create or update landing zone env metadata from a list of environments
      description: Create or update landing zone env metadata from a list of environments
      parameters:
        - in: query
          name: readActiveOnly
          schema:
            type: boolean
        - in: query
          name: bulkDelete
          schema:
            type: boolean  
      requestBody:
        $ref: "#/components/requestBodies/lzMetadata.lzMetadataEnvListDetails"
      responses:          
        "201":
          description: Successfully created list of landing zone metadata environments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LZMetaDataEnvList"                 

    get:
      operationId: tb_houston_service.lzmetadata_env.read_all
      tags:
        - lzmetadata
      summary: Retrieve a list of active landing zone metadata environments
      description: Retrieve a list of active landing zone metadata environments
      parameters:
        - in: query
          name: readActiveOnly
          schema:
            type: boolean    
      responses:
        "200":
          description: Successfully retrieved a list of landing zone metadata environments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LZMetaDataEnvList"          


  "/lzmetadataLanVpc/":
    post:
      operationId: tb_houston_service.lzlanvpc.create_all
      tags:
        - lzmetadata
      summary: Create or update landing zone metadata for a given group and name
      description: Create or update landing zone metadata for a given group and name  
      parameters:      
        - in: query
          name: readActiveOnly
          schema:
            type: boolean
        - in: query
          name: bulkDelete
          schema:
            type: boolean         
      requestBody:
        $ref: "#/components/requestBodies/lzMetadata.lzLanVpcListDetails"
      responses:
        "201":
          description: Successfully created a landing zone metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LZLanVpcResponseList"

    get:
      operationId: tb_houston_service.lzlanvpc.read
      tags:
        - lzmetadata
      summary: Read the landing zone metadata
      description: Read the landing zone metadata    
      parameters:      
        - in: query
          name: readActiveOnly
          schema:
            type: boolean     
      responses:
        "200":
          description: Successfully ran landing zone metadata 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LZLanVpcResponseList"
        
                
  "/lzmetadataFolderStructure/":
    post:
      operationId: tb_houston_service.lzfolderstructure.create
      tags:
        - lzmetadata
      summary: Create or update landing zone folder structure metadata
      description: Create or update landing zone folder structure metadata
      requestBody:
        $ref: "#/components/requestBodies/lzMetadata.lzMetadataFolderStructureDetails"
      responses:
        "201":
          description: Successfully created a landing zone folder structure metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LZMetaDataFolderStructure"          

    get:
      operationId: tb_houston_service.lzfolderstructure.read
      tags:
        - lzmetadata
      summary: Read the landing zone folder structure metadata
      description: Read the landing zone folder structure metadata
      responses:
        "200":
          description: Successfully read an landing zone metadata 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LZMetaDataFolderStructure"

    delete:
      operationId: tb_houston_service.lzmetadata_folder_structure.delete
      tags:
        - lzmetadata
      summary: Delete the landing zone folder structure metadata
      description: Delete the landing zone  folder metadata
      responses:
        "200":
          description: Successfully deleted the landing zone folder structure metadata


  /keyValues/bgproutingmode/:
    get:
      operationId: tb_houston_service.bgpRoutingMode.read_all
      tags:
        - bgproutingmode
      summary: Read the entire list of BGPRoutingModes
      description: Read the list of BGPRoutingModes
      responses:
        "200":
          description: Successfully read BGPRoutingModes list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BGPRoutingMode"

    post:
      operationId: tb_houston_service.bgpRoutingMode.create
      tags:
        - bgproutingmode
      summary: Create an BGPRoutingMode and add it to the BGPRoutingMode list
      description: Create a new BGPRoutingMode in the BGPRoutingMode list
      requestBody:
        $ref: "#/components/requestBodies/bgpRoutingMode.bgpRoutingModeDetails"
      responses:
        "201":
          description: Successfully created an bgpRoutingMode

  "/keyValues/bgproutingmode/{oid}":
    get:
      operationId: tb_houston_service.bgpRoutingMode.read_one
      tags:
        - bgproutingmode
      summary: Read one bgproutingmode from the list
      description: Read one bgproutingmode from the list
      parameters:
        - name: oid
          in: path
          description: id of the bgpRoutingMode to get from the list
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read a bgpRoutingMode from the list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BGPRoutingMode"

    put:
      operationId: tb_houston_service.bgpRoutingMode.update
      tags:
        - bgproutingmode
      summary: Update an bgpRoutingMode in the list
      description: Update an bgpRoutingMode in the list
      parameters:
        - name: oid
          in: path
          description: id of the bgpRoutingMode to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/bgpRoutingMode.bgpRoutingModeDetails"
      responses:
        "200":
          description: Successfully updated a bgproutingmode

    delete:
      operationId: tb_houston_service.bgpRoutingMode.delete
      tags:
        - bgproutingmode
      summary: Delete an bgproutingmode from the list
      description: Delete a bgproutingmode
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted a bgproutingmode

  /keyValues/subnetmode/:
    get:
      operationId: tb_houston_service.subnetMode.read_all
      tags:
        - subnetmode
      summary: Read the entire list of SubnetModes
      description: Read the list of SubnetModes
      responses:
        "200":
          description: Successfully read SubnetModes list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SubnetMode"

    post:
      operationId: tb_houston_service.subnetMode.create
      tags:
        - subnetmode
      summary: Create an subnetMode and add it to the subnetMode list
      description: Create a new subnetMode in the subnetMode list
      requestBody:
        $ref: "#/components/requestBodies/subnetMode.subnetModeDetails"
      responses:
        "201":
          description: Successfully created an subnetMode

  "/keyValues/subnetmode/{oid}":
    get:
      operationId: tb_houston_service.subnetMode.read_one
      tags:
        - subnetmode
      summary: Read one subnetmode from the list
      description: Read one subnetmode from the list
      parameters:
        - name: oid
          in: path
          description: id of the subnetMode to get from the list
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read a subnetMode from the list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubnetMode"

    put:
      operationId: tb_houston_service.subnetMode.update
      tags:
        - subnetmode
      summary: Update an subnetMode in the list
      description: Update an subnetMode in the list
      parameters:
        - name: oid
          in: path
          description: id of the subnetMode to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/subnetMode.subnetModeDetails"
      responses:
        "200":
          description: Successfully updated a subnetmode

    delete:
      operationId: tb_houston_service.subnetMode.delete
      tags:
        - subnetmode
      summary: Delete an subnetmode from the list
      description: Delete a subnetmode
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted a subnetmode

  /keyValues/vpnonpremisevendor/:
    get:
      operationId: tb_houston_service.vpnOnPremiseVendor.read_all
      tags:
        - vpnonpremisevendor
      summary: Read the entire list of vpnOnPremiseVendors
      description: Read the list of vpnOnPremiseVendors
      responses:
        "200":
          description: Successfully read vpnOnPremiseVendor list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VPNOnPremiseVendor"

    post:
      operationId: tb_houston_service.vpnOnPremiseVendor.create
      tags:
        - vpnonpremisevendor
      summary: Create an vpnOnPremiseVendor and add it to the vpnOnPremiseVendor list
      description: Create a new vpnOnPremiseVendor in the vpnOnPremiseVendor list
      requestBody:
        $ref: "#/components/requestBodies/vpnOnPremiseVendor.vpnOnPremiseVendorDetails"
        description: vpnOnPremiseVendor to create
        required: true
      responses:
        "201":
          description: Successfully created an VPNOnPremiseVendor

  "/keyValues/vpnonpremisevendor/{oid}":
    get:
      operationId: tb_houston_service.vpnOnPremiseVendor.read_one
      tags:
        - vpnonpremisevendor
      summary: Read one vpnOnPremiseVendor from the list
      description: Read one vpnOnPremiseVendor from the list
      parameters:
        - name: oid
          in: path
          description: id of the vpnOnPremiseVendor to get from the list
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read a vpnOnPremiseVendor from the list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VPNOnPremiseVendor"

    put:
      operationId: tb_houston_service.vpnOnPremiseVendor.update
      tags:
        - vpnonpremisevendor
      summary: Update an vpnOnPremiseVendor in the list
      description: Update an vpnOnPremiseVendor in the list
      parameters:
        - name: oid
          in: path
          description: id of the vpnOnPremiseVendor to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/vpnOnPremiseVendor.vpnOnPremiseVendorDetails"
      responses:
        "200":
          description: Successfully updated a vpnOnPremiseVendor

    delete:
      operationId: tb_houston_service.vpnOnPremiseVendor.delete
      tags:
        - vpnonpremisevendor
      summary: Delete an VPNOnPremiseVendor from the list
      description: Delete a vpnOnPremiseVendor
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted a vpnOnPremiseVendor


  /folders/:
    get:
      operationId: tb_houston_service.folder.read_all
      tags:
        - folder
      summary: Read the entire list of folders
      description: Read the list of folders
      responses:
        "200":
          description: Successfully read folder list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Folder"

  /folder/:
    post:
      operationId: tb_houston_service.folder.create
      tags:
        - folder
      summary: Create a folder and add it to the folder list
      description: Create a new folder in the folder list
      requestBody:
        $ref: "#/components/requestBodies/folder.folderDetails"
        description: folder to create
        required: true
      responses:
        "201":
          description: Successfully created a Folder

  "/folder/{oid}":
    get:
      operationId: tb_houston_service.folder.read_one
      tags:
        - folder
      summary: Read one folder rom the list
      description: Read one folder from the list
      parameters:
        - name: oid
          in: path
          description: id of the folder to get from the list
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully read a folder from the list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"

    put:
      operationId: tb_houston_service.folder.update
      tags:
        - folder
      summary: Update a folder in the list
      description: Update a folder in the list
      parameters:
        - name: oid
          in: path
          description: id of the folder to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/folder.folderDetails"
      responses:
        "200":
          description: Successfully updated a folder

    delete:
      operationId: tb_houston_service.folder.delete
      tags:
        - folder
      summary: Delete a folder from the list
      description: Delete a folder
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully deleted a folder


  "/notifications/":
    post:
      operationId: tb_houston_service.notification.create_all
      tags:
        - notification
      summary: Create or update notifications
      description: Create or update notifications
      parameters:
        - in: query
          name: typeId
          schema:
            type: integer
          required: true
        - in: query          
          name: toUserId
          schema:
            type: integer        
        - in: query
          name: isRead
          schema:
            type: boolean
        - in: query
          name: isActive
          schema:
            type: boolean
        - in: query 
          name: page
          schema:
            type: integer
        - in: query 
          name: page_size
          schema:
            type: integer            
        - in: query
          name: sort
          schema:
            type: array
            items:
              type: string      
      requestBody:
        $ref: "#/components/requestBodies/notification.notificationListDetails"
      responses:
        "201":
          description: Successfully created notifications
          content:
            application/json:
              schema:                
                oneOf:
                  - $ref: "#/components/schemas/NotificationActivatorList"
    
    get:
      operationId: tb_houston_service.notification.read_all
      tags:
        - notification
      summary: Read notifications
      description: Read notifications
      parameters:
        - in: query
          name: typeId
          schema:
            type: integer
        - in: query             
          name: toUserId
          schema:
            type: integer                
        - in: query
          name: isRead
          schema:
            type: boolean
        - in: query
          name: isActive
          schema:
            type: boolean
        - in: query 
          name: page
          schema:
            type: integer
        - in: query 
          name: page_size
          schema:
            type: integer            
        - in: query
          name: sort
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successfully read notifications
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/NotificationActivatorList" 

  "/notificationsMeta/":
    get:
      operationId: tb_houston_service.notification.meta
      tags:
        - notification
      summary: Read notications meta
      description: Read notifications meta
      parameters:
        - in: query
          name: typeId
          schema:
            type: integer
          required: true
        - in: query             
          name: toUserId
          schema:
            type: integer
        - in: query
          name: isRead
          schema:
            type: boolean
        - in: query
          name: isActive
          schema:
            type: boolean                                
      responses:
        "200":
          description: Successfully read notifications metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer


  "/getGCPProjectURL/{projectId}":
    get:
      operationId: tb_houston_service.lzmetadata.get_gcp_project_id
      tags:
        - lzmetadata
      summary: Read the GCP Project URL
      description: Read the GCP Project URL
      parameters:
        - name: projectId
          in: path
          description: the gcp project id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully read the gcp project url
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyValue"


  "/lzmetadata/":
    post:
      operationId: tb_houston_service.lzmetadata.create
      tags:
        - lzmetadata
      summary: Create a new lzmetadata
      description: Create a new lzmetadata
      requestBody:
        $ref: "#/components/requestBodies/generic.keyValueDetails"
      responses:
        "201":
          description: Successfully updated a lzmetadata

  "/lzmetadata/{key}":
    put:
      operationId: tb_houston_service.lzmetadata.update
      tags:
        - lzmetadata
      summary: Update a lzmetadata from the list
      description: Update a lzmetadata from the list
      parameters:
        - name: key
          in: path
          description: key of the lzmetadata to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/generic.keyValueDetails"             
      responses:
        "200":
          description: Successfully update a lzmetadata from the list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyValue"

    get:
      operationId: tb_houston_service.lzmetadata.read
      tags:
        - lzmetadata
      summary: Read one lzmetadata from the list
      description: Read one lzmetadata from the list
      parameters:
        - name: key
          in: path
          description: id of the lzmetadata to get from the list
          required: true
          schema:
            type: string         
      responses:
        "200":
          description: Successfully read a lzmetadata from the list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyValue"


components:

  # Define the security scheme type (HTTP bearer)
  securitySchemes:
    bearerAuth: # arbotrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: tb_houston_service.security.decode_token

  requestBodies:
    application.applicationDetails:
      content:
        application/json:
          schema:
            x-body-name: applicationDetails
            $ref: "#/components/schemas/Application"
      description: The application to create
      required: true

    application.applicationDeploymentPostDetails:
      content:
        application/json:
          schema:
            x-body-name: applicationDeploymentDetails
            type: object
            properties:
              id:
                type: integer
                description: The id of the application that is being deployed      

    activator.activatorDetails:
      content:
        application/json:
          schema:
            x-body-name: activatorDetails
            $ref: "#/components/schemas/Activator"
      description: activator to create
      required: true

    activator.setActivatorStatusDetails:
      content:
        application/json:
          schema:
            x-body-name: activatorDetails
            type: object
            properties:
              id:
                type: integer
              status:
                type: string
              accessRequestedById:
                type: integer
      required: true

    businessUnit.businessUnitDetails:
      content:
        application/json:
          schema:
            x-body-name: businessUnitDetails
            $ref: "#/components/schemas/BusinessUnit"
      description: BusinessUnit to create
      required: true

    ci.ciDetails:
      content:
        application/json:
          schema:
            x-body-name: ciDetails
            $ref: "#/components/schemas/CI"
      description: CI to create
      required: true

    cd.cdDetails:
      content:
        application/json:
          schema:
            x-body-name: cdDetails
            $ref: "#/components/schemas/CI"
      description: CD to create
      required: true
      
    sourceControl.sourceControlDetails:
      content:
        application/json:
          schema:
            x-body-name: sourceControlDetails
            $ref: "#/components/schemas/SourceControl"
      description: SourceControl to create
      required: true
      
    landingZoneAction.landingZoneActionDetails:
      content:
        application/json:
          schema:
            x-body-name: landingZoneActionDetails
            $ref: "#/components/schemas/LandingZoneAction"
      description: landingzoneaction to create
      required: true

    landingZoneProgressItem.landingZoneProgressItemDetails:
      content:
        application/json:
          schema:
            x-body-name: landingZoneProgressItemDetails
            $ref: "#/components/schemas/LandingZoneProgressItem"
      description: landingzonewan to create
      required: true

    landingZoneWAN.landingZoneWANDetails:
      content:
        application/json:
          schema:
            x-body-name: landingZoneWANDetails
            $ref: "#/components/schemas/LandingZoneWAN"
      description: landingzonewan to create
      required: true
      
    lzMetadata.lzMetadataListDetails:
        content:
          application/json:
            schema:
              x-body-name: lzMetadataListDetails
              $ref: "#/components/schemas/LZMetaDataList"
        description: landingzone  meta data to create
        required: true

    lzMetadata.lzLanVpcListDetails:
      content:
        application/json:
          schema:
            x-body-name: lzLanVpcListDetails
            $ref: "#/components/schemas/LZLanVpcList"
      description: landingzone meta data to create
      required: true            

    lzMetadata.lzMetadataEnvListDetails:
        content:
          application/json:
            schema:
              x-body-name: lzMetadataEnvListDetails
              $ref: "#/components/schemas/LZMetaDataEnvList"
        description: landingzone environment metadata to create
        required: true

    lzMetadata.lzMetadataFolderStructureDetails:
        content:
          application/json:
            schema:
              x-body-name: lzFolderStructureDetails
              $ref: "#/components/schemas/LZMetaDataFolderStructure"
        description: landingzone  folder structure meta data to create
        required: true
      
    bgpRoutingMode.bgpRoutingModeDetails:
      content:
        application/json:
          schema:
            x-body-name: bgpRoutingModeDetails
            $ref: "#/components/schemas/BGPRoutingMode"
      description: bgpRoutingMode to create
      required: true

    subnetMode.subnetModeDetails:
      content:
        application/json:
          schema:
            x-body-name: subnetModeDetails
            $ref: "#/components/schemas/SubnetMode"
      description: subnetMode to create
      required: true

    vpnOnPremiseVendor.vpnOnPremiseVendorDetails:
      content:
        application/json:
          schema:
            x-body-name: vpnOnPremiseVendorDetails
            $ref: "#/components/schemas/VPNOnPremiseVendor"
      description: vpnOnPremiseVendor to create
      required: true

    team.teamDetails:
      content:
        application/json:
          schema:
            x-body-name: teamDetails
            $ref: "#/components/schemas/Team"
      description: teamDetails to create
      required: true
    
    teammember.teamMemberDetails:
      content:
        application/json:
          schema:
            x-body-name: teamMemberDetails
            $ref: "#/components/schemas/TeamMember"
      description: teamMemberDetails to create
      required: true

    cloudRole.cloudRoleDetails:
      content:
        application/json:
          schema:
            x-body-name: cloudRoleDetails
            $ref: "#/components/schemas/CloudRole"
      description: cloudRoleDetails to create
      required: true

    user.userDetails:
      content:
        application/json:
          schema:
            x-body-name: userDetails
            $ref: "#/components/schemas/User"
      description: userDetails to create
      required: true

    userCloudRole.userCloudRoleDetails:
      content:
        application/json:
          schema:
            x-body-name: userCloudRoleDetails
            $ref: "#/components/schemas/UserRole"
      description: userCloudRoleDetails to create
      required: true

    environment.environmentDetails:
      content:
        application/json:
          schema:
            x-body-name: environmentDetails
            $ref: "#/components/schemas/LZEnvironment"
      description: environment to create
      required: true

    login.loginDetails:
      content:
        application/json:
          schema:
            x-body-name: login_details
            $ref: "#/components/schemas/Login"
      description: login details
      required: true
      
    solution.solutionDetails:
      content:
        application/json:
          schema:
            x-body-name: solutionDetails
            $ref: "#/components/schemas/Solution"
      description: solution to create
      required: true

    solution.solutionDeploymentPostDetails:
      content:
        application/json:
          schema:
            x-body-name: solutionDeploymentDetails
            type: object
            properties:
              id:
                type: integer
                description: The id of the solution that is being deployed

    solution.solutionDeploymentPutDetails:
      content:
        application/json:
          schema:
            x-body-name: solutionDeploymentDetails
            type: object
            properties:
              id:
                type: integer
                description: The id of the solution that is being deployed
              deployed:
                type: boolean
                description: The state of the deployment
              deploymentState:
                type: string
                description: The deployment state
              statusId:
                type: integer
                description: The error id
              statusCode:
                type: string
                description: The error code
              statusMessage:
                type: string
                description: The error message
              taskId:
                type: string
                nullable: true
                description: The task Id
      description: the solution id to deploy
      required: true

    solution.solutionEnvironmentDetails:  
      content:
        application/json:
          schema:
            x-body-name: solutionEnvironmentListDetails
            $ref: "#/components/schemas/SolutionEnvironmentList"
      description: Solution environment to create
      required: true                

    solutionresource.solutionResourceDetails:
      content:
        application/json:
          schema:
            x-body-name: solutionResourceDetails
            type: object
            properties:
              solutionId:
                type: integer
                description: The solution id
              key:
                type: string
                description: The solution resource key
              value:
                type: string
                description: The solution resource value
      description: the solution resource to create
      required: true

    solutionresourcejson.solutionResourceJSONDetails:
      content:
        application/json:
          schema:
            x-body-name: solutionResourceJSONDetails
            type: object
            properties:
              solutionId:
                type: integer
                description: The solution id
              json:
                type: string
                description: The JSON
      description: the solution resource JSON to create
      required: true

    folder.folderDetails:
      content:
        application/json:
          schema:
            x-body-name: folderDetails
            $ref: "#/components/schemas/Folder"
      description: the folder to create
      required: true

    notification.notificationListDetails:
      content:
        application/json:
          schema:      
            x-body-name: notificationListDetails    
            oneOf:
              - $ref: "#/components/schemas/NotificationActivatorList"                         
      description: the notifications to create
      required: true

    generic.keyValueDetails:
      content:
        application/json:
          schema:      
            x-body-name: keyValueDetails    
            $ref: "#/components/schemas/KeyValue"                         
      description: the key value to create
      required: true

  schemas:
    Activator:
      type: object
      properties:
        id:
          type: integer
          description: id
        isActive:
          type: boolean
          description: is active
        isFavourite:
          type: boolean
          description: is favourite
        name:
          type: string
          description: name
        type:
          type: string
          description: type
        available:
          type: boolean
          description: available
        sensitivity:
          type: string
          description: sensitivity
        category:
          type: string
          description: category
        envs:
          type: array
          description: envs
          items:
             type: string
        platforms:
          type: array
          description: platforms
          items:
             type: string
        lastUpdated:
          type: string
          description: "UTC/CUT last updated datetime stamp see: https://github.com/tranquilitybase-io/tb-houston-service/wiki/UTC-Timestamp"
        userCapacity:
          type: integer
          description: userCapacity
        serverCapacity:
          type: integer
          description: serverCapacity
        regions:
          type: array
          description: regions
          items:
             type: string
        hosting:
          type: array
          description: hosting
          items:
            type: string
        apiManagement:
          type: array
          items:
            type: string
        ci:
          type: array
          description: ci
          items:
            type: integer
        cd:
          type: array
          description: cd
          items:
            type: string
        sourceControl:
          type: array
          description: sourceControl
          items:
             type: string
        businessUnit:
          type: string
          description: businessUnit
        technologyOwner:
          type: string
          description: technologyOwner
        technologyOwnerEmail:
          type: string
          description: technologyOwnerEmail
        billing:
          type: string
          description: billing
        activator:
          type: string
          description: activator
        status:
          type: string
          description: status
        description:
          type: string
          description: description
        accessRequestedById:
          type: integer
          nullable: True
          description: accessRequestedById
        source:
          type: string
          description: source
        activatorLink:
          type: string
          description: activatorLink
        gitRepoUrl:
          type: string
          description: gitRepoUrl

    Application:
      type: object
      properties:
        id:
          type: integer
          description: id
        isActive:
          type: boolean
          description: is active
        lastUpdated:
          type: string
          description: last updated datetime UTC
        isFavourite:
          type: boolean
          description: is favourite
        solutionId:
          type: integer
          description: solutionId
        activatorId:
          type: integer
          description: activatorId
        name:
          type: string
          description: application
        env:
          type: string
          description: env
        status:
          type: string
          description: status
        description:
          type: string
          description: notes
        resources:
          type: array
          description: resources
          items:
            properties:
              ipaddress:
                type: string
                description: ipaddress
              name:
                type: string
                description: name

    ApplicationDeployment:
      type: object
      properties:
        id:
          type: integer
          description: The application id
        deploymentState:
          type: string
          description: Deployment state
        taskId:
          type: string
          nullable: true
          description: task id

    Team:
      type: object
      properties:
        id:
          type: integer
          description: id
        name:
          type: string
          description: name of the team
        description:
          type: string
          description: more details about the team
        businessUnitId:
          type: integer
          description: business unit to which the team belongs to
        lastUpdated:
          type: string
          description: last updated datetime
        isActive:
          type: boolean
          description: to activate/deactivate the team
        accessRequestedById:
          type: integer
          description: User who requested access to the team
     

    TeamMember:
      type: object
      properties:
        id:
          type: integer
          description:  id of the team member
        userId:
          type: integer
          description: user Id of the user
        teamId:
          type: integer
          description: team Id of the team
        isTeamAdmin:
          type: boolean
          description: True if a user is a Team admin 
        isActive:
          type: boolean
          description: to activate/deactivate user role from a team

    CloudRole:
      type: object
      properties:
        id:
          type: integer
          description:  id of the cloud urole
        name:
          type: string
          description: name of the role in eagle console
        cloudIdentityGroup:
          type: string
          description: name of the cloud identity group
        description:
          type: string
          description: description of the role
               
    BGPRoutingMode:
      type: object
      properties:
        id:
          type: integer
          description: id
        key:
          type: string
          description: key
        value:
          type: string
          description: value

    BusinessUnit:
      type: object
      properties:
        id:
          type: integer
          description: id
        name:
          type: string
          description: name of the business unit
        description:
          type: string
          description: more details about business unit
        isActive:
          type: boolean
          description: to activate/deactivate the business unit
    
    LZEnvironment:
      type: object
      properties:
        id:
          type: integer
          description: id
        name:
          type: string
          description: name
        isActive:
          type: boolean
          description: boolean

    LandingZoneAction:
      type: object
      properties:
        id:
          type: integer
          description: id
        title:
          type: string
          description: title
        categoryName:
          type: string
          description: categoryName
        categoryClass:
          type: string
          description: categoryClass
        completionRate:
          type: integer
          description: completionRate
        locked:
          type: boolean
          description: locked
        routerLink:
          type: string
          description: routerLink

    LandingZoneProgressItem:
      type: object
      properties:
        id:
          type: integer
          description: id
        label:
          type: string
          description: label
        completed:
          type: boolean
          description: completed

    CI:
      type: object
      properties:
        id:
          type: integer
          description: id
        value:
          type: string
          description: value

    CD:
      type: object
      properties:
        id:
          type: integer
          description: id of the CI
        value:
          type: string
          description: value

    SourceControl:
      type: object
      properties:
        id:
          type: integer
          description: id of the CI
        value:
          type: string
          description: value

    SubnetMode:
      type: object
      properties:
        id:
          type: integer
          description: id
        key:
          type: string
          description: key
        value:
          type: string
          description: value

    VPNOnPremiseVendor:
      type: object
      properties:
        id:
          type: integer
          description: id
        key:
          type: string
          description: key
        value:
          type: string
          description: value

    LandingZoneWAN:
      type: object
      properties:
        id:
          type: integer
          description: id
        googleSession:
          type: object
          properties:
            primaryGcpVpcSubnet:
              type: string
            primaryRegion:
              type: string
            primarySubnetName:
              type: string
            secondaryGcpVpcSubnet:
              type: string
            secondaryRegion:
              type: string
            secondarySubnetName:
              type: string
        onPremiseSession:
          type: object
          properties:
            primaryBgpPeer:
              type: string
            primaryPeerIp:
              type: string
            primaryPeerIpSubnet:
              type: string
            primarySharedSecret:
              type: string
            primaryVpnTunnel:
              type: string
            secondaryBgpPeer:
              type: string
            secondaryPeerIp:
              type: string
            secondaryPeerIpSubnet:
              type: string
            secondarySharedSecret:
              type: string
            secondaryVpnTunnel:
              type: string
            vendor:
              type: string
        vpn:
          type: object
          properties:
            bgpInterfaceNetLength:
              type: string
            bgpRoutingMode:
              type: string
            cloudRouterName:
              type: string
            description:
              type: string
            externalVpnGateway:
              type: string
            googleASN:
              type: integer
            haVpnGateway:
              type: string
            peerASN:
              type: integer
            projectName:
              type: string
            subnetMode:
              type: string
            vpcName:
              type: string

    Solution:
      type: object
      properties:
        id:
          type: integer
          description: The solution id
        isActive:
          type: boolean
          description: active
        isFavourite:
          type: boolean
          description: isFavourite      
        lastUpdated:
          type: string
          description: "UTC/CUT last updated datetime stamp see: https://github.com/tranquilitybase-io/tb-houston-service/wiki/UTC-Timestamp"
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        businessUnit:
          type: string
          description: businessUnit
        costCentre:
          type: string
          description: costCentre
        ciId:
          type: integer
          description: Id of ci
        cdId:
          type: integer
          description: Id of cd
        sourceControlId:
          type: integer
          description: Id ofsourceControl
          items:
            type: string
        teamId:
          type: integer
          description: teamId
        environments: 
          type: array
          items:
            type: integer
            description: environment ids

    SolutionDeployment:
      type: object
      properties:
        id:
          type: integer
          description: The solution id
        deployed:
          type: boolean
          description: Has the solution been deployed?
        deploymentState:
          type: string
          description: Deployment state
        statusId:
          type: integer
          description: status id
        statusCode:
          type: string
          description: status code
        statusMessage:
          type: string
          description: status message
        taskId:
          type: string
          nullable: true
          description: task id

    SolutionEnvironment:
      type: object
      properties:
        id:
          type: integer
          description: id
        solutionId:
          type: integer
          description: solutionId
        environmentId:
          type: integer
          description: environmentId          
        lastUpdated:
          type: string
          description:  description
        isActive:
          type: boolean
          description: Is active?

    SolutionEnvironmentList:
      type: array
      items:
        $ref: "#/components/schemas/SolutionEnvironment"          

    SolutionResource:
      type: object
      properties:
        id:
          type: integer
          description: The unique id
        solutionId:
          type: integer
          description: The solution id
        key:
          type: string
          description: The solution resource key
        value:
          type: string
          description: The solution resource value

    SolutionResourceJSON:
      type: object
      properties:
        id:
          type: integer
          description: The unique id
        solutionId:
          type: integer
          description: The solution id
        json:
          type: string
          description: The JSON

    User:
      type: object
      properties:
        id:
          type: integer
          description: id
        email:
          type: string
          description: email
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        showWelcome:
          type: boolean
          description: Show the welcome screen?

    UserRole:
      type: object
      properties:
        id:
          type: integer
          description:  id of the team member
        userId:
          type: integer
          description: user Id of the user
        roleId:
          type: integer
          description: role Id of the role of the user
        isActive:
          type: boolean
          description: to activate/deactivate user role from a team

      
    Login:
          type: object
          properties:
            username:
              type: string
              description: The email address
            password:
              type: string
              description: Password


    LZMetaDataList:
      type: object
      properties:
        name:
          type: string
          description: name/key of meta data
        isActive:
          type: boolean
          description: Is active?

    LZLanVpc:
      type: object
      properties:
        id:
          type: integer
          description: object id
        name:
          type: string
          description: LAN VPC name
        isActive:
          type: boolean
          description: Is active?
        environments: 
          type: array
          items:
            type: integer
            description: environment ids


    LZLanVpcList:
      type: array
      items:
        $ref: "#/components/schemas/LZLanVpc"

    LZLanVpcResponse:
      type: object
      properties:
        name:
          type: string
          description: LAN VPC name
        isActive:
          type: boolean
          description: Is active?
        environments: 
          type: array
          items:
            $ref: "#/components/schemas/LZEnvironment"    


    LZLanVpcResponseList:
      type: array
      items:
        $ref: "#/components/schemas/LZLanVpcResponse"


    LZMetaDataEnv:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        isActive:
          type: boolean

    
    LZMetaDataEnvList:
      type: array
      items:
        $ref: "#/components/schemas/LZMetaDataEnv"

    NotificationActivator:
      type: object
      properties:
        id:
          type: integer
        isActive:
          type: boolean
        fromUserId:
          type: integer
        toUserId:
          type: integer
        importance:
          type: integer
        message:
          type: string
        isRead:
          type: boolean
        activatorId:
          type: integer
      example:
        id: 1
        isActive: true
        toUserId: 1
        fromUserId: 0
        importance: 1
        message: User 1 would like access to Activator 1
        isRead: false
      
    NotificationActivatorList:
      type: array
      items:
        $ref: "#/components/schemas/NotificationActivator" 


    Folder:
      type: object
      properties:
        id:
          type: integer
          description: id
        parentFolderId: 
          type: string
          description: parentFolderId
        folderId: 
          type: string
          nullable: true
          description: folderId
        folderName:
          type: string
          description: folderName
        status:
          type: string
          description: status
        taskId:
          type: string
          nullable: true
          description: taskId

    LZMetaDataFolderStructure:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          isActive:
            type: boolean
          name:
            type: string
          children:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                isActive:
                  type: boolean
                name:
                  type: string
                children:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      isActive:
                        type: boolean
                      name:
                        type: string
                      children:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            isActive:
                              type: boolean
                            name:
                              type: string

    KeyValue:
      type: object
      properties:
        key:
          type: string
          description: The key
        value: 
          type: string
          description: The value
                       


