version: '3.1'

services:
  gcp-dac:
    container_name: gcp-dac
    image: gcr.io/eagle-console-resources/tb-gcp-dac:dev
    #    build:
    #      context: .
    #      dockerfile: Dockerfile
    ports:
      - 3100:3100
    links:
      - redis
    depends_on:
      - redis
    #    restart: always
    environment:
      # The location of the credentials file within the docker container.
      GOOGLE_APPLICATION_CREDENTIALS: /credentials.json
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_BACKEND: redis://redis:6379
      HOUSTON_SERVICE_URL: 'houston-service:3000'
    volumes:
      # replace <CREDENTIALS FILE> with the location of a Google service account's JSON credentials file - example below
      # - C:\dev\tb-gcp-dac\credentials.json:/credentials.json:ro
      #- <CREDENTIALS FILE>:/credentials.json
      - ./credentials.json:/credentials.json
      # replace <EC CONFIG FILE> with the location of the file - example below
      #      - C:\dev\tb-gcp-dac\ec-config.yaml:/app/ec-config.yaml:ro
      #- <EC CONFIG FILE>:/app/ec-config.yaml:ro
      - ./ec-config.yaml:/app/ec-config.yaml:ro

  redis:
    container_name: redis
    image: redis:alpine
    hostname: redis
  #    volumes:
  #      - redis.conf:/redis.conf
  #    command: [ "redis-server", "/redis.conf" ]

  worker:
    container_name: gcp-dac-worker
    image: gcr.io/eagle-console-resources/tb-gcp-dac:dev
    #    build:
    #      context: .
    #      dockerfile: Dockerfile
    hostname: worker
    command: celery -E -A celery_worker worker --loglevel=info
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /credentials.json
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_BACKEND: redis://redis:6379
      HOUSTON_SERVICE_URL: 'houston-service:3000'
    volumes:
      # replace <CREDENTIALS FILE> with the location of a Google service account's JSON credentials file - example below
      # - C:\dev\tb-gcp-dac\credentials.json:/credentials.json:ro
      #- <CREDENTIALS FILE>:/credentials.json
      - ./credentials.json:/credentials.json
      # replace <EC CONFIG FILE> with the location of the file - example below
      #      - C:\dev\tb-gcp-dac\ec-config.yaml:/app/ec-config.yaml:ro
      #- <EC CONFIG FILE>:/app/ec-config.yaml:ro
      - ./ec-config.yaml:/app/ec-config.yaml:ro
    links:
      - redis
    depends_on:
      - redis
      - gcp-dac
#    restart: always

  mysql57:
    image: gcr.io/eagle-console-resources/tb-houston-mysql57:dev
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: my-secret-pw
      MYSQL_USER: eagle-user
      MYSQL_PASSWORD: eagle-user-secret-pw
      MYSQL_DATABASE: eagle_db
    ports:
    - '3306:3306'

  houston-service:
    image: gcr.io/eagle-console-resources/tb-houston-service:dev
    restart: always
    environment:
        SQLALCHEMY_DATABASE_URI: 'mysql+mysqlconnector://eagle-user:eagle-user-secret-pw@mysql57/eagle_db'
        SQLALCHEMY_ECHO: 'False'
        SQLALCHEMY_TRACK_MODIFICATIONS: 'False'
        GCP_DAC_URL: 'gcp-dac:3100'
    depends_on:
        - mysql57
    ports:
      - 3000:3000
